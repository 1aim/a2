var searchIndex = {};
searchIndex["apns2"] = {"doc":"A library for sending push notifications to iOS devices using Apple&#39;s APNS\nAPI. Supports certificate based authentication through\n`apns2::client::CertificateClient` and JWT token based authentication\nthrough `apns2::client::TokenClient`.","items":[[0,"client","apns2","The APNs connection handling modules. `TokenClient` for connections using\nJWT authentication, `CertificateClient` when using a sertificate and a\nprivate key to authenticate. `ProviderResponse` handles responses and maps\nthe results to `APNSStatus` and `APNSError`.",null,null],[3,"TokenClient","apns2::client","",null,null],[12,"client","","",0,null],[3,"CertificateClient","","",null,null],[12,"client","","",1,null],[3,"ProviderResponse","","",null,null],[12,"requested_at","","",2,null],[4,"APNSStatus","","",null,null],[13,"Success","","Success",3,null],[13,"BadRequest","","Bad request",3,null],[13,"Forbidden","","There was an error with the certificate.",3,null],[13,"MethodNotAllowed","","The request used a bad method value. Only POST requests are support",3,null],[13,"Unregistered","","The device token is no longer active for the topic.",3,null],[13,"PayloadTooLarge","","The notification payload was too large.",3,null],[13,"TooManyRequests","","The server received too many requests for the same device token.",3,null],[13,"InternalServerError","","Internal server error",3,null],[13,"ServiceUnavailable","","The server is shutting down and unavailable.",3,null],[13,"MissingChannel","","The response channel died before getting a response",3,null],[13,"Timeout","","The request timed out",3,null],[13,"Unknown","","Unknown error",3,null],[4,"APNSError","","",null,null],[13,"PayloadEmpty","","The message payload was empty.",4,null],[13,"PayloadTooLarge","","The message payload was too large. The maximum payload size is 4096\nbytes.",4,null],[13,"BadTopic","","The apns-topic was invalid.",4,null],[13,"TopicDisallowed","","Pushing to this topic is not allowed.",4,null],[13,"BadMessageId","","The apns-id value is bad.",4,null],[13,"BadExpirationDate","","The apns-expiration value is bad.",4,null],[13,"BadPriority","","The apns-priority value is bad.",4,null],[13,"MissingDeviceToken","","The device token is not specified in the request `path`. Verify that the\n`path` header contains the device token.",4,null],[13,"BadDeviceToken","","The specified device token was bad. Verify that the request contains a\nvalid token and that the token matches the environment.",4,null],[13,"DeviceTokenNotForTopic","","The device token does not match the specified topic.",4,null],[13,"Unregistered","","The device token is inactive for the specified topic.",4,null],[13,"DuplicateHeaders","","One or more headers were repeated.",4,null],[13,"BadCertificateEnvironment","","The client certificate was for the wrong environment.",4,null],[13,"BadCertificate","","The certificate was bad.",4,null],[13,"Forbidden","","The specified action is not allowed.",4,null],[13,"InvalidProviderToken","","The provider token is not valid or the token signature could not be\nverified.",4,null],[13,"MissingProviderToken","","No provider certificate was used to connect to APNs and Authorization\nheader was missing or no provider token was specified.",4,null],[13,"ExpiredProviderToken","","The provider token is stale and a new token should be generated.",4,null],[13,"BadPath","","The request contained a bad `path` value.",4,null],[13,"MethodNotAllowed","","The specified `method` was not `POST`.",4,null],[13,"TooManyRequests","","Too many requests were made consecutively to the same device token.",4,null],[13,"IdleTimeout","","Idle timeout.",4,null],[13,"Shutdown","","The server is shutting down.",4,null],[13,"InternalServerError","","An internal server error occurred.",4,null],[13,"ServiceUnavailable","","The service is unavailable.",4,null],[13,"MissingTopic","","The apns-topic header of the request was not specified and was required.\nThe apns-topic header is mandatory when the client is connected using a\ncertificate that supports multiple topics.",4,null],[11,"new","","Create a new connection to APNs with custom certificate and key. Can be\nused to send notification to only one app.",1,{"inputs":[{"name":"bool"},{"name":"r"},{"name":"r"}],"output":{"name":"result"}}],[11,"push","","Send a notification.",1,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"description","","",4,null],[11,"cause","","",4,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"new","","",2,{"inputs":[{"name":"option"},{"name":"u64"}],"output":{"name":"providerresponse"}}],[11,"recv_timeout","","Blocks until having a response from APNS or the timeout is due.",2,null],[11,"new","","Create a new connection to APNs. `certificates` should point to system ca certificate\nfile. In Ubuntu it&#39;s usually `/etc/ssl/certs/ca-certificates.crt`.",0,{"inputs":[{"name":"bool"},{"name":"str"}],"output":{"name":"result"}}],[11,"push","","Send a push notification with a JWT signature.",0,null],[0,"notification","apns2","A helper struct for generating an APNS request.",null,null],[3,"Notification","apns2::notification","The Remote Notification.",null,null],[12,"payload","","The Remote Notification Payload.",5,null],[12,"device_token","","Specify the hexadecimal string of the device token for the target\ndevice.",5,null],[12,"options","","The optional settings for the notification",5,null],[3,"NotificationOptions","","Request headers.",null,null],[12,"apns_id","","A canonical UUID that identifies the notification.",6,null],[12,"apns_expiration","","A UNIX epoch date expressed in seconds (UTC).",6,null],[12,"apns_priority","","The priority of the notification.",6,null],[12,"apns_topic","","The topic of the remote notification, which is typically the bundle ID\nfor your app.",6,null],[11,"new","","",5,{"inputs":[{"name":"payload"},{"name":"str"},{"name":"notificationoptions"}],"output":{"name":"notification"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"notificationoptions"}}],[0,"payload","apns2","",null,null],[3,"Payload","apns2::payload","",null,null],[12,"aps","","The standard APNS payload data.",7,null],[12,"custom","","Custom data to be handled by the app.",7,null],[3,"CustomData","","",null,null],[12,"key","","The JSON root key for app specific custom data.",8,null],[12,"body","","The custom data.",8,null],[3,"APS","","The APS can contain one or more properties that specify the following user notification types:\n- an alert message to display to the user\n- a number to badge the app icon with\n- a sound to play",null,null],[12,"alert","","If this property is included, the system displays a standard alert or a banner,\nbased on the user’s setting.",9,null],[12,"badge","","The number to display as the badge of the app icon.",9,null],[12,"sound","","The name of a sound file in the app bundle or in the Library/Sounds folder of\nthe app’s data container.",9,null],[12,"content_available","","Provide this key with a value of 1 to indicate that new content is available.",9,null],[12,"category","","Provide this key with a string value that represents the identifier property.",9,null],[3,"APSLocalizedAlert","","Child properties of the alert property.",null,null],[12,"title","","A short string describing the purpose of the notification",10,null],[12,"body","","The text of the alert message.",10,null],[12,"title_loc_key","","The key to a title string in the Localizable.strings file for the current localization.",10,null],[12,"title_loc_args","","Variable string values to appear in place of the format specifiers in title-loc-key.",10,null],[12,"action_loc_key","","If a string is specified, the system displays an alert that includes the Close and View buttons.",10,null],[12,"loc_key","","A key to an alert-message string in a Localizable.strings file for the current localization.",10,null],[12,"loc_args","","Variable string values to appear in place of the format specifiers in loc-key.",10,null],[12,"launch_image","","The filename of an image file in the app bundle.\nThe image is used as the launch image when users tap the action button or move the action slider.",10,null],[4,"APSAlert","","Can specify a string or a dictionary as the value of alert.",null,null],[13,"Plain","","",11,null],[13,"Localized","","",11,null],[11,"new","","",7,{"inputs":[{"name":"apsalert"},{"name":"s"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"payload"}}],[11,"new_silent_notification","","",7,{"inputs":[{"name":"option"}],"output":{"name":"payload"}}],[11,"to_string","","",7,null],[11,"len","","",7,null],[11,"to_json","","",7,null],[11,"to_json","","",9,null],[11,"to_json","","",10,null],[0,"apns_token","apns2","A module for APNS JWT token management.",null,null],[3,"APNSToken","apns2::apns_token","",null,null],[4,"APNSTokenError","","",null,null],[13,"SignError","","",12,null],[13,"KeyParseError","","",12,null],[13,"KeyOpenError","","",12,null],[13,"KeyReadError","","",12,null],[13,"KeyGenerationError","","",12,null],[13,"KeyError","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"keyreaderror"}],"output":{"name":"apnstokenerror"}}],[11,"new","","Create a new APNSToken.",13,{"inputs":[{"name":"r"},{"name":"s"},{"name":"s"}],"output":{"name":"result"}}],[11,"signature","","Generates an authentication signature.",13,null],[11,"renew","","Sets a new timestamp for the token. APNs tokens are valid for 60 minutes until\nthey need to be renewed.",13,null],[11,"is_expired","","Info about the token expiration. If older than one hour, returns true.",13,null]],"paths":[[3,"TokenClient"],[3,"CertificateClient"],[3,"ProviderResponse"],[4,"APNSStatus"],[4,"APNSError"],[3,"Notification"],[3,"NotificationOptions"],[3,"Payload"],[3,"CustomData"],[3,"APS"],[3,"APSLocalizedAlert"],[4,"APSAlert"],[4,"APNSTokenError"],[3,"APNSToken"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["btls"] = {"doc":"btls: Relatively Bare-bones TLS library.","items":[[3,"ClientConfiguration","btls","Client configuration.",null,null],[3,"ClientSession","","A client TLS session.",null,null],[3,"ServerConfiguration","","Server configuration.",null,null],[3,"ServerSession","","A server TLS session.",null,null],[3,"TlsConnectionInfo","","Information about connection.",null,null],[12,"version","","The TLS version used (3 for TLS 1.2, 4 for TLS 1.3).",0,null],[12,"ems_available","","EMS available flag. Always set for TLS 1.3.",0,null],[12,"ciphersuite","","The used ciphersuite.",0,null],[12,"kex","","The used key exchange.",0,null],[12,"signature","","The used signature.",0,null],[3,"TxIrqFlag","","A TLS Session TX IRQ flag.",null,null],[4,"AbortReason","","Reason TLS connection got aborted.",null,null],[13,"MutualEof","","Mutual EOF.",1,null],[13,"ReadError","","Read error.",1,null],[13,"WriteError","","Write error.",1,null],[13,"RecvAlert","","Received alert.",1,null],[13,"SentAlert","","Sent alert.",1,null],[13,"HandshakeError","","Handshake error.",1,null],[4,"IoErrorOrTlsFailure","","IoError or TlsFailure",null,null],[13,"IoError","","std::io::Error (can&#39;t be resolved as btls::TlsFailure)",2,null],[13,"TlsFailure","","btls::TlsFailure",2,null],[5,"unwrap_tls_failure","","Take a IoResult error, and return embedded TlsFailure if any or return the original.",null,{"inputs":[{"name":"ioerror"}],"output":{"name":"ioerrorortlsfailure"}}],[11,"clone","","",3,null],[11,"from","","",3,null],[11,"new","","Create a client configuration with empty trust anchor list.",3,{"inputs":[],"output":{"name":"clientconfiguration"}}],[11,"add_alpn","","Add supported ALPN.",3,null],[11,"set_flags","","Set flags.",3,null],[11,"clear_flags","","Clear flags.",3,null],[11,"config_flags","","Set/Clear flags according to config string.",3,null],[11,"set_debug","","Set debugging mode.",3,null],[11,"add_ct_log","","Add a trusted certificate transparency log.",3,null],[11,"blacklist","","Add certificate blacklist entry.",3,null],[11,"disallow_server_rpk","","Disallow raw SPKI for server authentication.",3,null],[11,"make_session","","Make a new client session.",3,null],[11,"make_session_pinned","","Make a new client session with host-specific pins.",3,null],[11,"make_session_insecure_nocheck","","Make a client session WITH NO CHECKING WHATSOEVER.",3,null],[11,"clone","","",4,null],[11,"set_high_water_mark","","",4,null],[11,"set_send_threshold","","",4,null],[11,"bytes_available","","",4,null],[11,"bytes_queued","","",4,null],[11,"is_eof","","",4,null],[11,"wants_read","","",4,null],[11,"set_tx_irq","","",4,null],[11,"set_appdata_rx_fn","","",4,null],[11,"read_tls","","",4,null],[11,"submit_tls_record","","",4,null],[11,"write_tls","","",4,null],[11,"zerolatency_write","","",4,null],[11,"estimate_zerolatency_size","","",4,null],[11,"can_tx_data","","",4,null],[11,"handshake_completed","","",4,null],[11,"send_eof","","",4,null],[11,"aborted_by","","",4,null],[11,"extractor","","",4,null],[11,"get_alpn","","",4,null],[11,"get_server_names","","",4,null],[11,"get_sni","","",4,null],[11,"connection_info","","",4,null],[11,"get_record_size","","",4,null],[11,"begin_transacted_read","","",4,null],[11,"end_transacted_read","","",4,null],[11,"read","","",4,null],[11,"write","","",4,null],[11,"flush","","",4,null],[0,"client_certificates","","Types related to certificate handling on client",null,null],[3,"HostSpecificPin","btls::client_certificates","Host-specific certificate pin / trust anchor.",null,null],[12,"ca_flag","","CA or EE flag. If true, matches only CAs, if false, matches only EEs, if none, matches\nboth.",5,null],[12,"pin","","Pin flag. If set, the entry acts as a pin.",5,null],[12,"ta","","Trust Anchor flag. If set, the entry acts as a trust anchor.",5,null],[12,"spki","","SPKI flag. If set, entry matches SPKI, otherwise it matches entiere certificate.",5,null],[12,"data","","The data to match against.",5,null],[3,"TrustedLog","","A trusted log.",null,null],[12,"name","","Name of log.",6,null],[12,"key","","Log key (SPKI format).",6,null],[12,"v2_id","","Log Certificate Transparency v2 identifier (2-127 bytes, or empty if not v2 log).",6,null],[12,"v2_hash","","Log hash function for CTv2.",6,null],[12,"expiry","","Time log expired (if set, only precerts are accepted, and only up to this bound). If log is fully valid,\nthis is set to None.",6,null],[3,"TrustAnchor","","A trust anchor.",null,null],[4,"DataRepresentation","","Data representation",null,null],[13,"Value","","The actual value of data.",7,null],[13,"Sha256","","The SHA-256 hash of data.",7,null],[13,"Sha384","","The SHA-384 hash of data.",7,null],[13,"Sha512","","The SHA-512 hash of data.",7,null],[4,"LogHashFunction","","Hash function used by log.",null,null],[13,"Sha256","","SHA-256",8,null],[11,"clone","","",7,null],[11,"matches","","Does the specified data match the representation?",7,null],[11,"clone","","",5,null],[11,"trust_server_key_by_sha256","","Trust server key with specified SHA-256.",5,null],[11,"from_tlsa_raw","","Create a host specific pin from raw DNS TLSA data.",5,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"clone","","",6,null],[11,"clone","","",9,null],[11,"from_name_spki","","Create new trust anchor from subject name and SPKI.",9,null],[11,"from_certificate","","Create a trust anchor from DER-formatted certificate.",9,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"from_certificate_file","","Create a trust anchor from DER-formatted certificate file.",9,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[0,"error","btls","Errors that occur during various operations.",null,null],[4,"AcmeCertificateCreateError","btls::error","Error from creating ACME certifcate.",null,null],[13,"CantGenerateKeypair","","Can&#39;t generate keypair",10,null],[13,"CantGenerateCertificate","","Can&#39;t generate challenge certificate.",10,null],[4,"CertificateError","","Error in parsing certificate.",null,null],[13,"Toplevel","","Error in reading toplevel.",11,null],[13,"Version","","Error in parsing certificate version.",11,null],[13,"Serial","","Error in reading certificate serial.",11,null],[13,"SignatureAlgorithm","","Error in reading certificate signature algorithm.",11,null],[13,"Issuer","","Error in reading certificate issuer.",11,null],[13,"Validity","","Error in parsing certificate validity.",11,null],[13,"Subject","","Error in reading certificate subject.",11,null],[13,"SubjectPublicKeyInfo","","Error in reading certificate SubjectPublicKeyInfo.",11,null],[13,"SkipElements","","Error in reading skipped elements before extensions.",11,null],[13,"NoExtensions","","Certificate has no extensions.",11,null],[13,"Extensions","","Error in reading certificate extensions.",11,null],[13,"ExtensionEntry","","Error in parsing certificate extension.",11,null],[13,"AnyKeyUsageInEeCert","","AnyKeyUsage used in EE certificate.",11,null],[13,"NameConstraintsInEeCert","","Name constraints used in EE certificate.",11,null],[13,"NotCaCanSignCertificates","","Certificate is not CA but can sign certificates?",11,null],[13,"NonIntegralSignatureOctets","","The number of signature octets is not integral.",11,null],[4,"CertificateExtensionError","","Error parsing certificate extension.",null,null],[13,"Toplevel","","Error reading the extension toplevel.",12,null],[13,"Oid","","Error reading the extension OID.",12,null],[13,"Critical","","Error reading the extension critical flag",12,null],[13,"Value","","Error reading the extension value.",12,null],[13,"Eku","","Error reading the ExtendedKeyUsage list.",12,null],[13,"EkuEntry","","Error reading ExtendedKeyUsage list entry.",12,null],[13,"BasicConstraints","","Error reading BasicConstraints.",12,null],[13,"BasicConstraintsCa","","Error reading BasicConstraints CA flag.",12,null],[13,"BasicConstraintsPathlen","","Error reading BasicConstraints pathlen limit.",12,null],[13,"KeyUsage","","Error reading KeyUsage.",12,null],[13,"TlsFeature","","Error reading TlsFeature list.",12,null],[13,"TlsFeatureEntry","","Error reading TlsFeature list entry.",12,null],[13,"Sans","","Error parsing SANs.",12,null],[13,"NameConstraints","","Error parsing name constraints.",12,null],[13,"Scts","","Error reading SCTs.",12,null],[13,"SctsListOverflow","","SCT list overflows the extension value.",12,null],[13,"SctsEntryOverflow","","SCT entry overflows the SCT list.",12,null],[13,"UnrecognizedCritical","","Unrecognized critical extension.",12,null],[4,"CertificateTimestampError","","Error parsing a timestamp in certificate.",null,null],[13,"Read","","Error reading the entry.",13,null],[13,"Parse","","Error parsing entry into timestamp.",13,null],[4,"CertificateToplevelError","","Error reading certificate top level.",null,null],[13,"Toplevel","","Error reading the toplevel tag.",14,null],[13,"Tbs","","Error reading the TBS.",14,null],[13,"Algorithm","","Error reading the signature algorithm.",14,null],[13,"Signature","","Error reading the signature.",14,null],[4,"CertificateValidationError","","Error in validating certificate.",null,null],[13,"IntErrBadKeymap","","Internal error: Key map is inconsistent.",15,null],[13,"IntErrBadTamap","","Internal error: Trust Anchor map is inconsistent.",15,null],[13,"IntErrNoSubjRep","","Internal error: No subject represntative found.",15,null],[13,"IntErrNoIssRep","","Internal error: No issuer representative found.",15,null],[13,"IntErrBlankPath","","Internal error: Blank path constructed.",15,null],[13,"IntErrNoSubjId","","Internal error: No subject ID.",15,null],[13,"IntErrNoPlenEnt","","Internal error: No PathLen entry.",15,null],[13,"IntErrNoIssId","","Internal error: No Issuer ID.",15,null],[13,"IntErrNoIssFor","","Internal error: No issued for entry.",15,null],[13,"IntErrNoIssRev","","Internal error: No issued by entry.",15,null],[13,"IntErrNoIssForEnt","","Internal error: No issued for for entry.",15,null],[13,"IntErrNoRevSortMap","","Internal error: No reverse sort map.",15,null],[13,"IntErrBrokenLink","","Internal error: Broken link.",15,null],[13,"IntErrTooManyCerts","","Internal error: Too many certificates.",15,null],[13,"ConflictingKeys","","Conflicting keys.",15,null],[13,"EeSpkiExtraction","","Error extracting SPKI keys.",15,null],[13,"PathLenViolation","","Path length constraint violated.",15,null],[13,"OcspStapleRequred","","OCSP stapling is required.",15,null],[13,"SctStapleRequred","","SCT stapling is required.",15,null],[13,"EmsRequired","","EMS support is required.",15,null],[13,"Tls13Required","","TLS 1.3 is required.",15,null],[13,"SecureRenegoRequired","","Secure renegotiation is required.",15,null],[13,"RequireUnknownFeatures","","Certificate requires unknown features.",15,null],[13,"UnmetFeatures","","Certificate has unmet feature requirements.",15,null],[13,"CaCertParseError","","Error parsing CA certificate.",15,null],[13,"DidNotIssueEeCert","","CA did not issue EE certificate.",15,null],[13,"CaKillisted","","CA key is kill-listed.",15,null],[13,"CaCantHaveEeKeys","","CA keys collide with EE keys.",15,null],[13,"CaSignatureMismatch","","CA signature algorithm mismatch.",15,null],[13,"CaNotYetValid","","CA not yet valid.",15,null],[13,"CaExpired","","CA expired.",15,null],[13,"CaIsNotCa","","CA is not marked as a CA.",15,null],[13,"CaNotValidForTls","","CA certificate not valid for TLS.",15,null],[13,"CaSuperfluous","","CA certificate is superfluous.",15,null],[13,"NameConstraintViolation","","Name constraints violated.",15,null],[13,"CaBadSignatureAlgorithm","","CA uses bad signature algorithm.",15,null],[13,"EeCertParseError","","Error parsing EE certificate.",15,null],[13,"EeKillisted","","EE key is kill-listed.",15,null],[13,"EeSignatureMismatch","","EE signature algorithm mismatch.",15,null],[13,"EeNotValidForTls","","EE certificate not valid for TLS.",15,null],[13,"EeCertificateCa","","EE certificate is a CA.",15,null],[13,"EeNotValidForName","","EE certificate not valid for name.",15,null],[13,"EeNotYetValid","","EE certificate not yet valid.",15,null],[13,"EeExpired","","EE certificate expired.",15,null],[13,"SelfSigned","","EE certificate is self-signed.",15,null],[13,"EeBadSignatureAlgorithm","","EE certificate has bad signature algorithm.",15,null],[13,"NoIssuerCert","","No EE issuer certificate found.",15,null],[13,"NoCertifcatesMatchPins","","No certificates match pins.",15,null],[13,"CaUnknown","","Certificate not signed by any known CA.",15,null],[13,"SignatureFailure","","Signature verification failed.",15,null],[13,"PublicKeyMismatch","","Public key mismatch against provoded one.",15,null],[4,"CertificateValidityError","","Error parsing certificate validity.",null,null],[13,"Toplevel","","Error reading toplevel of validity.",16,null],[13,"NotBefore","","Error parsing certificate NotBefore.",16,null],[13,"NotAfter","","Error parsing certificate NotAfter.",16,null],[4,"CertificateVersionError","","Error in certificate version.",null,null],[13,"Read","","Error reading the certificate version.",17,null],[13,"NotV3Certificate","","The certificate is not X509v3 certificate.",17,null],[4,"NameConstraintsError","","Errro in parsing name constraints.",null,null],[13,"PermittedTag","","Error reading the permitted trees tag.",18,null],[13,"DisallowedTag","","Error reading the disallowed trees tag.",18,null],[13,"Permitted","","Error parsing the permitted trees name list.",18,null],[13,"Disallowed","","Error parsing the disallowed trees name list.",18,null],[13,"Toplevel","","Error reading the name constraints top level.",18,null],[4,"NameListError","","Error in parsing name list.",null,null],[13,"List","","Error reading name list toplevel.",19,null],[13,"Entry","","Error reading name list entry.",19,null],[13,"InvalidDnsName","","Invalid DNS name in entry.",19,null],[4,"OcspExtensionsError","","Error in processing OCSP extensions.",null,null],[13,"Toplevel","","Error reading the top level list.",20,null],[13,"Extension","","Error parsing individual extension.",20,null],[4,"OcspResponseError","","Error in OCSP Single Response",null,null],[13,"Toplevel","","Error parsing the toplevel of the response.",21,null],[13,"CertId","","Error parsing Certificate ID.",21,null],[13,"CertIdHashAlgo","","Error parsing hash algorithm in Certificate ID",21,null],[13,"CertIdHashAlgoOid","","Error parsing hash algorithm OID in Certificate ID",21,null],[13,"CertIdIssuerName","","Error parsing Issuer Name in Certificate ID",21,null],[13,"CertIdIssuerKey","","Error parsing Issuer Key in Certificate ID",21,null],[13,"CertIdSerialNumber","","Error parsing Serial Number in Certificate ID",21,null],[13,"CertIdWrongSerial","","Wrong serial number in Certificate ID",21,null],[13,"CertIdWrongIssuer","","Wrong issuer in Certificate ID",21,null],[13,"CertIdUnknownHash","","Unknown hash function in Certificate ID",21,null],[13,"CertificateStatus","","Error parsing certificate status",21,null],[13,"CertificateRevoked","","Certificate has been REVOKED.",21,null],[13,"CertificateUnknown","","Certificate status unknown.",21,null],[13,"UnknownStatus","","Unrecognized certificate status.",21,null],[13,"ThisUpdate","","Error parsing ThisUpdate field.",21,null],[13,"ThisUpdateParse","","Error parsing ThisUpdate field into timestamp.",21,null],[13,"ThisUpdateInFuture","","ThisUpdate is in the future.",21,null],[13,"NoNextUpdate","","No NextUpdate field.",21,null],[13,"NextUpdateO","","Error parsing NextUpdate field (outer).",21,null],[13,"NextUpdateI","","Error parsing NextUpdate field (inner).",21,null],[13,"NextUpdateParse","","Error parsing NextUpdate field into timestamp.",21,null],[13,"NextUpdateInPast","","NextUpdate is in the past (response expired).",21,null],[13,"Extensions","","Error parsing edxtensions.",21,null],[13,"ExtractScts","","Error extracting SCTs from the single response.",21,null],[4,"OcspValidationError","","Error in validating OCSP response.",null,null],[13,"SCertParse","","Error in parsing subject certificate.",22,null],[13,"RCertParse","","Error in parsing responder certificate.",22,null],[13,"BasicResponse","","Error in reading BasicResponse",22,null],[13,"ResponseSignatureError","","OCSP response signature does not verify.",22,null],[13,"ResponderSignatureError","","OCPS responder certificate signature does not verify.",22,null],[13,"ResponderNotYetValid","","Responder certificate is not yet valid.",22,null],[13,"ResponderExpired","","Responder certificate has expired.",22,null],[13,"ResponderNotValidForUse","","Responder certificate not valid EKU for OCSP responder.",22,null],[13,"ResponderNotIssuedByParent","","Responder certificate not issued by the issuer certificate.",22,null],[13,"MultipleResponderCertificates","","Multiple responder certificates were sent.",22,null],[13,"ResponderCert","","Error reading responder certificate element.",22,null],[13,"ResponderChainO","","Error reading responder chain element (outer).",22,null],[13,"ResponderChainI","","Error reading responder chain element (inner).",22,null],[13,"BrTbs","","Error reading TBS element of Basic Response.",22,null],[13,"BrSignature","","Error reading signature element of Basic Response.",22,null],[13,"BrSignatureAlgorithm","","Error reading signature algorithm element of Basic Response.",22,null],[13,"OcspResponseStatus","","Error reading response status element.",22,null],[13,"OcspResponseBytesO","","Error reading response bytes element (outer).",22,null],[13,"OcspResponseBytesI","","Error reading response bytes element (inner).",22,null],[13,"Toplevel","","Error reading top-level of OCSP response.",22,null],[13,"OcspResponseType","","Error reading OCSP response type element.",22,null],[13,"OcspNotBasicResponse","","OCSP response is not Basic Response.",22,null],[13,"BadResponseStatus","","Response status is bad",22,null],[13,"OcspResponseData","","Error in reading OCSP response data.",22,null],[13,"BrSignatureSanity","","Basic Response signature fails sanity check.",22,null],[13,"UnknownSignatureAlgo","","Unknown signature algorithm.",22,null],[13,"ResponderId","","Error in reading responder ID.",22,null],[13,"BadResponderId","","Responder ID is of bad type.",22,null],[13,"ProducedAt","","Error in reading OCSP ProducedAt.",22,null],[13,"ProducedAtParse","","Error in parsing OCSP ProducedAt into timestamp.",22,null],[13,"ProducedAtInFuture","","The OCSP ProducedAt is in the future.",22,null],[13,"SingleResponses","","Error in reading Single Responses list.",22,null],[13,"SingleResponse","","Error in parsing Single Responses entry.",22,null],[13,"NoSingleResponses","","There are no Single Responses in OCSP response.",22,null],[13,"Extensions","","Error in reading OCSP extensions.",22,null],[13,"ExtractScts","","Error in extracting SCTs from OCSP response.",22,null],[13,"CertificateRevoked","","Certificate has been REVOKED.",22,null],[4,"ResponseStatusError","","Bad response_status values",null,null],[13,"MalformedRequest","","Request was malformed.",23,null],[13,"InternalError","","Internal error in OCSP responder",23,null],[13,"TryLater","","Try again later.",23,null],[13,"SigRequired","","Signature required.",23,null],[13,"Unauthorized","","Unauthorized request.",23,null],[13,"Unknown","","Unknown error",23,null],[4,"SctError","","Error parsing/validating SCT.",null,null],[13,"TbsTooBig","","TBS serialization too big.",24,null],[13,"CertificateToplevelError","","Can&#39;t read certificate toplevel for SCT extraction.",24,null],[13,"CertificateTbsError","","Can&#39;t read certificate TBS for SCT extraction.",24,null],[13,"SctScratchNotBigEnough","","Scratch buffer not big enough.",24,null],[13,"TbsCertEntryReadFailed","","Can&#39;t read entry from TBS.",24,null],[13,"TbsCertInnertExtractFailed","","Can&#39;t read extensions inner SEUQENCE from TBS.",24,null],[13,"TbsCertExtExtractFailed","","Can&#39;t read extension SEUQENCE from TBS.",24,null],[13,"VSctSignatureFailed","","SCT signature validation failed.",24,null],[13,"Sha256IsNot32Bytes","","SHA-256 is not 32 bytes?",24,null],[13,"VSctEmpty","","SCT is empty.",24,null],[13,"VSctNoLogId","","SCT is missing log ID.",24,null],[13,"VSctNoTimestamp","","SCT is missing timestamp.",24,null],[13,"VSctNoExtensions","","SCT is missing extensions block.",24,null],[13,"VSctNoScheme","","SCT is missing signature scheme.",24,null],[13,"VSctNoSignature","","SCT is missing signature.",24,null],[4,"TimestampParseError","","Error in parsing timestamp.",null,null],[13,"InvalidDate","","The date is invalid.",25,null],[13,"InvalidTime","","The time is invalid.",25,null],[13,"UnrecognizedFormat","","Unrecognized time format.",25,null],[13,"BadUtcTime","","UTCTime notation is bad.",25,null],[13,"BadGeneralizedTime","","GeneralizedTime notation is bad.",25,null],[4,"HandshakeState","","The state of handshake.",null,null],[13,"ClientHello","","Next, client sends ClientHello to server.",26,null],[13,"HelloRestartRequest","","Next, the server will send HelloRestartRequest to client (this state is only valid on server and\nfor TLS 1.3).",26,null],[13,"RetryClientHello","","Next, client retries sending ClientHello to server (TLS 1.3 only).",26,null],[13,"ServerHello","","Next, server sends ServerHello to client.",26,null],[13,"ServerHelloWaitAgain","","The client is waiting for ServerHello in response to retry from the server (TLS 1.3 only, only valid\non client).",26,null],[13,"Tls12Certificate","","Next, the server will send TLS 1.2 Certificate message (TLS 1.2 only).",26,null],[13,"Tls12ServerKeyExchange","","Next, the server will send TLS 1.2 ServerKeyExchange message (TLS 1.2 only). Also, preceeding that message\nmay be CertificateStatus message from the server.",26,null],[13,"Tls12ServerHelloDone","","Next, the server will send TLS 1.2 ServerHelloDone message (TLS 1.2 only). Also, preceeding that message\nmay be CertificateRequest message from the server (on client only).",26,null],[13,"Tls12ClientCertificate","","Next, the client will send TLS 1.2 Certificate message NAKing authentication to the server (TLS 1.2 only,\nonly valid on client).",26,null],[13,"Tls12ClientKeyExchange","","Next, the client will send TLS 1.2 ClientKeyExchange message to the server (TLS 1.2 only).",26,null],[13,"Tls12ClientChangeCipherSpec","","Next, the client will send TLS 1.2 ChangeCipherSpec message to the server (TLS 1.2 only).",26,null],[13,"Tls12ClientFinished","","Next, the client will send TLS 1.2 Finished message to the server (TLS 1.2 only).",26,null],[13,"Tls12ServerChangeCipherSpec","","Next, the server will send TLS 1.2 ChangeCipherSpec message to the client (TLS 1.2 only).",26,null],[13,"Tls12ServerFinished","","Next, the server will send TLS 1.2 Finished message to the client (TLS 1.2 only).",26,null],[13,"Tls12Showtime","","TLS 1.2 connection is up and running.",26,null],[13,"Tls13EncryptedExtensions","","Next, the server will send TLS 1.3 EncryptedExtensions message to the client (TLS 1.3 only).",26,null],[13,"Tls13Certificate","","Next, the server will send TLS 1.3 Certificate message to the client (TLS 1.3 only).",26,null],[13,"Tls13CertificateVerify","","Next, the server will send TLS 1.3 CertificateVerify message to the client (TLS 1.3 only).",26,null],[13,"Tls13ServerFinished","","Next, the server will send TLS 1.3 Finished message to the client (TLS 1.3 only).",26,null],[13,"Tls13ClientCertificate","","Next, the client will send TLS 1.3 Certificate message, NAKing authentication to the server (TLS 1.3 only,\nonly valid on client).",26,null],[13,"Tls13ClientFinished","","Next, the client will send TLS 1.3 Finished to the server (TLS 1.3 only)",26,null],[13,"Tls13Showtime","","TLS 1.3 connection is up and running.",26,null],[13,"Error","","Handshake has failed.",26,null],[4,"TlsFailure","","Failure in TLS library.",null,null],[13,"UnsupportedVersion","","Unsupported TLS version.",27,null],[13,"ServerHelloNotAlignedTls13","","ServerHello does not end last fragment it is in.",27,null],[13,"ServerHelloDoneNotEmpty","","",27,null],[13,"FinishedNotAligned","","",27,null],[13,"InterlockSignatureMissing","","",27,null],[13,"KeyUpdateNotAligned","","",27,null],[13,"KeyUpdateBadLength","","",27,null],[13,"EmptyHandshakeMessage","","",27,null],[13,"CcsInMiddleOfHandshakeMessage","","",27,null],[13,"InvalidCcs","","",27,null],[13,"UnexpectedRtype","","",27,null],[13,"UnexpectedHandshakeMessage","","",27,null],[13,"UnexpectedCcs","","",27,null],[13,"NoNontrivialKex","","",27,null],[13,"MaxPrfSizeTooSmall","","",27,null],[13,"HsMsgBuffer","","",27,null],[13,"ClientHelloTooLong","","",27,null],[13,"AcmeValidationDone","","",27,null],[13,"TxSerializationOverflow","","",27,null],[13,"TxTooBig","","",27,null],[13,"TxSerializeOverflow","","",27,null],[13,"NoCertSelectorFuture","","",27,null],[13,"CertSelectorFutureError","","",27,null],[13,"NoCertificateAvailable","","",27,null],[13,"EmptyCertChain","","",27,null],[13,"EmptyOcsp","","",27,null],[13,"NoSignatureFuture","","",27,null],[13,"SignatureFutureError","","",27,null],[13,"CantSignTbs","","",27,null],[13,"CantRestoreSke","","",27,null],[13,"CantObtainSignatureTbs","","",27,null],[13,"SctListEmpty","","",27,null],[13,"ServerNameExpectList","","",27,null],[13,"ServerNameExpectEntryType","","",27,null],[13,"ServerNameExpectEntryContent","","",27,null],[13,"EmptyHostname","","",27,null],[13,"TooLongHostname","","",27,null],[13,"BogusHostname","","",27,null],[13,"AlpnExpectedList","","",27,null],[13,"AlpnExpectedEntry","","",27,null],[13,"EmptyAlpn","","",27,null],[13,"BogusAlpn","","",27,null],[13,"AlpnNoOverlap","","",27,null],[13,"SupGrpExpectedList","","",27,null],[13,"SupGrpExpectedGroup","","",27,null],[13,"SigAlgoExpectedList","","",27,null],[13,"SigAlgoExpectedAlgorithm","","",27,null],[13,"KeyShareExpectedList","","",27,null],[13,"KeyShareExpectedGroup","","",27,null],[13,"KeyShareExpectedContent","","",27,null],[13,"CkeCurveError","","",27,null],[13,"ChBogusTlsVersion","","",27,null],[13,"KeyShareCurveError","","",27,null],[13,"DhKeypairGenError","","",27,null],[13,"GenChalCertFailed","","",27,null],[13,"KeyShareDupGroup","","",27,null],[13,"InterlockOcsp","","",27,null],[13,"CantGetOwnDhPubKey","","",27,null],[13,"NoMutualCiphersuites","","",27,null],[13,"NoMutualGroups","","",27,null],[13,"NoKeyshareInTls13","","",27,null],[13,"ChExpectedVersion","","",27,null],[13,"ChExpectedRandom","","",27,null],[13,"ChExpectedSessionId","","",27,null],[13,"ChExpectedCiphersuites","","",27,null],[13,"ChExpectedCompressionMethods","","",27,null],[13,"ChExpectedExtensions","","",27,null],[13,"ChExpectedExtensionKind","","",27,null],[13,"ChExpectedExtensionPayload","","",27,null],[13,"ChUnsupportedClientVersion","","",27,null],[13,"ChBogusCompressionMethods","","",27,null],[13,"ChDuplicateExtension","","",27,null],[13,"ChJunkAfterExtension","","",27,null],[13,"ChSsl3NotSupported","","",27,null],[13,"ChTls10NotSupported","","",27,null],[13,"ChTls11NotSupported","","",27,null],[13,"SupVerJunkAfterList","","",27,null],[13,"SupVerExpectedVersionList","","",27,null],[13,"SupVerExpectedVersion","","",27,null],[13,"NoMutualTlsVersion","","",27,null],[13,"ChExpectedCiphersuite","","",27,null],[13,"InapporiateFallback","","",27,null],[13,"Ciphersuite0","","",27,null],[13,"NoMutualCompression","","",27,null],[13,"ChJunkAfterEnd","","",27,null],[13,"NoMutualCertificateType","","",27,null],[13,"SCertTypeExpectedList","","",27,null],[13,"SCertTypeExpectedFormat","","",27,null],[13,"KeyShareNotAllowedInTls12","","",27,null],[13,"ChRenegotiationAttackDetected","","",27,null],[13,"ShRenegotiationAttackDetected","","",27,null],[13,"Tls13RequresKeyShare","","",27,null],[13,"KeySharesNotSubsetSupGrp","","",27,null],[13,"ClientVulernableTHS","","",27,null],[13,"ClientVulernableRenego","","",27,null],[13,"ChDoubleRestart","","",27,null],[13,"CkeExpectedPublic","","",27,null],[13,"FinishedMacFailed","","",27,null],[13,"CantExtractSpki","","",27,null],[13,"InterlockCertificate","","",27,null],[13,"NullExtractor","","",27,null],[13,"BadTls12MsSize","","",27,null],[13,"KeyblockTooSmall","","",27,null],[13,"MasterblockTooSmall","","",27,null],[13,"CantCreateProtector","","",27,null],[13,"CantCreateDeprotector","","",27,null],[13,"TextOutputTooSmall","","",27,null],[13,"ConcatenationNotUtf8","","",27,null],[13,"InterlockNontrivalKex","","",27,null],[13,"WrongClientRandomLength","","",27,null],[13,"WrongServerRandomLength","","",27,null],[13,"TlsExtractorsRequireEmsOrTls13","","",27,null],[13,"Tls13ExporterLabelTooLong","","",27,null],[13,"Tls13ExporterContextTooLong","","",27,null],[13,"Tls13ExporterOutputTooLong","","",27,null],[13,"CantLockSession","","",27,null],[13,"CvSignatureFailed","","",27,null],[13,"SctRequiredForCert","","",27,null],[13,"CantParseIssuerCertificate","","",27,null],[13,"CkeWrongNumberOfShares","","",27,null],[13,"HrrExpectedVersion","","",27,null],[13,"HrrBogusTlsVersion","","",27,null],[13,"HrrTlsVersionUnsupported","","",27,null],[13,"HrrExpectedExtensionKind","","",27,null],[13,"HrrExpectedExtensionPayload","","",27,null],[13,"HrrDuplicateExtension","","",27,null],[13,"HrrExpectedKeyShare","","",27,null],[13,"HrrExpectedCookie","","",27,null],[13,"HrrUnsupportedExtension","","",27,null],[13,"HrrExpectedExtensions","","",27,null],[13,"HrrExpectedEnd","","",27,null],[13,"HrrBogusRestart","","",27,null],[13,"HrrAlreadyHadShare","","",27,null],[13,"HrrBogusCurve","","",27,null],[13,"AlpnExpectedLength1","","",27,null],[13,"AlpnExpectedLength2","","",27,null],[13,"AlpnEmptyProtocol","","",27,null],[13,"AlpnRawLengthTooBig","","",27,null],[13,"AlpnExpectedLen1Val","","",27,null],[13,"AlpnExpectedLen2Val","","",27,null],[13,"AlpnNonUtf8Protocol","","",27,null],[13,"AlpnBogusProtocol","","",27,null],[13,"SKeyShareExpectedGroup","","",27,null],[13,"SKeyShareExpectedKex","","",27,null],[13,"KeyShareGroupDisagreement","","",27,null],[13,"KeyShareBogusGroup","","",27,null],[13,"ShExpectedVersion","","",27,null],[13,"ShSsl3NotSupported","","",27,null],[13,"ShTls10NotSupported","","",27,null],[13,"ShTls11NotSupported","","",27,null],[13,"ShBogusVersion","","",27,null],[13,"ShUnsupportedTlsVersion","","",27,null],[13,"ShExpectedRandom","","",27,null],[13,"ShBadRandomLength","","",27,null],[13,"Tls13DowngradeAttack","","",27,null],[13,"ShExpectedSessionId","","",27,null],[13,"ShBogusCiphersuite","","",27,null],[13,"ShExpectedCiphersuite","","",27,null],[13,"ShBadTls12Cipher","","",27,null],[13,"ShBadTls13Cipher","","",27,null],[13,"ShExpectedCompression","","",27,null],[13,"ShBogusCompression","","",27,null],[13,"ShExpectedExtensionKind","","",27,null],[13,"ShExpectedExtensionPayload","","",27,null],[13,"ShDuplicateExtension","","",27,null],[13,"SctExpectedList","","",27,null],[13,"SctExpectedEntry","","",27,null],[13,"SCertTypeExpectedFormatE","","",27,null],[13,"ShUnsupportedExtension","","",27,null],[13,"ShJunkAfterExtension","","",27,null],[13,"ShExpectedExtensions","","",27,null],[13,"ShExpectedEnd","","",27,null],[13,"Tls13NoKeyShare","","",27,null],[13,"ServerVulernableTHS","","",27,null],[13,"ServerVulernableRenego","","",27,null],[13,"CertRequiresOcsp","","",27,null],[13,"CertRequiresSct","","",27,null],[13,"SkeExpectedCurveType","","",27,null],[13,"SkeBogusCurveType","","",27,null],[13,"SkeExpectedNamedcurve","","",27,null],[13,"SkeBogusCurve","","",27,null],[13,"SkeExpectedPublic","","",27,null],[13,"SkeCurveError","","",27,null],[13,"SkeExpectedAlgorithm","","",27,null],[13,"SkeBogusSignatureAlgo","","",27,null],[13,"SkeExpectedSignature","","",27,null],[13,"SkeExpectedEnd","","",27,null],[13,"SkeSignatureFailed","","",27,null],[13,"ServerKeyNotWhitelisted","","",27,null],[13,"EECertParseError","","",27,null],[13,"SCertTypeBogusType","","",27,null],[13,"ServerChainEmpty","","",27,null],[13,"EeCertificateEmpty","","",27,null],[13,"CsBogusOcspType","","",27,null],[13,"CantExtractSct12","","",27,null],[13,"OcspIncompleteCertificateChain","","",27,null],[13,"InvalidOcsp","","",27,null],[13,"CrExpectedContext","","",27,null],[13,"CrContextMustBeEmpty","","",27,null],[13,"CantExtractSct13","","",27,null],[13,"CertificateValidationFailed","","",27,null],[13,"CertExpectCertList","","",27,null],[13,"CertExpectIntermeidate","","",27,null],[13,"CertIntermediateEmpty","","",27,null],[13,"CertExpectedContext","","",27,null],[13,"CertExpectExtensionKind","","",27,null],[13,"CertExpectExtionPayload","","",27,null],[13,"CertDuplicateExtension","","",27,null],[13,"OcspExpectedType","","",27,null],[13,"OcspExpectedContent","","",27,null],[13,"SCertTypeInNotFirstCert","","",27,null],[13,"CertUnsupportedExtension","","",27,null],[13,"CertJunkAfterExtension","","",27,null],[13,"CertExpectedExtensions","","",27,null],[13,"CvExpectedAlgorithm","","",27,null],[13,"CvBogusSignatureAlgo","","",27,null],[13,"CvExpectedSignature","","",27,null],[13,"CvExpectedEnd","","",27,null],[13,"CsExpectedStatusType","","",27,null],[13,"CsExpectedResponse","","",27,null],[13,"CsEmptyResponse","","",27,null],[13,"EeExpectedExtensionKind","","",27,null],[13,"EeExpectedExtensionPayload","","",27,null],[13,"EeDuplicateExtension","","",27,null],[13,"EeUnsupportedExtension","","",27,null],[13,"EeJunkAfterExtension","","",27,null],[13,"EeExpectedExtensions","","",27,null],[13,"EeExpectedEnd","","",27,null],[13,"DeprotectionFailed","","",27,null],[13,"AppdataBeforeFinished","","",27,null],[13,"AppdataAfterEof","","",27,null],[13,"RecvAppdataRQueueEof","","",27,null],[13,"MaxRecordScratchOverflow","","",27,null],[13,"TxHandshakeMsgOver16MB","","",27,null],[13,"FragmentTooBig","","",27,null],[13,"InvalidFragRtype","","",27,null],[13,"PacketLengthOutOfWhack","","",27,null],[13,"RecordTooBig","","",27,null],[13,"NoPacketToProcess","","",27,null],[13,"ShortreadRecordHeader","","",27,null],[13,"RxRecordTooBig","","",27,null],[13,"PacketLengthToSendOutOfWhack","","",27,null],[13,"ProtectingPaceketFailed","","",27,null],[13,"TxQueueWriteFailed","","",27,null],[13,"NormalClose","","",27,null],[13,"ProtectingPaceketFailedZ","","",27,null],[13,"ReadDiscardFailed","","",27,null],[13,"ValidationHandshakeDone","","",27,null],[13,"NoRecordExpected","","",27,null],[13,"UnknownIoException","","",27,null],[13,"TxQueueEof","","",27,null],[13,"TxQueueDiscard","","",27,null],[13,"RxQueueEof","","",27,null],[13,"WQueueDataNotRead","","",27,null],[13,"StreamReadOverflow","","",27,null],[13,"NoTrustAnchors","","",27,null],[13,"CantLockAcmeChallenges","","",27,null],[13,"InternalConnection","","",27,null],[13,"TlsSessionError","","",27,null],[13,"IntErrNoIssuerSerial","","",27,null],[13,"SctValidationFailed","","",27,null],[4,"KeyAgreementError","","Error in key agreement.",null,null],[13,"AttemptedDheReuse","","Attempted to reuse DHE keypair.",28,null],[13,"PeerPublicKeyLengthInvalid","","Peer public key length invalid.",28,null],[13,"PeerPublicKeyInvalid","","Peer public key invalid.",28,null],[13,"CantExportPublicKey","","Can&#39;t export public key",28,null],[13,"CantGenerateDheKey","","Can&#39;t generate DHE keypair",28,null],[13,"X448NotSupported","","X448 not supported.",28,null],[13,"DummyPublicKey","","Dummy public key.",28,null],[4,"KeyLoadingError","","Error for local key pair",null,null],[13,"KeyDecodeError","","decoding error.",29,null],[13,"UnrecognizedPrivateKeyFormat","","Unrecognized private key format.",29,null],[13,"UnrecognizedKeyVersion","","Unrecognized key version.",29,null],[13,"CantReadKeyVersion","","Can&#39;t read private key version.",29,null],[13,"InvalidDer","","Private key is not valid DER.",29,null],[13,"UnknownPrivateKeyVersion","","Unknown private key version.",29,null],[13,"UnknownPrivateKeyType","","Unknown private key type",29,null],[13,"EcdsaKeypairsNotSupported","","ECDSA keypairs not supported.",29,null],[13,"CantConstructRsaSigningState","","Can&#39;t construct RSA signing state.",29,null],[13,"InvalidRsaKeypair","","Invalid RSA keypair.",29,null],[13,"BadRsaKeySize","","Bad RSA key size.",29,null],[13,"InvalidRsaE","","Invalid Rsa E.",29,null],[13,"CantReadRsaPrivateKeyVersion","","Can&#39;t read RSA private key version.",29,null],[13,"CantReadRsaN","","Can&#39;t read RSA n.",29,null],[13,"CantReadRsaE","","Can&#39;t read RSA e.",29,null],[13,"CantReadRsaTop","","Can&#39;t read RSA top.",29,null],[13,"InvalidEcdsaKeypair","","Invalid ECDSA keypair.",29,null],[13,"UnsupportedEcdsaCurve","","Unsupported ECDSA curve.",29,null],[13,"InvalidEd25519DataLength","","Invalid Ed25519 data length.",29,null],[13,"InvalidEd448DataLength","","Invalid Ed448 data length.",29,null],[13,"InvalidEd25519Keypair","","Invalid Ed25519 keypair.",29,null],[13,"InvalidEd448Keypair","","Invalid Ed448 keypair.",29,null],[13,"Module","","Error from module.",29,null],[4,"KeyReadError","","Error reading local key pair",null,null],[13,"ParseError","","Loading error.",30,null],[13,"OpenError","","Open error.",30,null],[13,"ReadError","","Read error.",30,null],[13,"KeyGenerationFailed","","Failed to generate transient key.",30,null],[4,"ModuleError","","Error from module.",null,null],[13,"CantLoadLibrary","","Can&#39;t load module library.",31,null],[13,"NotValidModule","","The module library doesn&#39;t have needed functions.",31,null],[13,"CantLockModules","","Can&#39;t lock module storage.",31,null],[13,"NoSuchKey","","No such key.",31,null],[13,"MalformedReference","","Malformed module reference.",31,null],[13,"OutOfLineRefsNotSupported","","Out-of-line references not supported by module.",31,null],[13,"InLineRefsNotSupported","","In-line references not supported by module.",31,null],[4,"Asn1Error","","Error from reading ASN.1 DER TLV.",null,null],[13,"Truncated","","Source data too short.",32,null],[13,"NotDer","","Noncanconical length",32,null],[13,"LengthTooBig","","Length too big.",32,null],[13,"TagTooBig","","Tag too big.",32,null],[13,"UnexpectedType","","Unexpected type.",32,null],[13,"ReadZero","","Iteration in repeated read didn&#39;t read anything.",32,null],[4,"Asn1Tag","","ASN.1 tag",null,null],[13,"Universal","","Universal tag.",33,null],[13,"Application","","Application-specific tag",33,null],[13,"ContextSpecific","","Context-specific tag",33,null],[13,"Private","","Private-use tag",33,null],[4,"QueueReadError","","Error from queue read operation.",null,null],[13,"Eof","","Queue has been EOF&#39;d.",34,null],[13,"NotEnoughData","","Amount to discard too big.",34,null],[4,"QueueWriteError","","Error from queue write operation.",null,null],[13,"Eof","","Queue has been EOF&#39;d.",35,null],[0,"features","btls","This module contains definitions of feature flags.",null,null],[3,"ConfigFlagsError","btls::features","Error from setting flags from admin config.",null,null],[12,"entry","","The errorneous entry.",36,null],[12,"kind","","The more precise error.",36,null],[4,"ConfigFlagsErrorKind","","Error from setting flags from admin config.",null,null],[13,"UnrecognizedSetting","","Unrecognized setting.",37,null],[13,"NoEffect","","Setting has no effect.",37,null],[13,"ArgumentRequired","","Setting requires argument.",37,null],[13,"NoArgument","","Setting has no argument.",37,null],[13,"Error","","Error setting the setting.",37,null],[5,"lookup_flag","","Look up a flag by name.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[17,"FLAGS0_ENABLE_TLS12","","Enable TLS 1.2 support.",null,null],[17,"FLAGS0_ENABLE_TLS13","","Enable TLS 1.3 support.",null,null],[17,"FLAGS0_REQUIRE_EMS","","Require EMS.",null,null],[17,"FLAGS0_REQUIRE_CT","","Require Certificate Transparency.",null,null],[17,"DEFAULT_FLAGS","","Default flags for page 0.",null,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"fmt","","",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"fmt","","",37,null],[0,"futures","btls","Simple implementation of futures.",null,null],[3,"FutureSender","btls::futures","A future sender.",null,null],[3,"FutureReceiver","","A future receiver.",null,null],[5,"create_future","","Create a future value.",null,null],[8,"FutureCallback","","A function to call when future has settled.",null,null],[10,"on_settled","","The future has settled.",38,null],[11,"clone","","",39,null],[11,"settle","","Cause the connected future receiver to settle.",39,null],[11,"clone","","",40,null],[11,"from","","",40,{"inputs":[{"name":"t"}],"output":{"name":"futurereceiver"}}],[11,"settled_cb","","Set function to call when the future settles.",40,null],[11,"settled","","Has the value settled yet?",40,null],[11,"read","","Read the settled value.",40,null],[0,"jose_jws","btls","JOSE JWS signing.",null,null],[3,"SignedJws","btls::jose_jws","The signed JWS.",null,null],[4,"JsonNode","","A node in JSON tree.",null,null],[13,"Null","","A JSON Null value.",41,null],[13,"Number","","A JSON number value (only integers are supported).",41,null],[13,"String","","A JSON string value.",41,null],[13,"Boolean","","A JSON boolean value.",41,null],[13,"Array","","A JSON array value.",41,null],[13,"Dictionary","","A JSON dictionar/map/object value.",41,null],[5,"sign_jws","","Sign a JWS and return to future resolving to the signature.",null,null],[5,"extract_jwk","","Extract JWK from `KeyPair`",null,{"inputs":[{"name":"k"}],"output":{"name":"result"}}],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"serialize","","Serialize the node and its subnodes into a text string.",41,null],[11,"serialize_bytes","","Serialize the node and its subnodes into a octet string.",41,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"to_compact","","Emit the signed JWS as compact serialization.",42,null],[11,"to_json","","Emit signed JWS as JSON serialization.",42,null],[0,"logging","btls","Types related to logging",null,null],[3,"NullLog","btls::logging","Null Log.",null,null],[3,"StderrLog","","Stderr Log.",null,null],[5,"bytes_as_hex","","Output string as hexes.",null,null],[5,"bytes_as_hex_block","","Output string as hexes block.",null,null],[5,"explain_hs_type","","Print human-readable name of handshake type",null,{"inputs":[{"name":"u8"}],"output":{"name":"cow"}}],[17,"DEBUG_HANDSHAKE_MSGS","","Debugging: Log handshake messages.",null,null],[17,"DEBUG_ABORTS","","Debugging: Log Aborts.",null,null],[17,"DEBUG_CRYPTO_CALCS","","Debugging: Log crypto calculations.",null,null],[17,"DEBUG_HANDSHAKE_DATA","","Debugging: Log Handshake message contents.",null,null],[17,"DEBUG_HANDSHAKE_EVENTS","","Debugging: Log Handshake events.",null,null],[8,"Logging","","Logging callback.",null,null],[10,"message","","Log a message.",43,null],[11,"message","","",44,null],[11,"message","","",45,null],[11,"clone","btls","",46,null],[11,"from","","",46,{"inputs":[{"name":"certificatelookup"}],"output":{"name":"serverconfiguration"}}],[11,"set_acme_dir","","Set ACME challenge path.",46,null],[11,"add_alpn","","Add supported ALPN.",46,null],[11,"set_flags","","Set flags.",46,null],[11,"clear_flags","","Clear flags.",46,null],[11,"config_flags","","Set/Clear flags according to config string.",46,null],[11,"create_acme_challenge","","Create an ACME challenge response endpoint.",46,null],[11,"delete_acme_challenge","","Delete an ACME challenge response endpoint.",46,null],[11,"set_debug","","Set debugging mode.",46,null],[11,"set_default_server_name","","Set default server name.",46,null],[11,"make_session","","Create a server session with these settings.",46,null],[11,"clone","","",47,null],[11,"set_high_water_mark","","",47,null],[11,"set_send_threshold","","",47,null],[11,"bytes_available","","",47,null],[11,"bytes_queued","","",47,null],[11,"is_eof","","",47,null],[11,"wants_read","","",47,null],[11,"set_tx_irq","","",47,null],[11,"set_appdata_rx_fn","","",47,null],[11,"read_tls","","",47,null],[11,"submit_tls_record","","",47,null],[11,"write_tls","","",47,null],[11,"zerolatency_write","","",47,null],[11,"estimate_zerolatency_size","","",47,null],[11,"can_tx_data","","",47,null],[11,"handshake_completed","","",47,null],[11,"send_eof","","",47,null],[11,"aborted_by","","",47,null],[11,"extractor","","",47,null],[11,"get_alpn","","",47,null],[11,"get_server_names","","",47,null],[11,"get_sni","","",47,null],[11,"connection_info","","",47,null],[11,"get_record_size","","",47,null],[11,"begin_transacted_read","","",47,null],[11,"end_transacted_read","","",47,null],[11,"read","","",47,null],[11,"write","","",47,null],[11,"flush","","",47,null],[0,"server_certificates","","Types related to server certificate store.",null,null],[3,"LocalServerCertificateHandle","btls::server_certificates","Handle for local certificate.",null,null],[3,"LocalServerCertificateStore","","A certificate lookup that uses local certificates and associated private keys.",null,null],[3,"CertificateDirectory","","Certificate store loaded from a directory",null,null],[3,"Certificate","","A single certificate",null,null],[12,"0","","",48,null],[3,"CertificateChain","","A certificate chain.",null,null],[12,"0","","",49,null],[3,"OcspResponse","","A single OCSP response.",null,null],[12,"0","","",50,null],[3,"StapledSct","","A single stapled SCT.",null,null],[12,"0","","",51,null],[3,"StapledSctList","","A list of stapled SCTs",null,null],[12,"0","","",52,null],[3,"CertificateLookupCriteria","","Lookup criteria for certificates.",null,null],[12,"sni","","The SNI name, or None if client sent none and there is no default.",53,null],[12,"sig_flags","","Bitwise OR of signature algorithms (SIGALGO_*) usable for CA signatures.",53,null],[12,"ee_flags","","Bitwise OR of signature algorithms (SIGALGO_*) usable for server key signatures.",53,null],[12,"tls13","","True if TLS 1.3 is in use.",53,null],[12,"__dummy","","Not used.",53,null],[11,"clone","","",54,null],[11,"eq","","",54,null],[11,"hash","","",54,null],[11,"clear_ocsp_staple","","Clear OCSP stapling for certificate.",54,null],[11,"set_ocsp_staple","","Add or update OCSP stapling for certificate.",54,null],[11,"set_ocsp_staple_file","","Add or update OCSP stapling for certificate from file.",54,null],[11,"set_ocsp_staple_file_multishot","","Add or update OCSP stapling for certificate from file, with auto-reload.",54,null],[11,"get_ocsp_last_multishot_error","","Get error from last failed OCSP multishot operation.",54,null],[11,"add_sct_staple","","Add or update SCT stapling for certificate.",54,null],[11,"add_sct_staple_file","","Add or update SCT stapling for certificate from file.",54,null],[11,"delete","","Delete the certificate from store.",54,null],[11,"clone","","",55,null],[11,"remote_to_local_handle","","Get local handle for remote handle.",55,null],[11,"deep_clone","","Deep-clone the certifcate store. The new store will be duplicate of the old one.",55,null],[11,"new","","Create a new certificate store.",55,{"inputs":[{"name":"l"}],"output":{"name":"localservercertificatestore"}}],[11,"add_privkey","","Add a private key into store.",55,null],[11,"add","","Add a certificate to store.",55,null],[11,"add_file","","Load a certificate from file.",55,null],[11,"add_trusted_log","","Add a trusted CT log.",55,null],[11,"lookup","","",55,null],[11,"clone_self","","",55,null],[11,"clone","","",56,null],[11,"new","","Create a new store that loads certificates from specified directory.",56,{"inputs":[{"name":"p"},{"name":"l"}],"output":{"name":"result"}}],[11,"lookup","","",56,null],[11,"clone_self","","",56,null],[17,"SIGALGO_RSA_PKCS1_SHA256","","RSA PKCS #1 v1.5 with SHA-256 hash.",null,null],[17,"SIGALGO_RSA_PKCS1_SHA384","","RSA PKCS #1 v1.5 with SHA-384 hash.",null,null],[17,"SIGALGO_RSA_PKCS1_SHA512","","RSA PKCS #1 v1.5 with SHA-512 hash.",null,null],[17,"SIGALGO_RSA_PSS_SHA256","","RSA PSS with SHA-256 hash.",null,null],[17,"SIGALGO_RSA_PSS_SHA384","","RSA PSS with SHA-384 hash.",null,null],[17,"SIGALGO_RSA_PSS_SHA512","","RSA PSS with SHA-512 hash.",null,null],[17,"SIGALGO_ECDSA_SHA256","","ECDSA P-256 with SHA-256 hash.",null,null],[17,"SIGALGO_ECDSA_SHA384","","ECDSA P-384 with SHA-384 hash.",null,null],[17,"SIGALGO_ECDSA_SHA512","","ECDSA P-512 with SHA-512 hash (not actually supported).",null,null],[17,"SIGALGO_ED25519","","Ed25519",null,null],[17,"SIGALGO_ED448","","Ed448",null,null],[17,"SIGALGO_RSA_MASK","","The mask for RSA-type signature algorithms.",null,null],[17,"SIGALGO_ECDSA_MASK","","The mask for ECDSA-type signature algorithms.",null,null],[17,"SIGALGO_TLS13_MASK","","The mask for TLS 1.3 OK signature algorithms.",null,null],[8,"CertificateSigner","","A certificate chain, plus signer for the associated private key.",null,null],[10,"sign","","Sign a message.",57,null],[10,"is_ecdsa","","Is ECDSA (also EdDSA)?",57,null],[10,"get_certificate","","Get the certificate chain.",57,null],[11,"get_ocsp","","Get OCSP staple for certificate.",57,null],[11,"get_scts","","Get SCT staples for certificate",57,null],[8,"CertificateLookup","","Certificate lookup.",null,null],[10,"lookup","","Look up a certificate.",58,null],[10,"clone_self","","Clone this object.",58,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[0,"server_keys","btls","Types related to server keys.",null,null],[3,"LocalKeyPair","btls::server_keys","Key pair that is implemented by signing using a private key.",null,null],[3,"EccExported","","",null,null],[12,"curve","","",59,null],[12,"x","","",59,null],[12,"y","","",59,null],[12,"k","","",59,null],[3,"GnutlsDatum","","",null,null],[3,"GnutlsDatumMalloc","","",null,null],[3,"GnutlsX509PrivkeyWrap","","",null,null],[3,"SubjectPublicKeyInfo","","A SubjectPublicKeyInfo.",null,null],[12,"0","","",60,null],[3,"SupportedSchemes","","Supported schemes.",null,null],[12,"0","","",61,null],[4,"KeyLoadingError","","Error for local key pair",null,null],[13,"KeyDecodeError","","decoding error.",29,null],[13,"UnrecognizedPrivateKeyFormat","","Unrecognized private key format.",29,null],[13,"UnrecognizedKeyVersion","","Unrecognized key version.",29,null],[13,"CantReadKeyVersion","","Can&#39;t read private key version.",29,null],[13,"InvalidDer","","Private key is not valid DER.",29,null],[13,"UnknownPrivateKeyVersion","","Unknown private key version.",29,null],[13,"UnknownPrivateKeyType","","Unknown private key type",29,null],[13,"EcdsaKeypairsNotSupported","","ECDSA keypairs not supported.",29,null],[13,"CantConstructRsaSigningState","","Can&#39;t construct RSA signing state.",29,null],[13,"InvalidRsaKeypair","","Invalid RSA keypair.",29,null],[13,"BadRsaKeySize","","Bad RSA key size.",29,null],[13,"InvalidRsaE","","Invalid Rsa E.",29,null],[13,"CantReadRsaPrivateKeyVersion","","Can&#39;t read RSA private key version.",29,null],[13,"CantReadRsaN","","Can&#39;t read RSA n.",29,null],[13,"CantReadRsaE","","Can&#39;t read RSA e.",29,null],[13,"CantReadRsaTop","","Can&#39;t read RSA top.",29,null],[13,"InvalidEcdsaKeypair","","Invalid ECDSA keypair.",29,null],[13,"UnsupportedEcdsaCurve","","Unsupported ECDSA curve.",29,null],[13,"InvalidEd25519DataLength","","Invalid Ed25519 data length.",29,null],[13,"InvalidEd448DataLength","","Invalid Ed448 data length.",29,null],[13,"InvalidEd25519Keypair","","Invalid Ed25519 keypair.",29,null],[13,"InvalidEd448Keypair","","Invalid Ed448 keypair.",29,null],[13,"Module","","Error from module.",29,null],[4,"KeyReadError","","Error reading local key pair",null,null],[13,"ParseError","","Loading error.",30,null],[13,"OpenError","","Open error.",30,null],[13,"ReadError","","Read error.",30,null],[13,"KeyGenerationFailed","","Failed to generate transient key.",30,null],[4,"ModuleError","","Error from module.",null,null],[13,"CantLoadLibrary","","Can&#39;t load module library.",31,null],[13,"NotValidModule","","The module library doesn&#39;t have needed functions.",31,null],[13,"CantLockModules","","Can&#39;t lock module storage.",31,null],[13,"NoSuchKey","","No such key.",31,null],[13,"MalformedReference","","Malformed module reference.",31,null],[13,"OutOfLineRefsNotSupported","","Out-of-line references not supported by module.",31,null],[13,"InLineRefsNotSupported","","In-line references not supported by module.",31,null],[11,"clone","btls::error","",31,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"new","btls::server_keys","",62,null],[11,"drop","","",63,null],[11,"new","","",63,{"inputs":[],"output":{"name":"gnutlsdatummalloc"}}],[11,"as_slice","","",63,null],[11,"drop","","",64,null],[11,"new","","",64,{"inputs":[],"output":{"name":"result"}}],[11,"export_ecc_raw","","",64,null],[11,"export_rsa_raw2","","",64,null],[11,"import","","",64,null],[11,"sign_data","","",64,null],[11,"generate","","",64,null],[11,"clone","btls::error","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",30,null],[11,"fmt","","",29,null],[11,"fmt","","",30,null],[11,"clone","btls::server_keys","",65,null],[11,"new","","Create a keypair out of `Read` trait value.",65,{"inputs":[{"name":"r1"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_file","","Create a keypair out of file.",65,{"inputs":[{"name":"p1"}],"output":{"name":"result"}}],[11,"sign","","",65,null],[11,"get_schemes","","",65,null],[11,"get_public_key","","",65,null],[8,"KeyPair","","A key pair (public key and private key).",null,null],[10,"sign","","Sign a message.",66,null],[10,"get_schemes","","Get list of TLS signature schemes this keypair is capable of signing with.",66,null],[10,"get_public_key","","",66,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"iter","","Forward iterator.",61,null],[11,"len","","Forward length.",61,null],[11,"clone","btls::error","",34,null],[11,"fmt","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"fmt","","",35,null],[11,"clone","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"tmatch","","",33,null],[11,"expected","","",33,null],[11,"fmt","","",33,null],[0,"test","btls","Internal testing stuff.",null,null],[3,"File","btls::test","A reference to an open file on the filesystem.",null,null],[5,"read_dir","","Returns an iterator over the entries within a directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"inputs":[],"output":{"name":"stderr"}}],[3,"Path","","A slice of a path (akin to [`str`]).",null,null],[3,"PathBuf","","An owned, mutable path (akin to [`String`]).",null,null],[3,"Builder","","Thread configuration. Provides detailed control over the properties\nand behavior of new threads.",null,null],[5,"sleep","","Puts the current thread to sleep for the specified amount of time.",null,null],[3,"AcmeCertificate","","ACME challenge certificate.",null,null],[3,"OcspDumpedScts","","Information about SCTs dumped from OCSP response.",null,null],[12,"list","","The list of SCTs.",67,null],[3,"OcspSanityCheckResults","","Structure containing results from basic OCSP sanity check.",null,null],[12,"issuer","","The issuer of the certificate.",68,null],[12,"responder_cert","","The responder certificate, if any.",68,null],[12,"sha1_allowed","","SHA-1 is allowed for OCSP signing?",68,null],[12,"basic_response","","The basic response.",68,null],[12,"tbs","","The TBS.",68,null],[12,"sig_algo","","The signature algorithm.",68,null],[12,"signature","","The signature.",68,null],[12,"not_before","","Not before.",68,null],[12,"not_after","","Not after.",68,null],[3,"OcspValidationResult","","Results of OCSP validation.",null,null],[3,"ParsedCertificate","","Parsed X.509 certificate",null,null],[12,"serial_number","","The certificate sequence number (only the interrior of INTEGER).",69,null],[12,"sig_algo1","","The signature algorithm from the signed data (only interrior of SEQUENCE).",69,null],[12,"issuer","","The certificate issuer (includes SEQUENCE header).",69,null],[12,"not_before","","The start of validity of the certificate (seconds relative to standard UNIX epoch).",69,null],[12,"not_after","","The end of validity of the certificate (seconds relative to standard UNIX epoch).",69,null],[12,"subject","","The certificate subject (includes SEQUENCE header).",69,null],[12,"pubkey","","The subject public key (SubjectPublicKeyInfo, SPKI; includes SEQUENCE header).",69,null],[12,"dnsnames","","The DNS names the certificate is valid for. Only meaningful for EE certs.",69,null],[12,"names_allow","","The DNS subtree permitting name constraints. Only meaningful for CA certs.",69,null],[12,"names_disallow","","The DNS subtree disallowing name constraints. Only meaningful for CA certs.",69,null],[12,"use_tls_serv","","The certificate is valid for TLS server authentication?",69,null],[12,"use_any","","The certificate is valid for any purpose?",69,null],[12,"use_ocsp","","The certificate is valid for OCSP signing?",69,null],[12,"can_sign","","The certificate can sign data?",69,null],[12,"is_ca","","The certificate is CA certificate?",69,null],[12,"max_path_len","","The path length constraint in certificate (None if none is specified).",69,null],[12,"req_flags","","The required TLS feature flags (CFLAG_*).",69,null],[12,"scts","","The embedded SCTs in certificate (these are precertificates).",69,null],[12,"tbs","","The entiere TBS certificaticate structure, with SEQUENCE header.",69,null],[12,"sig_algo2","","The signature algorithm from the unsigned data (only interrior of SEQUENCE).",69,null],[12,"signature","","The signature itself. The leading BIT STRING header and padding length byte has been stripped.",69,null],[12,"entiere","","The entiere certificate.",69,null],[3,"TrustAnchorValue","","A trust anchor",null,null],[12,"spki","","The SubjectPublicKeyInfo for the trust anchor. This includes the leading SEQUENCE header.",70,null],[12,"allowed_names","","The set of allowed names. If any names are present here, only these names are allowed. All subnames\nof given name are allowed.",70,null],[12,"disallowed_names","","The set of disallowed names. If name is present in both allowed_names and disallowed_names, then\ndisallowed_names takes precendence. All subnames of given name are disallowed.",70,null],[3,"HsBuffer","","",null,null],[3,"DevNull","","",null,null],[3,"Base64Decoder","","",null,null],[3,"Queue","","",null,null],[3,"SinkMarker","","A position marker in sink",null,null],[3,"Source","","Source that provodes data out of byte slice.",null,null],[3,"Asn1Tlv","","Parsed ASN.1 DER TLV",null,null],[12,"tag","","The tag.",71,null],[12,"value","","Source with payload.",71,null],[12,"raw_p","","Raw payload.",71,null],[12,"outer","","Raw outer (payload, including tag and length).",71,null],[3,"AnyAsn1Tag","","Match any ASN.1 Tag.",null,null],[3,"SliceMarker","","A saved position.",null,null],[3,"SecBuffer","","A Heap buffer that is wiped upon drop.",null,null],[3,"SecStackBuffer","","A stack buffer that is wiped upon drop.",null,null],[3,"SexprParseStream","","",null,null],[3,"TimeNow","","",null,null],[3,"HashOutput","","",null,null],[3,"DhfOutput","","",null,null],[3,"DhfPublicKey","","",null,null],[3,"HashInput","","",null,null],[3,"DummyDiffieHellmanKey","","",null,null],[4,"AcmeCertificateCreateError","","Error from creating ACME certifcate.",null,null],[13,"CantGenerateKeypair","","Can&#39;t generate keypair",10,null],[13,"CantGenerateCertificate","","Can&#39;t generate challenge certificate.",10,null],[4,"OcspExtensionsError","","Error in processing OCSP extensions.",null,null],[13,"Toplevel","","Error reading the top level list.",20,null],[13,"Extension","","Error parsing individual extension.",20,null],[4,"OcspResponseError","","Error in OCSP Single Response",null,null],[13,"Toplevel","","Error parsing the toplevel of the response.",21,null],[13,"CertId","","Error parsing Certificate ID.",21,null],[13,"CertIdHashAlgo","","Error parsing hash algorithm in Certificate ID",21,null],[13,"CertIdHashAlgoOid","","Error parsing hash algorithm OID in Certificate ID",21,null],[13,"CertIdIssuerName","","Error parsing Issuer Name in Certificate ID",21,null],[13,"CertIdIssuerKey","","Error parsing Issuer Key in Certificate ID",21,null],[13,"CertIdSerialNumber","","Error parsing Serial Number in Certificate ID",21,null],[13,"CertIdWrongSerial","","Wrong serial number in Certificate ID",21,null],[13,"CertIdWrongIssuer","","Wrong issuer in Certificate ID",21,null],[13,"CertIdUnknownHash","","Unknown hash function in Certificate ID",21,null],[13,"CertificateStatus","","Error parsing certificate status",21,null],[13,"CertificateRevoked","","Certificate has been REVOKED.",21,null],[13,"CertificateUnknown","","Certificate status unknown.",21,null],[13,"UnknownStatus","","Unrecognized certificate status.",21,null],[13,"ThisUpdate","","Error parsing ThisUpdate field.",21,null],[13,"ThisUpdateParse","","Error parsing ThisUpdate field into timestamp.",21,null],[13,"ThisUpdateInFuture","","ThisUpdate is in the future.",21,null],[13,"NoNextUpdate","","No NextUpdate field.",21,null],[13,"NextUpdateO","","Error parsing NextUpdate field (outer).",21,null],[13,"NextUpdateI","","Error parsing NextUpdate field (inner).",21,null],[13,"NextUpdateParse","","Error parsing NextUpdate field into timestamp.",21,null],[13,"NextUpdateInPast","","NextUpdate is in the past (response expired).",21,null],[13,"Extensions","","Error parsing edxtensions.",21,null],[13,"ExtractScts","","Error extracting SCTs from the single response.",21,null],[4,"OcspValidationError","","Error in validating OCSP response.",null,null],[13,"SCertParse","","Error in parsing subject certificate.",22,null],[13,"RCertParse","","Error in parsing responder certificate.",22,null],[13,"BasicResponse","","Error in reading BasicResponse",22,null],[13,"ResponseSignatureError","","OCSP response signature does not verify.",22,null],[13,"ResponderSignatureError","","OCPS responder certificate signature does not verify.",22,null],[13,"ResponderNotYetValid","","Responder certificate is not yet valid.",22,null],[13,"ResponderExpired","","Responder certificate has expired.",22,null],[13,"ResponderNotValidForUse","","Responder certificate not valid EKU for OCSP responder.",22,null],[13,"ResponderNotIssuedByParent","","Responder certificate not issued by the issuer certificate.",22,null],[13,"MultipleResponderCertificates","","Multiple responder certificates were sent.",22,null],[13,"ResponderCert","","Error reading responder certificate element.",22,null],[13,"ResponderChainO","","Error reading responder chain element (outer).",22,null],[13,"ResponderChainI","","Error reading responder chain element (inner).",22,null],[13,"BrTbs","","Error reading TBS element of Basic Response.",22,null],[13,"BrSignature","","Error reading signature element of Basic Response.",22,null],[13,"BrSignatureAlgorithm","","Error reading signature algorithm element of Basic Response.",22,null],[13,"OcspResponseStatus","","Error reading response status element.",22,null],[13,"OcspResponseBytesO","","Error reading response bytes element (outer).",22,null],[13,"OcspResponseBytesI","","Error reading response bytes element (inner).",22,null],[13,"Toplevel","","Error reading top-level of OCSP response.",22,null],[13,"OcspResponseType","","Error reading OCSP response type element.",22,null],[13,"OcspNotBasicResponse","","OCSP response is not Basic Response.",22,null],[13,"BadResponseStatus","","Response status is bad",22,null],[13,"OcspResponseData","","Error in reading OCSP response data.",22,null],[13,"BrSignatureSanity","","Basic Response signature fails sanity check.",22,null],[13,"UnknownSignatureAlgo","","Unknown signature algorithm.",22,null],[13,"ResponderId","","Error in reading responder ID.",22,null],[13,"BadResponderId","","Responder ID is of bad type.",22,null],[13,"ProducedAt","","Error in reading OCSP ProducedAt.",22,null],[13,"ProducedAtParse","","Error in parsing OCSP ProducedAt into timestamp.",22,null],[13,"ProducedAtInFuture","","The OCSP ProducedAt is in the future.",22,null],[13,"SingleResponses","","Error in reading Single Responses list.",22,null],[13,"SingleResponse","","Error in parsing Single Responses entry.",22,null],[13,"NoSingleResponses","","There are no Single Responses in OCSP response.",22,null],[13,"Extensions","","Error in reading OCSP extensions.",22,null],[13,"ExtractScts","","Error in extracting SCTs from OCSP response.",22,null],[13,"CertificateRevoked","","Certificate has been REVOKED.",22,null],[4,"ResponseStatusError","","Bad response_status values",null,null],[13,"MalformedRequest","","Request was malformed.",23,null],[13,"InternalError","","Internal error in OCSP responder",23,null],[13,"TryLater","","Try again later.",23,null],[13,"SigRequired","","Signature required.",23,null],[13,"Unauthorized","","Unauthorized request.",23,null],[13,"Unknown","","Unknown error",23,null],[4,"CertificateError","","Error in parsing certificate.",null,null],[13,"Toplevel","","Error in reading toplevel.",11,null],[13,"Version","","Error in parsing certificate version.",11,null],[13,"Serial","","Error in reading certificate serial.",11,null],[13,"SignatureAlgorithm","","Error in reading certificate signature algorithm.",11,null],[13,"Issuer","","Error in reading certificate issuer.",11,null],[13,"Validity","","Error in parsing certificate validity.",11,null],[13,"Subject","","Error in reading certificate subject.",11,null],[13,"SubjectPublicKeyInfo","","Error in reading certificate SubjectPublicKeyInfo.",11,null],[13,"SkipElements","","Error in reading skipped elements before extensions.",11,null],[13,"NoExtensions","","Certificate has no extensions.",11,null],[13,"Extensions","","Error in reading certificate extensions.",11,null],[13,"ExtensionEntry","","Error in parsing certificate extension.",11,null],[13,"AnyKeyUsageInEeCert","","AnyKeyUsage used in EE certificate.",11,null],[13,"NameConstraintsInEeCert","","Name constraints used in EE certificate.",11,null],[13,"NotCaCanSignCertificates","","Certificate is not CA but can sign certificates?",11,null],[13,"NonIntegralSignatureOctets","","The number of signature octets is not integral.",11,null],[4,"CertificateExtensionError","","Error parsing certificate extension.",null,null],[13,"Toplevel","","Error reading the extension toplevel.",12,null],[13,"Oid","","Error reading the extension OID.",12,null],[13,"Critical","","Error reading the extension critical flag",12,null],[13,"Value","","Error reading the extension value.",12,null],[13,"Eku","","Error reading the ExtendedKeyUsage list.",12,null],[13,"EkuEntry","","Error reading ExtendedKeyUsage list entry.",12,null],[13,"BasicConstraints","","Error reading BasicConstraints.",12,null],[13,"BasicConstraintsCa","","Error reading BasicConstraints CA flag.",12,null],[13,"BasicConstraintsPathlen","","Error reading BasicConstraints pathlen limit.",12,null],[13,"KeyUsage","","Error reading KeyUsage.",12,null],[13,"TlsFeature","","Error reading TlsFeature list.",12,null],[13,"TlsFeatureEntry","","Error reading TlsFeature list entry.",12,null],[13,"Sans","","Error parsing SANs.",12,null],[13,"NameConstraints","","Error parsing name constraints.",12,null],[13,"Scts","","Error reading SCTs.",12,null],[13,"SctsListOverflow","","SCT list overflows the extension value.",12,null],[13,"SctsEntryOverflow","","SCT entry overflows the SCT list.",12,null],[13,"UnrecognizedCritical","","Unrecognized critical extension.",12,null],[4,"CertificateTimestampError","","Error parsing a timestamp in certificate.",null,null],[13,"Read","","Error reading the entry.",13,null],[13,"Parse","","Error parsing entry into timestamp.",13,null],[4,"CertificateToplevelError","","Error reading certificate top level.",null,null],[13,"Toplevel","","Error reading the toplevel tag.",14,null],[13,"Tbs","","Error reading the TBS.",14,null],[13,"Algorithm","","Error reading the signature algorithm.",14,null],[13,"Signature","","Error reading the signature.",14,null],[4,"CertificateValidityError","","Error parsing certificate validity.",null,null],[13,"Toplevel","","Error reading toplevel of validity.",16,null],[13,"NotBefore","","Error parsing certificate NotBefore.",16,null],[13,"NotAfter","","Error parsing certificate NotAfter.",16,null],[4,"CertificateVersionError","","Error in certificate version.",null,null],[13,"Read","","Error reading the certificate version.",17,null],[13,"NotV3Certificate","","The certificate is not X509v3 certificate.",17,null],[4,"NameConstraintsError","","Errro in parsing name constraints.",null,null],[13,"PermittedTag","","Error reading the permitted trees tag.",18,null],[13,"DisallowedTag","","Error reading the disallowed trees tag.",18,null],[13,"Permitted","","Error parsing the permitted trees name list.",18,null],[13,"Disallowed","","Error parsing the disallowed trees name list.",18,null],[13,"Toplevel","","Error reading the name constraints top level.",18,null],[4,"NameListError","","Error in parsing name list.",null,null],[13,"List","","Error reading name list toplevel.",19,null],[13,"Entry","","Error reading name list entry.",19,null],[13,"InvalidDnsName","","Invalid DNS name in entry.",19,null],[4,"SctError","","Error parsing/validating SCT.",null,null],[13,"TbsTooBig","","TBS serialization too big.",24,null],[13,"CertificateToplevelError","","Can&#39;t read certificate toplevel for SCT extraction.",24,null],[13,"CertificateTbsError","","Can&#39;t read certificate TBS for SCT extraction.",24,null],[13,"SctScratchNotBigEnough","","Scratch buffer not big enough.",24,null],[13,"TbsCertEntryReadFailed","","Can&#39;t read entry from TBS.",24,null],[13,"TbsCertInnertExtractFailed","","Can&#39;t read extensions inner SEUQENCE from TBS.",24,null],[13,"TbsCertExtExtractFailed","","Can&#39;t read extension SEUQENCE from TBS.",24,null],[13,"VSctSignatureFailed","","SCT signature validation failed.",24,null],[13,"Sha256IsNot32Bytes","","SHA-256 is not 32 bytes?",24,null],[13,"VSctEmpty","","SCT is empty.",24,null],[13,"VSctNoLogId","","SCT is missing log ID.",24,null],[13,"VSctNoTimestamp","","SCT is missing timestamp.",24,null],[13,"VSctNoExtensions","","SCT is missing extensions block.",24,null],[13,"VSctNoScheme","","SCT is missing signature scheme.",24,null],[13,"VSctNoSignature","","SCT is missing signature.",24,null],[4,"KeyAlgorithm","","Signature algorithm key is for.",null,null],[13,"Rsa","","RSA",72,null],[13,"RsaPss","","RSA (PSS only)",72,null],[13,"EcdsaP256","","ECDSA with P-256.",72,null],[13,"EcdsaP384","","ECDSA with P-384.",72,null],[13,"Ed25519","","Ed25519",72,null],[13,"Ed448","","Ed448",72,null],[4,"SignatureAlgorithm","","Signature algorithm.",null,null],[13,"Tls","","TLS signature algorithm.",73,null],[13,"X509","","X.509 signature algorithm (the inner contents of SEQUENCE in X.509 Algorithm).",73,null],[4,"TimestampParseError","","Error in parsing timestamp.",null,null],[13,"InvalidDate","","The date is invalid.",25,null],[13,"InvalidTime","","The time is invalid.",25,null],[13,"UnrecognizedFormat","","Unrecognized time format.",25,null],[13,"BadUtcTime","","UTCTime notation is bad.",25,null],[13,"BadGeneralizedTime","","GeneralizedTime notation is bad.",25,null],[4,"CertificateValidationError","","Error in validating certificate.",null,null],[13,"IntErrBadKeymap","","Internal error: Key map is inconsistent.",15,null],[13,"IntErrBadTamap","","Internal error: Trust Anchor map is inconsistent.",15,null],[13,"IntErrNoSubjRep","","Internal error: No subject represntative found.",15,null],[13,"IntErrNoIssRep","","Internal error: No issuer representative found.",15,null],[13,"IntErrBlankPath","","Internal error: Blank path constructed.",15,null],[13,"IntErrNoSubjId","","Internal error: No subject ID.",15,null],[13,"IntErrNoPlenEnt","","Internal error: No PathLen entry.",15,null],[13,"IntErrNoIssId","","Internal error: No Issuer ID.",15,null],[13,"IntErrNoIssFor","","Internal error: No issued for entry.",15,null],[13,"IntErrNoIssRev","","Internal error: No issued by entry.",15,null],[13,"IntErrNoIssForEnt","","Internal error: No issued for for entry.",15,null],[13,"IntErrNoRevSortMap","","Internal error: No reverse sort map.",15,null],[13,"IntErrBrokenLink","","Internal error: Broken link.",15,null],[13,"IntErrTooManyCerts","","Internal error: Too many certificates.",15,null],[13,"ConflictingKeys","","Conflicting keys.",15,null],[13,"EeSpkiExtraction","","Error extracting SPKI keys.",15,null],[13,"PathLenViolation","","Path length constraint violated.",15,null],[13,"OcspStapleRequred","","OCSP stapling is required.",15,null],[13,"SctStapleRequred","","SCT stapling is required.",15,null],[13,"EmsRequired","","EMS support is required.",15,null],[13,"Tls13Required","","TLS 1.3 is required.",15,null],[13,"SecureRenegoRequired","","Secure renegotiation is required.",15,null],[13,"RequireUnknownFeatures","","Certificate requires unknown features.",15,null],[13,"UnmetFeatures","","Certificate has unmet feature requirements.",15,null],[13,"CaCertParseError","","Error parsing CA certificate.",15,null],[13,"DidNotIssueEeCert","","CA did not issue EE certificate.",15,null],[13,"CaKillisted","","CA key is kill-listed.",15,null],[13,"CaCantHaveEeKeys","","CA keys collide with EE keys.",15,null],[13,"CaSignatureMismatch","","CA signature algorithm mismatch.",15,null],[13,"CaNotYetValid","","CA not yet valid.",15,null],[13,"CaExpired","","CA expired.",15,null],[13,"CaIsNotCa","","CA is not marked as a CA.",15,null],[13,"CaNotValidForTls","","CA certificate not valid for TLS.",15,null],[13,"CaSuperfluous","","CA certificate is superfluous.",15,null],[13,"NameConstraintViolation","","Name constraints violated.",15,null],[13,"CaBadSignatureAlgorithm","","CA uses bad signature algorithm.",15,null],[13,"EeCertParseError","","Error parsing EE certificate.",15,null],[13,"EeKillisted","","EE key is kill-listed.",15,null],[13,"EeSignatureMismatch","","EE signature algorithm mismatch.",15,null],[13,"EeNotValidForTls","","EE certificate not valid for TLS.",15,null],[13,"EeCertificateCa","","EE certificate is a CA.",15,null],[13,"EeNotValidForName","","EE certificate not valid for name.",15,null],[13,"EeNotYetValid","","EE certificate not yet valid.",15,null],[13,"EeExpired","","EE certificate expired.",15,null],[13,"SelfSigned","","EE certificate is self-signed.",15,null],[13,"EeBadSignatureAlgorithm","","EE certificate has bad signature algorithm.",15,null],[13,"NoIssuerCert","","No EE issuer certificate found.",15,null],[13,"NoCertifcatesMatchPins","","No certificates match pins.",15,null],[13,"CaUnknown","","Certificate not signed by any known CA.",15,null],[13,"SignatureFailure","","Signature verification failed.",15,null],[13,"PublicKeyMismatch","","Public key mismatch against provoded one.",15,null],[4,"MajorCertProblem","","Variant for the TLS certificate error classification.",null,null],[13,"Bad","","TLS alert bad_certificate",74,null],[13,"Unsupported","","TLS alert unsupported_certificate",74,null],[13,"Expired","","TLS alert certificate_expired",74,null],[13,"Ocsp","","TLS alert bad_certificate_status_response",74,null],[13,"Unspecified","","TLS alert certificate_unknown",74,null],[13,"UnknownCa","","TLS alert unknown_ca",74,null],[4,"HsBufferError","","Error in handshake buffer.",null,null],[13,"HandshakeMsgTooLong","","Handshake message too long.",75,null],[4,"DecodingError","","Error in decoding.",null,null],[13,"InvalidBase64","","Base64 encoding invalid.",76,null],[13,"NotValidUtf8","","PEM is not valid UTF-8.",76,null],[13,"UnknownKeyType","","PEM file doesn&#39;t look like any known key type (ECDSA).",76,null],[13,"RsaKeyTooSmall","","RSA key too small.",76,null],[13,"RsaKeyBadSize","","",76,null],[13,"CantSerializeRsaKey","","Can&#39;t serialize RSA key.",76,null],[13,"CantSerializeEcdsaKey","","Can&#39;t serialize ECDSA key.",76,null],[13,"CwkInvalidCbor","","CWK contains invalid CBOR",76,null],[13,"JwkInvalidJson","","JWK contains invalid JSON",76,null],[13,"NoKeyType","","No key type in keypair.",76,null],[13,"NoCurve","","No curve in CWK.",76,null],[13,"UnknownCurve","","Unknown curve in CWK.",76,null],[13,"BadEd25519d","","Bad length for Ed25519 d.",76,null],[13,"BadEd25519x","","Bad length for Ed25519 x.",76,null],[13,"BadEd448d","","Bad length for Ed448 d.",76,null],[13,"BadEd448x","","Bad length for Ed448 x.",76,null],[13,"WkNoOkpSubtype","","No OKP subtype.",76,null],[13,"WkUnknownOkpSubtype","","Unknown OKP subtype.",76,null],[13,"WkToplevelNotDictionary","","CWK toplevel is not dictionary,",76,null],[13,"SexpUnknownKeyType","","S-Exp unknown key type",76,null],[13,"SexpListTruncated","","S-Exp list truncated.",76,null],[13,"SexpListTooLong","","S-Exp list too long.",76,null],[13,"WkNoParameter","","No parameter for CWK/JWK",76,null],[13,"WkBadParameter","","Bad parameter for CWK/JWK",76,null],[13,"IoError","","I/O error.",76,null],[13,"ElementNotAsn1","","PEM Element is not ASN.1",76,null],[13,"ExpectedOne","","Expected exactly one PEM element,",76,null],[4,"QueueReadError","","Error from queue read operation.",null,null],[13,"Eof","","Queue has been EOF&#39;d.",34,null],[13,"NotEnoughData","","Amount to discard too big.",34,null],[4,"QueueWriteError","","Error from queue write operation.",null,null],[13,"Eof","","Queue has been EOF&#39;d.",35,null],[4,"Length","","",null,null],[13,"U8","","",77,null],[13,"U16","","",77,null],[13,"U24","","",77,null],[4,"Asn1Error","","Error from reading ASN.1 DER TLV.",null,null],[13,"Truncated","","Source data too short.",32,null],[13,"NotDer","","Noncanconical length",32,null],[13,"LengthTooBig","","Length too big.",32,null],[13,"TagTooBig","","Tag too big.",32,null],[13,"UnexpectedType","","Unexpected type.",32,null],[13,"ReadZero","","Iteration in repeated read didn&#39;t read anything.",32,null],[4,"Asn1Tag","","ASN.1 tag",null,null],[13,"Universal","","Universal tag.",33,null],[13,"Application","","Application-specific tag",33,null],[13,"ContextSpecific","","Context-specific tag",33,null],[13,"Private","","Private-use tag",33,null],[4,"JsonNode","","",null,null],[13,"Null","","",78,null],[13,"Number","","",78,null],[13,"String","","",78,null],[13,"Boolean","","",78,null],[13,"Array","","",78,null],[13,"Dictionary","","",78,null],[4,"CborNode","","",null,null],[13,"Integer","","",79,null],[13,"NegInteger","","",79,null],[13,"Octets","","",79,null],[13,"String","","",79,null],[13,"Array","","",79,null],[13,"Dictionary","","",79,null],[13,"Tag","","",79,null],[13,"Simple","","",79,null],[13,"HalfFloat","","",79,null],[13,"Float","","",79,null],[13,"Double","","",79,null],[4,"SexprNode","","",null,null],[13,"StartList","","",80,null],[13,"EndList","","",80,null],[13,"Data","","",80,null],[4,"KeyAgreementError","","Error in key agreement.",null,null],[13,"AttemptedDheReuse","","Attempted to reuse DHE keypair.",28,null],[13,"PeerPublicKeyLengthInvalid","","Peer public key length invalid.",28,null],[13,"PeerPublicKeyInvalid","","Peer public key invalid.",28,null],[13,"CantExportPublicKey","","Can&#39;t export public key",28,null],[13,"CantGenerateDheKey","","Can&#39;t generate DHE keypair",28,null],[13,"X448NotSupported","","X448 not supported.",28,null],[13,"DummyPublicKey","","Dummy public key.",28,null],[4,"RngError","","Error in random number generator.",null,null],[13,"RngFailure","","Random number generator failed!",81,null],[4,"ProtectorType","","",null,null],[13,"Aes128Gcm","","",82,null],[13,"Aes256Gcm","","",82,null],[13,"Chacha20Poly1305","","",82,null],[4,"KeyExchangeType","","",null,null],[13,"Tls12EcdheRsa","","",83,null],[13,"Tls12EcdheEcdsa","","",83,null],[13,"Tls13","","",83,null],[4,"HashFunction","","",null,null],[13,"Sha256","","",84,null],[13,"Sha384","","",84,null],[4,"ChecksumFunction","","",null,null],[13,"Sha1Insecure","","",85,null],[13,"Sha256","","",85,null],[13,"Sha384","","",85,null],[13,"Sha512","","",85,null],[4,"SignatureType","","",null,null],[13,"RsaPkcs1Sha256","","",86,null],[13,"RsaPkcs1Sha384","","",86,null],[13,"RsaPkcs1Sha512","","",86,null],[13,"RsaPssSha256","","",86,null],[13,"RsaPssSha384","","",86,null],[13,"RsaPssSha512","","",86,null],[13,"EcdsaSha256","","",86,null],[13,"EcdsaSha384","","",86,null],[13,"EcdsaSha512","","",86,null],[13,"Ed25519","","",86,null],[13,"Ed448","","",86,null],[4,"Dhf","","",null,null],[13,"NsaP256","","",87,null],[13,"NsaP384","","",87,null],[13,"X25519","","",87,null],[13,"X448","","",87,null],[5,"extract_spki","","Extract the SPKI (SubjectPublicKeyInfo) from certificate",null,null],[5,"trans_asn1_oid","","Translate ASN.1 OID into textual representation.",null,null],[5,"validate_scts","","Validate a list of SCTs.",null,null],[5,"check_sig_algorithm_supported","","Is specified signature algorithm supported?",null,{"inputs":[{"name":"signaturealgorithm"}],"output":{"name":"bool"}}],[5,"check_sig_algorithm_supported_sha1","","Is specified signature algorithm supported (with SHA-1 allowed)?",null,{"inputs":[{"name":"signaturealgorithm"}],"output":{"name":"bool"}}],[5,"extract_key_algorithm","","Extract the algorithm for key.",null,null],[5,"validate_signature","","Validate a signature under specified key.",null,null],[5,"decode_ts_for_user","","Decode timestamp to human-readable format.",null,{"inputs":[{"name":"i64"},{"name":"bool"}],"output":{"name":"string"}}],[5,"interpret_timestamp","","Interpret an ASN.1 timestamp",null,{"inputs":[{"name":"asn1tag"},{"name":"source"}],"output":{"name":"result"}}],[5,"sanity_check_certificate_chain","","Sanity-check a certificate chain. The following checks are done:",null,null],[5,"sanity_check_certificate_chain_load","","Do Load-time sanity-check a certificate chain. Does the same checks as sanity_check_certificate_chain, except the\nfollowing:\n - The signature algorithm check is unconditionally done.\n - Reference SAN check is never done.\n - There is no callback for postcheck.\n - Of feature flags, only unknown ones are checked.\n - Killist is not checked.\n - The public key is checked against the given one.",null,null],[5,"validate_chain","","",null,null],[5,"validate_ee_spki","","Validate EE SPKI against host pins.",null,null],[5,"name_in_set2","","Check that specified reference name is in specified set (also considering wildcards).",null,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"bool"}}],[5,"looks_like_pem","","",null,null],[5,"decode_pem","","",null,null],[5,"convert_key_from_pem","","",null,null],[5,"convert_key_from_cwk","","",null,null],[5,"convert_key_from_jwk","","",null,null],[5,"convert_key_from_sexpr","","",null,null],[5,"is_single_asn1_structure","","Is the slice a single ASN.1 structure or not?",null,null],[5,"wipe_buffer","","Wipe a buffer",null,null],[5,"slice_eq_ct","","",null,null],[5,"checksum","","",null,null],[5,"secure_random","","",null,null],[5,"aes_gcm_is_hw","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"is_executable","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[5,"is_socket","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[5,"generate_ed25519_pubkey","","",null,null],[5,"generate_ed448_pubkey","","",null,null],[6,"ChecksumOutput","","",null,null],[7,"X509_CSR_EXT_REQ","","OID for X.509 CSR request extensions.",null,null],[7,"X509_EKU_ANY","","OID for X.509 AnyEKU EKU.",null,null],[7,"X509_EKU_OCSP","","OID for X.509 OCSP responder EKU.",null,null],[7,"X509_EKU_TLS_SERVER","","OID for X.509 TLS server authentication EKU.",null,null],[7,"X509_EXT_BASIC_CONSTRAINTS","","OID for X.509 BasicConstraints extension.",null,null],[7,"X509_EXT_EKU","","OID for X.509 ExtendedKeyUage extension.",null,null],[7,"X509_EXT_KEY_USAGE","","OID for X.509 KeyUsage extension.",null,null],[7,"X509_EXT_NAME_CONSTRAINTS","","OID for X.509 NameConstraints extension.",null,null],[7,"X509_EXT_SAN","","OID for X.509 SubjectAlternativeName extension.",null,null],[7,"X509_EXT_SCT","","OID for X.509 Signed Certificate Timestamp extension.",null,null],[7,"X509_EXT_TLS_FEATURE","","OID for X.509 TLS Feature extension.",null,null],[7,"X509_OCSP_BASIC_RESPONSE","","OID for X.509 OCSP BasicResponse.",null,null],[7,"X509_OCSP_SCT","","OID for X.509 OCSP SCT.",null,null],[7,"X509_SUBJECT_COMMON_NAME","","OID for X.509 Subject CommonName.",null,null],[7,"X509_SUBJECT_SERIAL_NUMBER","","OID for X.509 Subject SerialNumber.",null,null],[7,"CURVE_NSA_P256","","OID for NSA P-256 curve.",null,null],[7,"CURVE_NSA_P384","","OID for NSA P-384 curve.",null,null],[7,"ECDSA_KEY_OID","","OID for ECDSA keys.",null,null],[7,"ECDSA_SHA256_OID","","OID (including headers) for ECDSA signature with SHA-256.",null,null],[7,"ECDSA_SHA384_OID","","OID (including headers) for ECDSA signature with SHA-384.",null,null],[7,"ECDSA_SHA512_OID","","OID (including headers) for ECDSA signature with SHA-512.",null,null],[7,"ED25519_OID","","OID for Ed25519 algorithm.",null,null],[7,"ED448_OID","","OID for Ed448 algorithm.",null,null],[7,"LONG_ED25519_OID","","OID for Ed25519 algorithm (with header).",null,null],[7,"LONG_ED448_OID","","OID for Ed448 algorithm (with header).",null,null],[7,"RSA_KEY_OID","","OID for RSA keys.",null,null],[7,"RSA_PSS_KEY_OID","","OID for RSA (PSS only) keys.",null,null],[7,"RSA_PKCS1_SHA256_OID","","OID&amp;Parameters for RSA-PKCS1v1.5 signature with SHA-256.",null,null],[7,"RSA_PKCS1_SHA384_OID","","OID&amp;Parameters for RSA-PKCS1v1.5 signature with SHA-384.",null,null],[7,"RSA_PKCS1_SHA512_OID","","OID&amp;Parameters for RSA-PKCS1v1.5 signature with SHA-512.",null,null],[7,"RSA_PSS_SHA256_OID","","OID&amp;Parameters for RSA-PSS signature with SHA-256, MGF1-SHA256 and 32-byte salt.",null,null],[7,"RSA_PSS_SHA384_OID","","OID&amp;Parameters for RSA-PSS signature with SHA-384, MGF1-SHA384  and 48-byte salt.",null,null],[7,"RSA_PSS_SHA512_OID","","OID&amp;Parameters for RSA-PSS signature with SHA-512, MGF1-SHA512 and 64-byte salt.",null,null],[7,"SHA1_INSECURE_OID","","OID for SHA-1 hash (unsafe!)",null,null],[7,"SHA256_OID","","OID for SHA-256 hash",null,null],[7,"SHA384_OID","","OID for SHA-384 hash",null,null],[7,"SHA512_OID","","OID for SHA-512 hash",null,null],[17,"VERIFY_FLAG_ALLOW_SHA1","","Flag: Allow SHA1 signatures",null,null],[17,"VERIFY_FLAG_NO_RSA_PKCS1","","Flag: TLS 1.3, disallow RSA-PKCS1",null,null],[17,"CFLAG_MUST_STAPLE","","Flag for TLS feature 5: MUST-STAPLE.",null,null],[17,"CFLAG_MUST_EMS","","Flag for TLS feature 23: MUST-EMS.",null,null],[17,"CFLAG_MUST_TLS13","","Flag for TLS feature 40: MUST-TLS13.",null,null],[17,"CFLAG_MUST_RENEGO","","Flag for TLS feature 65281: MUST-RENEGO",null,null],[17,"CFLAG_MUST_CT","","Flag for TLS feature 18: MUST-CT",null,null],[17,"CFLAG_UNKNOWN","","Flag for unknown TLS feature.",null,null],[17,"KEYFORMAT_RSA","","",null,null],[17,"KEYFORMAT_ECDSA","","",null,null],[17,"KEYFORMAT_ED25519","","",null,null],[17,"KEYFORMAT_ED448","","",null,null],[17,"ASN1_BOOLEAN","","The tag value for ASN.1 BOOLEAN type",null,null],[17,"ASN1_INTEGER","","The tag value for ASN.1 INTEGER type",null,null],[17,"ASN1_BIT_STRING","","The tag value for ASN.1 BIT STRING type",null,null],[17,"ASN1_OCTET_STRING","","The tag value for ASN.1 OCTET STRING type",null,null],[17,"ASN1_NULL","","The tag value for ASN.1 NULL type",null,null],[17,"ASN1_OID","","The tag value for ASN.1 OBJECT IDENTIFIER type",null,null],[17,"ASN1_OBJECT_DESCRIPTOR","","The tag value for ASN.1 OBJECT DESCRIPTOR type",null,null],[17,"ASN1_INSTANCE_OF","","The tag value for ASN.1 INSTANCE_OF type",null,null],[17,"ASN1_REAL","","The tag value for ASN.1 REAL type",null,null],[17,"ASN1_ENUMERATED","","The tag value for ASN.1 ENUMERATED type",null,null],[17,"ASN1_EMBEDDED_PDV","","The tag value for ASN.1 EMBEDDED PDV type",null,null],[17,"ASN1_UTF8_STRING","","The tag value for ASN.1 UTF-8 STRING type",null,null],[17,"ASN1_RELATIVE_OID","","The tag value for ASN.1 UTF-8 STRING type",null,null],[17,"ASN1_SEQUENCE","","The tag value for ASN.1 SEQUENCE type",null,null],[17,"ASN1_SET","","The tag value for ASN.1 SET type",null,null],[17,"ASN1_NUMERIC_STRING","","The tag value for ASN.1 NUMERIC STRING type",null,null],[17,"ASN1_PRINTABLE_STRING","","The tag value for ASN.1 PRINTABLE STRING type",null,null],[17,"ASN1_TELEX_STRING","","The tag value for ASN.1 TELEX STRING type",null,null],[17,"ASN1_VIDEO_STRING","","The tag value for VIDEO STRING type",null,null],[17,"ASN1_IA5_STRING","","The tag value for ASN.1 IA5 STRING type",null,null],[17,"ASN1_UTC_TIME","","The tag value for ASN.1 UTC TIME type",null,null],[17,"ASN1_GENERALIZED_TIME","","The tag value for ASN.1 GENERALIZED TIME type",null,null],[17,"ASN1_GRAPHICS_STRING","","The tag value for ASN.1 GRAPHICS STRING type",null,null],[17,"ASN1_ISO646_STRING","","The tag value for ASN.1 ISO646 STRING type",null,null],[17,"ASN1_GENERAL_STRING","","The tag value for ASN.1 GENERAL STRING type",null,null],[17,"ASN1_UNIVERSAL_STRING","","The tag value for ASN.1 UNIVERSAL STRING type",null,null],[17,"ASN1_CHARACTER_STRING","","The tag value for ASN.1 CHARACTER STRING type",null,null],[17,"ASN1_BMP_STRING","","The tag value for ASN.1 BMP STRING type",null,null],[17,"ASN1_CTX0_C","","The tag value for ASN.1 [0] constructed",null,null],[17,"ASN1_CTX1_C","","The tag value for ASN.1 [1] constructed",null,null],[17,"ASN1_CTX2_C","","The tag value for ASN.1 [2] constructed",null,null],[17,"ASN1_CTX3_C","","The tag value for ASN.1 [3] constructed",null,null],[17,"ASN1_CTX0_P","","The tag value for ASN.1 [0] primitive",null,null],[17,"ASN1_CTX1_P","","The tag value for ASN.1 [1] primitive",null,null],[17,"ASN1_CTX2_P","","The tag value for ASN.1 [2] primitive",null,null],[17,"ASN1_CTX3_P","","The tag value for ASN.1 [3] primitive",null,null],[17,"CBOR_FALSE","","",null,null],[17,"CBOR_TRUE","","",null,null],[17,"CBOR_NULL","","",null,null],[17,"CBOR_UNDEFINED","","",null,null],[17,"MAX_HASH_OUTPUT","","",null,null],[17,"SIG_ECDSA_SHA256","","ECDSA signature with SHA-256.",null,null],[17,"SIG_ECDSA_SHA384","","ECDSA signature with SHA-384.",null,null],[17,"SIG_ECDSA_SHA512","","ECDSA signature with SHA-512.",null,null],[17,"SIG_ED25519","","Ed25519 signature.",null,null],[17,"SIG_ED448","","Ed448 signature.",null,null],[17,"SIG_RSA_PKCS1_SHA256","","RSA PKCS #1 v1.5 signature with SHA-256.",null,null],[17,"SIG_RSA_PKCS1_SHA384","","RSA PKCS #1 v1.5 signature with SHA-384.",null,null],[17,"SIG_RSA_PKCS1_SHA512","","RSA PKCS #1 v1.5 signature with SHA-512.",null,null],[17,"SIG_RSA_PSS_SHA256","","RSA PSS signature with SHA-256.",null,null],[17,"SIG_RSA_PSS_SHA384","","RSA PSS signature with SHA-384.",null,null],[17,"SIG_RSA_PSS_SHA512","","RSA PSS signature with SHA-512.",null,null],[8,"RangeTrait","","Range types for non-panicing slicing",null,null],[10,"start","","Get the starting index.",88,null],[10,"end","","Get the one past ending index.",88,null],[8,"SlicingExt","","Extension trait implementing non-panicing subslicing",null,null],[10,"slice_np","","Extract subslice.",89,null],[10,"slice_np_mut","","Extract mutable subslice.",89,null],[10,"split_at_np","","Split a slice into two.",89,null],[11,"slice_np_len","","Extract subslice with specified start and length.",89,null],[11,"slice_np_len_mut","","Extract mutable subslice with specified start and length.",89,null],[8,"Sink","","Sink that consumes raw byte data.",null,null],[10,"write_slice","","Append a slice of data into sink.",90,null],[10,"_alter","","Alter past-written byte in the sink.",90,null],[10,"_readback","","Readback past-written byte in the sink.",90,null],[10,"written","","Get number of bytes written so far.",90,null],[10,"_pop","","Pop specified amount of data from the end.",90,null],[11,"write_u8","","Write a big-endian u8 into sink.",90,null],[11,"write_u16","","Write a big-endian u16 into sink.",90,null],[11,"write_u24","","Write a big-endian u24 into sink.",90,null],[11,"write_u32","","Write a big-endian u32 into sink.",90,null],[11,"write_u64","","Write a big-endian u64 into sink.",90,null],[11,"alter_u8","","Alter past-written u8 in the sink.",90,null],[11,"alter_u16","","Alter past-written u16 in the sink.",90,null],[11,"alter_u24","","Alter past-written u24 in the sink.",90,null],[11,"readback_u24","","Readback past-written u24 in the sink.",90,null],[11,"marker_posonly","","Get a marker.",90,null],[11,"vector_fn","","Write size marker of specified size, with data from closure.",90,null],[11,"asn1_fn","","Write ASN.1 TLV, with data from callback.",90,null],[10,"callback_after","","Get a callback for part after marker.",90,null],[8,"Asn1TagMatch","","Trait used to cast Asn1Tag matchers to actual values.",null,null],[10,"tmatch","","Match the tag.",91,null],[10,"expected","","Get the expected tag.",91,null],[8,"Buffer","","Trait for &quot;Behaves like a buffer&quot;.",null,null],[10,"get","","Get an element.",92,null],[10,"get_mut","","Get an mutable element.",92,null],[8,"TimeInterface","","",null,null],[10,"get_time","","",93,null],[8,"HashFunctionContext","","",null,null],[11,"input_length","","",94,null],[11,"output_length","","",94,null],[10,"reset","","",94,null],[10,"input","","",94,null],[10,"output","","",94,null],[10,"function","","",94,null],[10,"clone_state","","",94,null],[8,"DiffieHellmanKey","","",null,null],[10,"pubkey","","",95,null],[10,"agree","","",95,null],[10,"tls_id","","",95,null],[8,"TxIrqHandler","btls","A TLS Session TX IRQ handler.",null,null],[10,"wants_transmit","","The session wants to transmit data.",96,null],[8,"RxAppdataHandler","","A TLS session appdata RX handler.",null,null],[10,"received_data","","The session received application data record.",97,null],[8,"Session","","A TLS session.",null,null],[10,"set_high_water_mark","","Set the receive high water mark.",98,null],[10,"set_send_threshold","","Set send threshold.",98,null],[10,"bytes_available","","Get the number of bytes currently available for read.",98,null],[10,"bytes_queued","","Get the number of bytes currently outstanding for write.",98,null],[10,"is_eof","","Is EOF?",98,null],[10,"wants_read","","Session wants to read from stream?",98,null],[10,"set_tx_irq","","Set the TX IRQ handler.",98,null],[10,"set_appdata_rx_fn","","Set the application data RX handler.",98,null],[10,"read_tls","","Read from stream.",98,null],[10,"submit_tls_record","","Submit TLS record for processing.",98,null],[10,"write_tls","","Write to stream.",98,null],[10,"zerolatency_write","","Zero-latency write data into TLS stream.",98,null],[10,"estimate_zerolatency_size","","Get ESTIMATE for zero-latency write maximum size.",98,null],[10,"can_tx_data","","Can send data?",98,null],[10,"handshake_completed","","Handshake complete?",98,null],[10,"send_eof","","Send EOF.",98,null],[10,"aborted_by","","Get error that aborted the TLS connection.",98,null],[10,"extractor","","Extract keying material.",98,null],[10,"get_alpn","","Get the APLN in effect.",98,null],[10,"get_server_names","","Get the names server authenticated as.",98,null],[10,"get_sni","","Get the SNI client sent.",98,null],[10,"connection_info","","Get information about TLS connection.",98,null],[10,"get_record_size","","Get size of first record in buffer.",98,null],[10,"begin_transacted_read","","Begin transactional application data read.",98,null],[10,"end_transacted_read","","End transactional application data read.",98,null],[11,"clone","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",99,null],[11,"new","","Create a new flag.",99,null],[11,"poll","","Read and reset the IRQ flag.",99,null],[11,"fmt","btls::test","",100,null],[11,"fmt","","",101,null],[11,"fmt","","",102,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",101,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",102,null],[11,"partial_cmp","","",102,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",102,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying [`OsStr`] slice.",102,null],[11,"to_str","","Yields a [`&amp;str`] slice if the `Path` is valid unicode.",102,null],[11,"to_string_lossy","","Converts a `Path` to a [`Cow&lt;str&gt;`].",102,null],[11,"to_path_buf","","Converts a `Path` to an owned [`PathBuf`].",102,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",102,null],[11,"is_relative","","A path is *relative* if it is not absolute.",102,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",102,null],[11,"parent","","The path without its final component, if any.",102,null],[11,"file_name","","The final component of the path, if it is a normal file.",102,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",102,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",102,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",102,null],[11,"file_stem","","Extracts the stem (non-extension) portion of [`self.file_name()`].",102,null],[11,"extension","","Extracts the extension of [`self.file_name()`], if possible.",102,null],[11,"join","","Creates an owned [`PathBuf`] with `path` adjoined to `self`.",102,null],[11,"with_file_name","","Creates an owned [`PathBuf`] like `self` but with the given file name.",102,null],[11,"with_extension","","Creates an owned [`PathBuf`] like `self` but with the given extension.",102,null],[11,"components","","Produce an iterator over the components of the path.",102,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as [`OsStr`] slices.",102,null],[11,"display","","Returns an object that implements [`Display`] for safely printing paths\nthat may contain non-Unicode data.",102,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",102,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",102,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",102,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",102,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",102,null],[11,"exists","","Returns whether the path points at an existing entity.",102,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",102,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",102,null],[11,"deref","","",101,null],[11,"from_iter","","",101,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"read","","",100,null],[11,"read_to_end","","",100,null],[11,"as_ref","","",101,null],[11,"as_ref","","",102,null],[11,"as_ref","","",102,null],[11,"as_ref","","",101,null],[11,"into_raw_fd","","",100,null],[11,"as_raw_fd","","",100,null],[11,"borrow","","",101,null],[11,"read_at","","",100,null],[11,"write_at","","",100,null],[11,"seek","","",100,null],[11,"write","","",100,null],[11,"flush","","",100,null],[11,"hash","","",101,null],[11,"hash","","",102,null],[11,"extend","","",101,null],[11,"from","","",101,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",101,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",101,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"to_owned","","",102,null],[11,"clone","","",101,null],[11,"from_raw_fd","","",100,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"cmp","","",101,null],[11,"cmp","","",102,null],[11,"eq","","",101,null],[11,"eq","","",102,null],[11,"eq","","",101,null],[11,"eq","","",102,null],[11,"eq","","",101,null],[11,"eq","","",102,null],[11,"eq","","",101,null],[11,"eq","","",101,null],[11,"eq","","",101,null],[11,"eq","","",101,null],[11,"eq","","",101,null],[11,"eq","","",102,null],[11,"eq","","",102,null],[11,"eq","","",102,null],[11,"eq","","",102,null],[11,"clone","btls::error","",27,null],[11,"fmt","","",27,null],[11,"get_alert_num","","Get TLS alert number that corresponds to the failure.",27,null],[11,"get_explanation","","Get explanation text for an error.",27,null],[11,"fmt","","",27,null],[11,"description","","",27,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"get_direction","","Get the direction of next handshake message.",26,null],[11,"clone","btls::test","",103,null],[11,"clone","btls::error","",10,null],[11,"eq","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"new","btls::test","Create new ACME challenge certificate.",103,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"sign","","",103,null],[11,"is_ecdsa","","",103,null],[11,"get_certificate","","",103,null],[11,"clone","btls::error","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"fmt","","",21,null],[11,"fmt","","",20,null],[11,"from","btls::test","Perform sanity check on OCSP respose and specified certificate, at specified time.",68,null],[11,"from","","Dump embedded SCTs from OCSP response.",67,null],[11,"from","","Validate OCSP respose, at specified time.",104,null],[11,"clone","btls::error","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",19,null],[11,"fmt","","",18,null],[11,"fmt","","",14,null],[11,"fmt","","",11,null],[11,"fmt","","",12,null],[11,"fmt","","",16,null],[11,"fmt","","",13,null],[11,"fmt","","",17,null],[11,"from","btls::test","Parse certificate into parsed certificate structure.",69,null],[11,"clone","btls::error","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"clone","btls::test","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"fmt","","",73,null],[11,"clone","","",72,null],[11,"eq","","",72,null],[11,"fmt","","",72,null],[11,"clone","btls::error","",25,null],[11,"fmt","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","btls::test","",74,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"clone","btls::error","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"problem_class","","Get the problem class.",15,null],[11,"fmt","","",15,null],[11,"clone","btls::test","",70,null],[11,"input_length","","",94,null],[11,"output_length","","",94,null],[11,"clone","btls::error","",28,null],[11,"fmt","","",28,null],[11,"eq","","",28,null],[11,"clone","btls::test","",81,null],[11,"fmt","","",81,null],[11,"eq","","",81,null],[11,"fmt","btls::error","",28,null],[11,"clone","btls::test","",82,null],[11,"fmt","","",82,null],[11,"eq","","",82,null],[11,"algo_const","","",82,null],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"clone","","",84,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"clone","","",105,null],[11,"drop","","",105,null],[11,"from","","",105,null],[11,"fmt","","",105,null],[11,"as_ref","","",105,null],[11,"clone","","",106,null],[11,"drop","","",106,null],[11,"from","","",106,null],[11,"fmt","","",106,null],[11,"as_ref","","",106,null],[11,"clone","","",107,null],[11,"drop","","",107,null],[11,"from","","",107,null],[11,"fmt","","",107,null],[11,"as_ref","","",107,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"eq","","",85,null],[11,"calculate","","",85,null],[11,"input","","",108,null],[11,"input_length","","",84,null],[11,"output_length","","",84,null],[11,"make_context","","",84,null],[11,"hkdf_extract","","",84,null],[11,"tls13_hkdf_expand","","",84,null],[11,"tls13_hkdf_expand_fn","","",84,null],[11,"hmac","","",84,null],[11,"tls_prf","","",84,null],[11,"hkdf_expand","","",84,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"eq","","",86,null],[11,"tls_id","","",86,null],[11,"by_tls_id","","",86,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"sigalgo_const","","",86,null],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"eq","","",87,null],[11,"by_tls_id","","",87,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"generate_key","","",87,null],[11,"to_tls_id","","",87,null],[11,"dhfalgo_const","","",87,null],[11,"pubkey","","",109,null],[11,"agree","","",109,null],[11,"tls_id","","",109,null],[11,"open","","Attempts to open a file in read-only mode.",100,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",100,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",100,null],[11,"sync_data","","This function is similar to [`sync_all`], except that it may not\nsynchronize file metadata to the filesystem.",100,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",100,null],[11,"metadata","","Queries metadata about the underlying file.",100,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",100,null],[11,"set_permissions","","Changes the permissions on the underlying file.",100,null],[11,"new","","Allocates an empty `PathBuf`.",101,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a [`Path`] slice.",101,null],[11,"push","","Extends `self` with `path`.",101,null],[11,"pop","","Truncate `self` to [`self.parent()`].",101,null],[11,"set_file_name","","Updates [`self.file_name()`] to `file_name`.",101,null],[11,"set_extension","","Updates [`self.extension()`] to `extension`.",101,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal [`OsString`] storage.",101,null],[11,"new","","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",110,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",110,null],[11,"stack_size","","Sets the size of the stack for the new thread.",110,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",110,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"tls_code","","Get TLS alert code.",75,null],[11,"fmt","","",75,null],[11,"new","","",111,{"inputs":[],"output":{"name":"hsbuffer"}}],[11,"extract","","",111,null],[11,"empty","","",111,null],[11,"slice_np_len","","Extract subslice with specified start and length.",89,null],[11,"slice_np_len_mut","","Extract mutable subslice with specified start and length.",89,null],[11,"write","","",112,null],[11,"flush","","",112,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",76,null],[11,"new","","",113,{"inputs":[],"output":{"name":"base64decoder"}}],[11,"data","","",113,null],[11,"end","","",113,null],[11,"new","","",114,{"inputs":[],"output":{"name":"queue"}}],[11,"read","","",114,null],[11,"peek","","",114,null],[11,"discard","","",114,null],[11,"write","","",114,null],[11,"buffered","","",114,null],[11,"abort","","",114,null],[11,"send_eof","","",114,null],[11,"eof_sent","","",114,null],[11,"write_u8","","Write a big-endian u8 into sink.",90,null],[11,"write_u16","","Write a big-endian u16 into sink.",90,null],[11,"write_u24","","Write a big-endian u24 into sink.",90,null],[11,"write_u32","","Write a big-endian u32 into sink.",90,null],[11,"write_u64","","Write a big-endian u64 into sink.",90,null],[11,"alter_u8","","Alter past-written u8 in the sink.",90,null],[11,"alter_u16","","Alter past-written u16 in the sink.",90,null],[11,"alter_u24","","Alter past-written u24 in the sink.",90,null],[11,"readback_u24","","Readback past-written u24 in the sink.",90,null],[11,"marker_posonly","","Get a marker.",90,null],[11,"vector_fn","","Write size marker of specified size, with data from closure.",90,null],[11,"asn1_fn","","Write ASN.1 TLV, with data from callback.",90,null],[11,"commit","","Commit the marker",115,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"clone","","",71,null],[11,"fmt","","",71,null],[11,"call","","Call closure on value (closure(&amp;mut self.value)).",71,null],[11,"fold","","Fold closure on value until end of source is reached.",71,null],[11,"clone","","",117,null],[11,"fmt","","",117,null],[11,"tmatch","","",117,null],[11,"expected","","",117,null],[11,"new","","Create a source out of byte slice.",116,null],[11,"at_end","","Is the subslice at end?",116,null],[11,"as_slice","","Return the source as slice.",116,null],[11,"read_slice","","Read a slice out of source.",116,null],[11,"read_slice_len","","Read a length and slice out of source.",116,null],[11,"read_remaining","","Read everything remaining in source as a slice.",116,null],[11,"read_source","","Read a source out of source.",116,null],[11,"read_source_len","","Read a length and source out of source.",116,null],[11,"read_source_fn","","Read a length and source out of source and call closure.",116,null],[11,"read_u8","","Read a big-endian u8 out of source.",116,null],[11,"read_u16","","Read a big-endian u16 out of source.",116,null],[11,"read_u24","","Read a big-endian u24 out of source.",116,null],[11,"read_u32","","Read a big-endian u32 out of source.",116,null],[11,"read_u64","","Read a big-endian u64 out of source.",116,null],[11,"read_asn1_value","","Read an ASN.1 DER TLV with known type out of source.",116,null],[11,"read_asn1_value_opt_fn","","Read an ASN.1 DER TLV out of source and call callback if tag is correct.",116,null],[11,"slice_marker","","Get beginning marker for raw slice.",116,null],[11,"position","","Get the current position in slice.",116,null],[11,"commit","","Get the diffrence between the current position and the marker as a slice.",118,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"parse","","",78,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",78,null],[11,"eq","","",78,null],[11,"eq","","",78,null],[11,"eq","","",78,null],[11,"eq","","",78,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"parse","","",79,null],[11,"partial_cmp","","",79,null],[11,"eq","","",79,null],[11,"cmp","","",79,null],[11,"drop","","",119,null],[11,"deref","","",119,null],[11,"deref_mut","","",119,null],[11,"new_size","","Create a new buffer of specified size.",119,{"inputs":[{"name":"usize"}],"output":{"name":"secbuffer"}}],[11,"from_buf","","Create from buffer.",119,null],[11,"get","","",119,null],[11,"get_mut","","",119,null],[11,"drop","","",120,null],[11,"deref","","",120,null],[11,"deref_mut","","",120,null],[11,"new","","Create a new buffer of specified size.",120,null],[11,"get","","",120,null],[11,"get_mut","","",120,null],[11,"clone","","",121,null],[11,"fmt","","",121,null],[11,"clone","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"fmt","","",80,null],[11,"next","","",121,null],[11,"new","","",121,null],[11,"read_typed","","",121,null],[11,"read_typed_str","","",121,null],[11,"next_data","","",121,null],[11,"assert_eol","","",121,null],[11,"next_str","","",121,null],[11,"read_pair","","",121,null],[11,"get_time","","",122,null]],"paths":[[3,"TlsConnectionInfo"],[4,"AbortReason"],[4,"IoErrorOrTlsFailure"],[3,"ClientConfiguration"],[3,"ClientSession"],[3,"HostSpecificPin"],[3,"TrustedLog"],[4,"DataRepresentation"],[4,"LogHashFunction"],[3,"TrustAnchor"],[4,"AcmeCertificateCreateError"],[4,"CertificateError"],[4,"CertificateExtensionError"],[4,"CertificateTimestampError"],[4,"CertificateToplevelError"],[4,"CertificateValidationError"],[4,"CertificateValidityError"],[4,"CertificateVersionError"],[4,"NameConstraintsError"],[4,"NameListError"],[4,"OcspExtensionsError"],[4,"OcspResponseError"],[4,"OcspValidationError"],[4,"ResponseStatusError"],[4,"SctError"],[4,"TimestampParseError"],[4,"HandshakeState"],[4,"TlsFailure"],[4,"KeyAgreementError"],[4,"KeyLoadingError"],[4,"KeyReadError"],[4,"ModuleError"],[4,"Asn1Error"],[4,"Asn1Tag"],[4,"QueueReadError"],[4,"QueueWriteError"],[3,"ConfigFlagsError"],[4,"ConfigFlagsErrorKind"],[8,"FutureCallback"],[3,"FutureSender"],[3,"FutureReceiver"],[4,"JsonNode"],[3,"SignedJws"],[8,"Logging"],[3,"NullLog"],[3,"StderrLog"],[3,"ServerConfiguration"],[3,"ServerSession"],[3,"Certificate"],[3,"CertificateChain"],[3,"OcspResponse"],[3,"StapledSct"],[3,"StapledSctList"],[3,"CertificateLookupCriteria"],[3,"LocalServerCertificateHandle"],[3,"LocalServerCertificateStore"],[3,"CertificateDirectory"],[8,"CertificateSigner"],[8,"CertificateLookup"],[3,"EccExported"],[3,"SubjectPublicKeyInfo"],[3,"SupportedSchemes"],[3,"GnutlsDatum"],[3,"GnutlsDatumMalloc"],[3,"GnutlsX509PrivkeyWrap"],[3,"LocalKeyPair"],[8,"KeyPair"],[3,"OcspDumpedScts"],[3,"OcspSanityCheckResults"],[3,"ParsedCertificate"],[3,"TrustAnchorValue"],[3,"Asn1Tlv"],[4,"KeyAlgorithm"],[4,"SignatureAlgorithm"],[4,"MajorCertProblem"],[4,"HsBufferError"],[4,"DecodingError"],[4,"Length"],[4,"JsonNode"],[4,"CborNode"],[4,"SexprNode"],[4,"RngError"],[4,"ProtectorType"],[4,"KeyExchangeType"],[4,"HashFunction"],[4,"ChecksumFunction"],[4,"SignatureType"],[4,"Dhf"],[8,"RangeTrait"],[8,"SlicingExt"],[8,"Sink"],[8,"Asn1TagMatch"],[8,"Buffer"],[8,"TimeInterface"],[8,"HashFunctionContext"],[8,"DiffieHellmanKey"],[8,"TxIrqHandler"],[8,"RxAppdataHandler"],[8,"Session"],[3,"TxIrqFlag"],[3,"File"],[3,"PathBuf"],[3,"Path"],[3,"AcmeCertificate"],[3,"OcspValidationResult"],[3,"HashOutput"],[3,"DhfOutput"],[3,"DhfPublicKey"],[3,"HashInput"],[3,"DummyDiffieHellmanKey"],[3,"Builder"],[3,"HsBuffer"],[3,"DevNull"],[3,"Base64Decoder"],[3,"Queue"],[3,"SinkMarker"],[3,"Source"],[3,"AnyAsn1Tag"],[3,"SliceMarker"],[3,"SecBuffer"],[3,"SecStackBuffer"],[3,"SexprParseStream"],[3,"TimeNow"]]};
searchIndex["hpack"] = {"doc":"A module implementing HPACK functionality. Exposes a simple API for\nperforming the encoding and decoding of header sets, according to the\nHPACK spec.","items":[[0,"encoder","hpack","Implements all functionality related to encoding header blocks using\nHPACK.",null,null],[3,"Encoder","hpack::encoder","Represents an HPACK encoder. Allows clients to encode arbitrary header sets\nand tracks the encoding context. That is, encoding subsequent header sets\nwill use the context built by previous encode calls.",null,null],[5,"encode_integer_into","","Encode an integer to the representation defined by HPACK, writing it into the provider\n`io::Write` instance. Also allows the caller to specify the leading bits of the first\noctet. Any bits that are already set within the last `prefix_size` bits will be cleared\nand overwritten by the integer&#39;s representation (in other words, only the first\n`8 - prefix_size` bits from the `leading_bits` octet are reflected in the first octet\nemitted by the function.",null,{"inputs":[{"name":"usize"},{"name":"u8"},{"name":"u8"},{"name":"w"}],"output":{"name":"result"}}],[5,"encode_integer","","Encode an integer to the representation defined by HPACK.",null,{"inputs":[{"name":"usize"},{"name":"u8"}],"output":{"name":"vec"}}],[11,"new","","Creates a new `Encoder` with a default static table, as defined by the\nHPACK spec (Appendix A).",0,{"inputs":[],"output":{"name":"encoder"}}],[11,"encode","","Encodes the given headers using the HPACK rules and returns a newly\nallocated `Vec` containing the bytes representing the encoded header\nset.",0,null],[11,"encode_into","","Encodes the given headers into the given `io::Write` instance. If the io::Write raises an\nError at any point, this error is propagated out. Any changes to the internal state of the\nencoder will not be rolled back, though, so care should be taken to ensure that the paired\ndecoder also ends up seeing the same state updates or that their pairing is cancelled.",0,null],[11,"encode_header_into","","Encodes a single given header into the given `io::Write` instance.",0,null],[0,"decoder","hpack","Exposes the struct `Decoder` that allows for HPACK-encoded header blocks to\nbe decoded into a header list.",null,null],[3,"Decoder","hpack::decoder","Decodes headers encoded using HPACK.",null,null],[4,"IntegerDecodingError","","Represents all errors that can be encountered while decoding an\ninteger.",null,null],[13,"TooManyOctets","","5.1. specifies that &quot;excessively large integer decodings&quot; MUST be\nconsidered an error (whether the size is the number of octets or\nvalue). This variant corresponds to the encoding containing too many\noctets.",1,null],[13,"ValueTooLarge","","The variant corresponds to the case where the value of the integer\nbeing decoded exceeds a certain threshold.",1,null],[13,"NotEnoughOctets","","When a buffer from which an integer was supposed to be encoded does\nnot contain enough octets to complete the decoding.",1,null],[13,"InvalidPrefix","","Only valid prefixes are [1, 8]",1,null],[4,"StringDecodingError","","Represents all errors that can be encountered while decoding an octet\nstring.",null,null],[13,"NotEnoughOctets","","",2,null],[13,"HuffmanDecoderError","","",2,null],[4,"DecoderError","","Represents all errors that can be encountered while performing the decoding\nof an HPACK header set.",null,null],[13,"HeaderIndexOutOfBounds","","",3,null],[13,"IntegerDecodingError","","",3,null],[13,"StringDecodingError","","",3,null],[13,"InvalidMaxDynamicSize","","The size of the dynamic table can never be allowed to exceed the max\nsize mandated to the decoder by the protocol. (by perfroming changes\nmade by SizeUpdate blocks).",3,null],[6,"DecoderResult","","The result returned by the `decode` method of the `Decoder`.",null,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"new","","Creates a new `Decoder` with all settings set to default values.",4,{"inputs":[],"output":{"name":"decoder"}}],[11,"set_max_table_size","","Sets a new maximum dynamic table size for the decoder.",4,null],[11,"decode_with_cb","","Decodes the headers found in the given buffer `buf`. Invokes the callback `cb` for each\ndecoded header in turn, by providing it the header name and value as `Cow` byte array\nslices.",4,null],[11,"decode","","Decode the header block found in the given buffer.",4,null],[0,"huffman","hpack","A module exposing utilities for encoding and decoding Huffman-coded octet\nstrings, under the Huffman code defined by HPACK.\n(HPACK-draft-10, Appendix B)",null,null],[3,"HuffmanDecoder","hpack::huffman","A simple implementation of a Huffman code decoder.",null,null],[4,"HuffmanDecoderError","","Represents the error variants that the `HuffmanDecoder` can return.",null,null],[13,"PaddingTooLarge","","Any padding strictly larger than 7 bits MUST be interpreted as an error",5,null],[13,"InvalidPadding","","Any padding that does not correspond to the most significant bits of\nEOS MUST be interpreted as an error.",5,null],[13,"EOSInString","","If EOS is ever found in the string, it causes an error.",5,null],[6,"HuffmanDecoderResult","","The type that represents the result of the `decode` method of the\n`HuffmanDecoder`.",null,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"new","","Constructs a new HuffmanDecoder with the default Huffman code table, as\ndefined in the HPACK-draft-10, Appendix B.",6,{"inputs":[],"output":{"name":"huffmandecoder"}}],[11,"decode","","Decodes the buffer `buf` into a newly allocated `Vec`.",6,null]],"paths":[[3,"Encoder"],[4,"IntegerDecodingError"],[4,"StringDecodingError"],[4,"DecoderError"],[3,"Decoder"],[4,"HuffmanDecoderError"],[3,"HuffmanDecoder"]]};
searchIndex["iecclib"] = {"doc":"","items":[[3,"Field","iecclib","A field",null,null],[3,"FieldElement","","A field element",null,null],[3,"Curve","","A curve",null,null],[3,"Point","","A curve point",null,null],[5,"zeroize","","",null,null],[5,"bigint_add","","",null,null],[5,"bigint_sub","","",null,null],[5,"bigint_mul","","",null,null],[5,"bigint_load","","",null,null],[5,"bigint_store","","",null,null],[5,"call_set_thread_fns","","",null,{"inputs":[],"output":null}],[17,"FLAG_HAS_MONTGOMERY","","Flag: The curve has Montgomery form.",null,null],[17,"FLAG_MONTGOMERY_SLOW","","Flag: The curve has Montgomery form, but it is relatively slow.",null,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",0,null],[11,"clone_from","","",0,null],[11,"eq","","",1,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"clone_from","","",3,null],[11,"list","","List all available hash function names.",1,null],[11,"lookup","","Return object representing the hash function `name`.",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"name","","Get name of the field.",1,null],[11,"field_bits","","Get number of bits in field.",1,null],[11,"storage_octets","","Get the storage size of field element in octets.",1,null],[11,"field_element_count","","Get the number of elements in the field.",1,null],[11,"field_characteristic","","Get the characteristic of the field.",1,null],[11,"degree","","Get the degree of the field.",1,null],[11,"degree_stride","","Get stride between the degrees of the field element.",1,null],[11,"degree_bits","","Get number of bits in each degree.",1,null],[11,"check","","Check if field element is in range.",1,null],[11,"make_zero","","Make a zero element of this field.",1,null],[11,"make_int","","Make an element with given small value (in zeroth degree) of this field.",1,null],[11,"make","","Make an element with given serialized value.",1,null],[11,"list","","List all available hash function names.",2,null],[11,"lookup","","Return object representing the curve `name`.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"name","","Get name of the curve.",2,null],[11,"field","","Get the field underlying the curve.",2,null],[11,"storage_octets","","Get number of octets storing curve point takes.",2,null],[11,"order","","Get the order of the curve as little-endian integer.",2,null],[11,"clog2l","","Get ceil(log2(x)) of the order of the curve.",2,null],[11,"rlog2l","","Get round(log2(x)) of the order of the curve.",2,null],[11,"partial_max_bits","","Get The maximum number of bits in scalar that reduce_partial can reduce.",2,null],[11,"scalar_elems_single","","Get number of elements in single-width scalar.",2,null],[11,"scalar_elems_double","","Get number of elements in double-width scalar (always 2 times the number in single-width).",2,null],[11,"scalar_octets","","Get number of octets serializing a scalar takes.",2,null],[11,"cofactor","","Get the cofactor of the curve.",2,null],[11,"flags","","Get the flags for the curve.",2,null],[11,"montgomery_base","","Get the serialization of standard montgomery basepoint.",2,null],[11,"reduce_partial","","Partially reduce a scalar.",2,null],[11,"reduce_full","","Fully reduce and serialize a scalar.",2,null],[11,"make_zero","","Create a zero point.",2,null],[11,"make_base","","Create a curve standard basepoint.",2,null],[11,"make","","Create a curve point with specified serialized value.",2,null],[11,"montgomery_mul","","Perform Montgomery multiplication.",2,null],[11,"xcurve_base","","Perform X* DHF with base point.",2,null],[11,"xcurve","","Perform X* DHF with peer key.",2,null],[11,"zero","","",0,null],[11,"set_int","","",0,null],[11,"set","","",0,null],[11,"get","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"smul","","",0,null],[11,"neg","","",0,null],[11,"sqr","","",0,null],[11,"inv","","",0,null],[11,"sqrt","","",0,null],[11,"load_cond","","",0,null],[11,"select","","",0,null],[11,"cswap","","",0,null],[11,"zero","","",3,null],[11,"base","","",3,null],[11,"set","","",3,null],[11,"get","","",3,null],[11,"add","","",3,null],[11,"double","","",3,null],[11,"mul_base","","",3,null],[11,"mul","","",3,null],[11,"neg","","",3,null],[11,"get_coords","","",3,null],[11,"set_coords","","",3,null],[11,"montgomery","","",3,null]],"paths":[[3,"FieldElement"],[3,"Field"],[3,"Curve"],[3,"Point"]]};
searchIndex["ihashlib"] = {"doc":"","items":[[3,"Hash","ihashlib","A hash function.",null,null],[3,"Context","","A hash function context.",null,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"clone_from","","",1,null],[11,"list","","List all available hash function names.",0,null],[11,"lookup","","Return object representing the hash function `name`.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"name","","Get name of the hash function.",0,null],[11,"block_octets","","Get number of bytes in hash input blocks.",0,null],[11,"output_octets_min","","Get smallest output size supported (in bytes).",0,null],[11,"output_octets_def","","Get default output size (in bytes).",0,null],[11,"output_octets_max","","Get largest output size supported (in bytes).",0,null],[11,"make","","Create context with default output size.",0,null],[11,"make_size","","Create context with specified output size.",0,null],[11,"reset","","",1,null],[11,"reset_size","","",1,null],[11,"update","","Update the hash state by appending specified data.",1,null],[11,"finalize","","Get hash of current data. Fails if buffer is not of correct size.",1,null],[11,"update_v","","Update the hash state by appending concatenation of specified data.",1,null]],"paths":[[3,"Hash"],[3,"Context"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create","lazy_static","",null,null],[14,"lazy_static","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",17,null],[12,"sin_port","","",17,null],[12,"sin_addr","","",17,null],[12,"sin_zero","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",19,null],[12,"sun_path","","",19,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",20,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",21,null],[12,"ai_family","","",21,null],[12,"ai_socktype","","",21,null],[12,"ai_protocol","","",21,null],[12,"ai_addrlen","","",21,null],[12,"ai_addr","","",21,null],[12,"ai_canonname","","",21,null],[12,"ai_next","","",21,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",22,null],[12,"nl_pid","","",22,null],[12,"nl_groups","","",22,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",23,null],[12,"sll_protocol","","",23,null],[12,"sll_ifindex","","",23,null],[12,"sll_hatype","","",23,null],[12,"sll_pkttype","","",23,null],[12,"sll_halen","","",23,null],[12,"sll_addr","","",23,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",24,null],[12,"tm_min","","",24,null],[12,"tm_hour","","",24,null],[12,"tm_mday","","",24,null],[12,"tm_mon","","",24,null],[12,"tm_year","","",24,null],[12,"tm_wday","","",24,null],[12,"tm_yday","","",24,null],[12,"tm_isdst","","",24,null],[12,"tm_gmtoff","","",24,null],[12,"tm_zone","","",24,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",25,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",26,null],[12,"dli_fbase","","",26,null],[12,"dli_sname","","",26,null],[12,"dli_saddr","","",26,null],[3,"epoll_event","","",null,null],[12,"events","","",27,null],[12,"u64","","",27,null],[3,"utsname","","",null,null],[12,"sysname","","",28,null],[12,"nodename","","",28,null],[12,"release","","",28,null],[12,"version","","",28,null],[12,"machine","","",28,null],[12,"domainname","","",28,null],[3,"lconv","","",null,null],[12,"decimal_point","","",29,null],[12,"thousands_sep","","",29,null],[12,"grouping","","",29,null],[12,"int_curr_symbol","","",29,null],[12,"currency_symbol","","",29,null],[12,"mon_decimal_point","","",29,null],[12,"mon_thousands_sep","","",29,null],[12,"mon_grouping","","",29,null],[12,"positive_sign","","",29,null],[12,"negative_sign","","",29,null],[12,"int_frac_digits","","",29,null],[12,"frac_digits","","",29,null],[12,"p_cs_precedes","","",29,null],[12,"p_sep_by_space","","",29,null],[12,"n_cs_precedes","","",29,null],[12,"n_sep_by_space","","",29,null],[12,"p_sign_posn","","",29,null],[12,"n_sign_posn","","",29,null],[12,"int_p_cs_precedes","","",29,null],[12,"int_p_sep_by_space","","",29,null],[12,"int_n_cs_precedes","","",29,null],[12,"int_n_sep_by_space","","",29,null],[12,"int_p_sign_posn","","",29,null],[12,"int_n_sign_posn","","",29,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",30,null],[12,"sigev_signo","","",30,null],[12,"sigev_notify","","",30,null],[12,"sigev_notify_thread_id","","",30,null],[3,"dirent","","",null,null],[12,"d_ino","","",31,null],[12,"d_off","","",31,null],[12,"d_reclen","","",31,null],[12,"d_type","","",31,null],[12,"d_name","","",31,null],[3,"dirent64","","",null,null],[12,"d_ino","","",32,null],[12,"d_off","","",32,null],[12,"d_reclen","","",32,null],[12,"d_type","","",32,null],[12,"d_name","","",32,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",33,null],[12,"rlim_max","","",33,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",34,null],[12,"gl_pathv","","",34,null],[12,"gl_offs","","",34,null],[12,"gl_flags","","",34,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",35,null],[12,"ifa_name","","",35,null],[12,"ifa_flags","","",35,null],[12,"ifa_addr","","",35,null],[12,"ifa_netmask","","",35,null],[12,"ifa_ifu","","",35,null],[12,"ifa_data","","",35,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",36,null],[12,"pw_passwd","","",36,null],[12,"pw_uid","","",36,null],[12,"pw_gid","","",36,null],[12,"pw_gecos","","",36,null],[12,"pw_dir","","",36,null],[12,"pw_shell","","",36,null],[3,"spwd","","",null,null],[12,"sp_namp","","",37,null],[12,"sp_pwdp","","",37,null],[12,"sp_lstchg","","",37,null],[12,"sp_min","","",37,null],[12,"sp_max","","",37,null],[12,"sp_warn","","",37,null],[12,"sp_inact","","",37,null],[12,"sp_expire","","",37,null],[12,"sp_flag","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",39,null],[12,"dqb_bsoftlimit","","",39,null],[12,"dqb_curspace","","",39,null],[12,"dqb_ihardlimit","","",39,null],[12,"dqb_isoftlimit","","",39,null],[12,"dqb_curinodes","","",39,null],[12,"dqb_btime","","",39,null],[12,"dqb_itime","","",39,null],[12,"dqb_valid","","",39,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",41,null],[12,"mq_maxmsg","","",41,null],[12,"mq_msgsize","","",41,null],[12,"mq_curmsgs","","",41,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",42,null],[12,"if_name","","",42,null],[3,"msginfo","","",null,null],[12,"msgpool","","",43,null],[12,"msgmap","","",43,null],[12,"msgmax","","",43,null],[12,"msgmnb","","",43,null],[12,"msgmni","","",43,null],[12,"msgssz","","",43,null],[12,"msgtql","","",43,null],[12,"msgseg","","",43,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",44,null],[12,"aio_lio_opcode","","",44,null],[12,"aio_reqprio","","",44,null],[12,"aio_buf","","",44,null],[12,"aio_nbytes","","",44,null],[12,"aio_sigevent","","",44,null],[12,"aio_offset","","",44,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",45,null],[12,"e_exit","","",45,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",46,null],[12,"tv_usec","","",46,null],[3,"utmpx","","",null,null],[12,"ut_type","","",47,null],[12,"ut_pid","","",47,null],[12,"ut_line","","",47,null],[12,"ut_id","","",47,null],[12,"ut_user","","",47,null],[12,"ut_host","","",47,null],[12,"ut_exit","","",47,null],[12,"ut_session","","",47,null],[12,"ut_tv","","",47,null],[12,"ut_addr_v6","","",47,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",48,null],[12,"sa_mask","","",48,null],[12,"sa_flags","","",48,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",49,null],[12,"ss_flags","","",49,null],[12,"ss_size","","",49,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",50,null],[12,"si_errno","","",50,null],[12,"si_code","","",50,null],[12,"_pad","","",50,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",51,null],[12,"gl_pathv","","",51,null],[12,"gl_offs","","",51,null],[12,"gl_flags","","",51,null],[3,"ucred","","",null,null],[12,"pid","","",52,null],[12,"uid","","",52,null],[12,"gid","","",52,null],[3,"statfs","","",null,null],[12,"f_type","","",53,null],[12,"f_bsize","","",53,null],[12,"f_blocks","","",53,null],[12,"f_bfree","","",53,null],[12,"f_bavail","","",53,null],[12,"f_files","","",53,null],[12,"f_ffree","","",53,null],[12,"f_fsid","","",53,null],[12,"f_namelen","","",53,null],[12,"f_frsize","","",53,null],[3,"msghdr","","",null,null],[12,"msg_name","","",54,null],[12,"msg_namelen","","",54,null],[12,"msg_iov","","",54,null],[12,"msg_iovlen","","",54,null],[12,"msg_control","","",54,null],[12,"msg_controllen","","",54,null],[12,"msg_flags","","",54,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",55,null],[12,"cmsg_level","","",55,null],[12,"cmsg_type","","",55,null],[3,"termios","","",null,null],[12,"c_iflag","","",56,null],[12,"c_oflag","","",56,null],[12,"c_cflag","","",56,null],[12,"c_lflag","","",56,null],[12,"c_line","","",56,null],[12,"c_cc","","",56,null],[12,"c_ispeed","","",56,null],[12,"c_ospeed","","",56,null],[3,"flock","","",null,null],[12,"l_type","","",57,null],[12,"l_whence","","",57,null],[12,"l_start","","",57,null],[12,"l_len","","",57,null],[12,"l_pid","","",57,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",58,null],[12,"loads","","",58,null],[12,"totalram","","",58,null],[12,"freeram","","",58,null],[12,"sharedram","","",58,null],[12,"bufferram","","",58,null],[12,"totalswap","","",58,null],[12,"freeswap","","",58,null],[12,"procs","","",58,null],[12,"pad","","",58,null],[12,"totalhigh","","",58,null],[12,"freehigh","","",58,null],[12,"mem_unit","","",58,null],[12,"_f","","",58,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",59,null],[12,"msg_stime","","",59,null],[12,"msg_rtime","","",59,null],[12,"msg_ctime","","",59,null],[12,"msg_qnum","","",59,null],[12,"msg_qbytes","","",59,null],[12,"msg_lspid","","",59,null],[12,"msg_lrpid","","",59,null],[3,"stat","","",null,null],[12,"st_dev","","",60,null],[12,"st_ino","","",60,null],[12,"st_nlink","","",60,null],[12,"st_mode","","",60,null],[12,"st_uid","","",60,null],[12,"st_gid","","",60,null],[12,"st_rdev","","",60,null],[12,"st_size","","",60,null],[12,"st_blksize","","",60,null],[12,"st_blocks","","",60,null],[12,"st_atime","","",60,null],[12,"st_atime_nsec","","",60,null],[12,"st_mtime","","",60,null],[12,"st_mtime_nsec","","",60,null],[12,"st_ctime","","",60,null],[12,"st_ctime_nsec","","",60,null],[3,"stat64","","",null,null],[12,"st_dev","","",61,null],[12,"st_ino","","",61,null],[12,"st_nlink","","",61,null],[12,"st_mode","","",61,null],[12,"st_uid","","",61,null],[12,"st_gid","","",61,null],[12,"st_rdev","","",61,null],[12,"st_size","","",61,null],[12,"st_blksize","","",61,null],[12,"st_blocks","","",61,null],[12,"st_atime","","",61,null],[12,"st_atime_nsec","","",61,null],[12,"st_mtime","","",61,null],[12,"st_mtime_nsec","","",61,null],[12,"st_ctime","","",61,null],[12,"st_ctime_nsec","","",61,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",62,null],[12,"exponent","","",62,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",63,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",64,null],[12,"swd","","",64,null],[12,"ftw","","",64,null],[12,"fop","","",64,null],[12,"rip","","",64,null],[12,"rdp","","",64,null],[12,"mxcsr","","",64,null],[12,"mxcr_mask","","",64,null],[12,"_st","","",64,null],[12,"_xmm","","",64,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",65,null],[12,"fpregs","","",65,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",66,null],[12,"uc_link","","",66,null],[12,"uc_stack","","",66,null],[12,"uc_mcontext","","",66,null],[12,"uc_sigmask","","",66,null],[3,"ipc_perm","","",null,null],[12,"__key","","",67,null],[12,"uid","","",67,null],[12,"gid","","",67,null],[12,"cuid","","",67,null],[12,"cgid","","",67,null],[12,"mode","","",67,null],[12,"__seq","","",67,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",68,null],[12,"shm_segsz","","",68,null],[12,"shm_atime","","",68,null],[12,"shm_dtime","","",68,null],[12,"shm_ctime","","",68,null],[12,"shm_cpid","","",68,null],[12,"shm_lpid","","",68,null],[12,"shm_nattch","","",68,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",69,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",67,null],[11,"clone","","",68,null],[11,"clone","","",70,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",71,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",72,null],[11,"clone","","",73,null],[11,"clone","","",74,null],[11,"clone","","",75,null],[11,"clone","","",76,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",77,null],[11,"clone","","",41,null],[11,"clone","","",78,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",79,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["openssl"] = {"doc":"","items":[[0,"asn1","openssl","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,null],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","A signed arbitrary-precision integer.",null,null],[4,"RNGProperty","","Specifies the desired properties of a randomly generated `BigNum`.",null,null],[13,"MsbMaybeZero","","The most significant bit of the number is allowed to be 0.",1,null],[13,"MsbOne","","The MSB should be set to 1.",1,null],[13,"TwoMsbOne","","The two most significant bits of the number will be set to 1, so that the product of two\nsuch random numbers will always have `2 * bits` length.",1,null],[11,"clone","","",2,null],[11,"neg","","",2,null],[11,"clone","","",1,null],[11,"new","","Creates a new `BigNum` with the value 0.",2,{"inputs":[],"output":{"name":"result"}}],[11,"new_from","","Creates a new `BigNum` with the given value.",2,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_ffi","","",2,null],[11,"new_from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",2,null],[11,"checked_sqr","","Returns the square of `self`.",2,null],[11,"checked_nnmod","","Returns the unsigned remainder of the division `self / n`.",2,null],[11,"checked_mod_add","","Equivalent to `(self + a) mod n`.",2,null],[11,"checked_mod_sub","","Equivalent to `(self - a) mod n`.",2,null],[11,"checked_mod_mul","","Equivalent to `(self * a) mod n`.",2,null],[11,"checked_mod_sqr","","Equivalent to `self² mod n`.",2,null],[11,"checked_exp","","Raises `self` to the `p`th power.",2,null],[11,"checked_mod_exp","","Equivalent to `self.checked_exp(p) mod n`.",2,null],[11,"checked_mod_inv","","Calculates the modular multiplicative inverse of `self` modulo `n`, that is, an integer `r`\nsuch that `(self * r) % n == 1`.",2,null],[11,"add_word","","Add an `unsigned long` to `self`. This is more efficient than adding a `BigNum`.",2,null],[11,"sub_word","","",2,null],[11,"mul_word","","",2,null],[11,"div_word","","",2,null],[11,"mod_word","","",2,null],[11,"checked_gcd","","Computes the greatest common denominator of `self` and `a`.",2,null],[11,"checked_generate_prime","","Generates a prime number.",2,{"inputs":[{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",2,null],[11,"is_prime_fast","","Checks whether `self` is prime with optional trial division.",2,null],[11,"checked_new_random","","Generates a cryptographically strong pseudo-random `BigNum`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","The cryptographically weak counterpart to `checked_new_random`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","Generates a cryptographically strong pseudo-random `BigNum` `r` in the range\n`0 &lt;= r &lt; self`.",2,null],[11,"checked_pseudo_rand_in_range","","The cryptographically weak counterpart to `checked_rand_in_range`.",2,null],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 &lt;&lt; n)`.",2,null],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &amp;= ~(1 &lt;&lt; n)`.",2,null],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",2,null],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",2,null],[11,"checked_shl1","","Returns `self`, shifted left by 1 bit. `self` may be negative.",2,null],[11,"checked_shr1","","Returns `self`, shifted right by 1 bit. `self` may be negative.",2,null],[11,"checked_add","","",2,null],[11,"checked_sub","","",2,null],[11,"checked_mul","","",2,null],[11,"checked_div","","",2,null],[11,"checked_mod","","",2,null],[11,"checked_shl","","",2,null],[11,"checked_shr","","",2,null],[11,"negate","","Inverts the sign of `self`.",2,null],[11,"abs_cmp","","Compare the absolute values of `self` and `oth`.",2,null],[11,"is_negative","","",2,null],[11,"num_bits","","Returns the number of significant bits in `self`.",2,null],[11,"num_bytes","","Returns the size of `self` in bytes.",2,null],[11,"raw","","",2,null],[11,"raw_ptr","","",2,null],[11,"into_raw","","",2,null],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",2,null],[11,"to_dec_str","","Returns a decimal string representation of `self`.",2,null],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"drop","","",2,null],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,null],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[],"output":{"name":"result"}}],[11,"borrowed","","Returns a &quot;borrow&quot;, i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"set_eof","","Sets the BIO&#39;s EOF state.",3,null],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,null],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,null],[11,"md_len","","Returns the length of the message digest.",4,null],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,null],[11,"write","","",5,null],[11,"flush","","",5,null],[11,"clone","","",5,null],[11,"drop","","",5,null],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"clone","","",6,null],[11,"drop","","",6,null],[0,"pkcs5","openssl::crypto","",null,null],[3,"KeyIvPair","openssl::crypto::pkcs5","",null,null],[12,"key","","",7,null],[12,"iv","","",7,null],[5,"evp_bytes_to_key_pbkdf1_compatible","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac_sha1","","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",8,null],[13,"Public","","",8,null],[13,"Both","","",8,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",9,null],[13,"Decrypt","","",9,null],[13,"Sign","","",9,null],[13,"Verify","","",9,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",10,null],[13,"PKCS1v15","","",10,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"new","","",11,{"inputs":[],"output":{"name":"pkey"}}],[11,"from_handle","","",11,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_from_pem","","Reads public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_rsa_key_from_pem","","Reads an RSA private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_rsa_key_from_pem","","Reads an RSA public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",11,null],[11,"set_rsa","","assign RSA key to this pkey",11,null],[11,"get_rsa","","get a reference to the interal RSA key for direct access to the key components",11,null],[11,"save_pub","","Returns a DER serialized form of the public key, suitable for load_pub().",11,null],[11,"load_pub","","Loads a DER serialized form of the public key, as produced by save_pub().",11,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",11,null],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",11,null],[11,"write_pem","","Stores private key as a PEM",11,null],[11,"write_pub_pem","","Stores public key as a PEM",11,null],[11,"size","","Returns the size of the public key modulus.",11,null],[11,"can","","Returns whether this pkey object can perform the specified role.",11,null],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",11,null],[11,"private_encrypt_with_padding","","",11,null],[11,"public_encrypt_with_padding","","",11,null],[11,"private_decrypt_with_padding","","",11,null],[11,"public_decrypt_with_padding","","",11,null],[11,"encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"encrypt_with_padding","","Encrypts data with the public key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_decrypt","","Decrypts data with the public key, using PKCS1v15 padding, returning the decrypted data.",11,null],[11,"decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"decrypt_with_padding","","Decrypts data with the private key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"private_decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"private_encrypt","","Encrypts data with the private key, using PKCS1v15 padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"sign","","Signs data, using OpenSSL&#39;s default scheme and adding sha256 ASN.1 information to the\nsignature.\nThe bytes to sign must be the result of a sha256 hashing;\nreturns the signature.",11,null],[11,"verify","","Verifies a signature s (using OpenSSL&#39;s default scheme and sha256) on the SHA256 hash of a\nmessage.\nReturns true if the signature is valid, and false otherwise.",11,null],[11,"sign_with_hash","","Signs data, using OpenSSL&#39;s default scheme and add ASN.1 information for the given hash type to the\nsignature.\nThe bytes to sign must be the result of this type of hashing;\nreturns the signature.",11,null],[11,"verify_with_hash","","",11,null],[11,"get_handle","","",11,null],[11,"public_eq","","",11,null],[11,"drop","","",11,null],[11,"clone","","",11,null],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",12,null],[13,"Decrypt","","",12,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",13,null],[13,"AES_128_CBC","","",13,null],[13,"AES_128_CFB1","","",13,null],[13,"AES_128_CFB128","","",13,null],[13,"AES_128_CFB8","","",13,null],[13,"AES_256_ECB","","",13,null],[13,"AES_256_CBC","","",13,null],[13,"AES_256_CFB1","","",13,null],[13,"AES_256_CFB128","","",13,null],[13,"AES_256_CFB8","","",13,null],[13,"DES_CBC","","",13,null],[13,"DES_ECB","","",13,null],[13,"RC4_128","","",13,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"new","","",14,{"inputs":[{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",14,null],[11,"init","","Initializes this crypter.",14,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",14,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",14,null],[11,"drop","","",14,null],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"rsa","openssl::crypto","",null,null],[3,"RSA","openssl::crypto::rsa","",null,null],[11,"drop","","",15,null],[11,"from_public_components","","only useful for associating the key material directly with the key, it&#39;s safer to use\nthe supplied load and save methods for DER formatted keys.",15,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",15,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_raw","","the caller should assert that the rsa pointer is valid.",15,null],[11,"private_key_from_pem","","Reads an RSA private key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_key_to_pem","","Writes an RSA private key as unencrypted PEM formatted data",15,null],[11,"public_key_from_pem","","Reads an RSA public key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_to_pem","","Writes an RSA public key as PEM formatted data",15,null],[11,"size","","",15,null],[11,"sign","","",15,null],[11,"verify","","",15,null],[11,"as_ptr","","",15,null],[11,"n","","",15,null],[11,"has_n","","",15,null],[11,"d","","",15,null],[11,"e","","",15,null],[11,"has_e","","",15,null],[11,"p","","",15,null],[11,"q","","",15,null],[11,"fmt","","",15,null],[0,"dh","openssl","",null,null],[3,"DH","openssl::dh","",null,null],[11,"from_params","","",16,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_pem","","",16,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"raw","","",16,null],[11,"raw_ptr","","",16,null],[11,"drop","","",16,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",17,null],[12,"algorithm","","The number of bits processed by the chosen algorithm, if not None.",17,null],[3,"SslCipher","","",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[3,"NonblockingSslStream","","# Deprecated",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3, TLSv1, TLSv1.1, and TLSv1.2 protocols depending on what the\nlinked OpenSSL library supports.",19,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",19,null],[13,"Tlsv1_2","","Support TLSv1.2 protocol, requires the `tlsv1_2` feature.",19,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",20,null],[13,"Normal","","A connection not using SSL",20,null],[5,"init","","Manually initialize SSL.\nIt is optional to call this function and safe to do so more than once.",null,{"inputs":[],"output":null}],[0,"error","","",null,null],[3,"OpenSslError","openssl::ssl::error","An error reported from OpenSSL.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslError","","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",21,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",21,null],[13,"OpenSslErrors","","An error in the OpenSSL library",21,null],[4,"NonblockingSslError","","An error on a nonblocking stream.",null,null],[13,"SslError","","A standard SSL error occurred.",22,null],[13,"WantRead","","The OpenSSL library wants data from the remote socket;\nthe caller should wait for read readiness.",22,null],[13,"WantWrite","","The OpenSSL library wants to send data to the remote socket;\nthe caller should wait for write readiness.",22,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",23,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",23,null],[12,"function","","The function reporting the error",23,null],[12,"reason","","The reason for the error",23,null],[11,"fmt","openssl::ssl::error","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"cause","","",18,null],[11,"get_stack","","Returns the contents of the OpenSSL error stack.",24,{"inputs":[],"output":{"name":"vec"}}],[11,"error_code","","Returns the raw OpenSSL error code for this error.",24,null],[11,"library","","Returns the name of the library reporting the error.",24,null],[11,"function","","Returns the name of the function reporting the error.",24,null],[11,"reason","","Returns the reason for the error.",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"fmt","","",21,null],[11,"fmt","","",22,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[11,"cause","","",21,null],[11,"fmt","","",22,null],[11,"description","","",22,null],[11,"cause","","",22,null],[11,"from","","",22,{"inputs":[{"name":"sslerror"}],"output":{"name":"nonblockingsslerror"}}],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"from_error_code","","",23,{"inputs":[{"name":"c_ulong"}],"output":{"name":"opensslerror"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",21,{"inputs":[],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",21,{"inputs":[{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[6,"ServerNameCallback","","The signature of functions that can be used to choose the context depending on the server name",null,null],[6,"ServerNameCallbackData","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server&#39;s certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server&#39;s certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[8,"IntoSsl","","",null,null],[10,"into_ssl","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"cmp","","",26,null],[11,"hash","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u64"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"sslcontextoptions"}}],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"eq","","",19,null],[11,"is_dtls","","",19,null],[11,"is_dtlsv1","","",19,null],[11,"is_dtlsv1_2","","",19,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"cmp","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,null],[11,"is_all","","Returns `true` if all flags are currently set.",27,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,null],[11,"insert","","Inserts the specified flags in-place.",27,null],[11,"remove","","Removes the specified flags in-place.",27,null],[11,"toggle","","Toggles the specified flags in-place.",27,null],[11,"bitor","","Returns the union of the two sets of flags.",27,null],[11,"bitor_assign","","Adds the set of flags.",27,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,null],[11,"bitxor_assign","","Toggles the set of flags.",27,null],[11,"bitand","","Returns the intersection between the two sets of flags.",27,null],[11,"bitand_assign","","Disables all flags disabled in the set.",27,null],[11,"sub","","Returns the set difference of the two sets of flags.",27,null],[11,"sub_assign","","Disables all flags enabled in the set.",27,null],[11,"not","","Returns the complement of this set of flags.",27,null],[11,"extend","","",27,null],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"drop","","",28,null],[11,"new","","Creates a new SSL context.",28,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",28,null],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",28,null],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",28,null],[11,"set_servername_callback_with_data","","Configures the server name indication (SNI) callback for new connections\ncarrying supplied data",28,null],[11,"set_verify_depth","","Sets verification depth",28,null],[11,"set_read_ahead","","",28,null],[11,"set_tmp_dh","","",28,null],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",28,null],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",28,null],[11,"set_session_id_context","","Set the context identifier for sessions",28,null],[11,"set_certificate_file","","Specifies the file that contains certificate",28,null],[11,"set_certificate_chain_file","","Specifies the file that contains certificate chain",28,null],[11,"set_certificate","","Specifies the certificate",28,null],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",28,null],[11,"set_private_key_file","","Specifies the file that contains private key",28,null],[11,"set_private_key","","Specifies the private key",28,null],[11,"check_private_key","","Check consistency of private key and certificate",28,null],[11,"set_cipher_list","","",28,null],[11,"set_options","","",28,null],[11,"get_options","","",28,null],[11,"clear_options","","",28,null],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols\nsupported by the application).",28,null],[11,"set_alpn_protocols","","Set the protocols to be used during ALPN (application layer protocol negotiation).\nIf this is a server, these are the protocols we report to the client.\nIf this is a client, these are the protocols we try to match with those reported by the\nserver.",28,null],[11,"name","","Returns the name of cipher.",29,null],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",29,null],[11,"bits","","Returns the number of bits used for the cipher.",29,null],[11,"description","","Returns a textual description of the cipher used",29,null],[11,"fmt","","",30,null],[11,"drop","","",30,null],[11,"clone","","# Deprecated",30,null],[11,"new","","",30,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",30,null],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the\nhandshake process.",30,null],[11,"get_current_cipher","","",30,null],[11,"state_string","","",30,null],[11,"state_string_long","","",30,null],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",30,null],[11,"peer_certificate","","Returns the certificate of the peer, if present.",30,null],[11,"version","","Returns the name of the protocol used for the connection, e.g. &quot;TLSv1.2&quot;, &quot;SSLv3&quot;, etc.",30,null],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",30,null],[11,"selected_alpn_protocol","","Returns the protocol selected by performing ALPN, if any.",30,null],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS\nrecord.",30,null],[11,"compression","","Returns the compression currently in use.",30,null],[11,"get_ssl_method","","",30,null],[11,"get_servername","","Returns the server&#39;s name for the current connection",30,null],[11,"set_ssl_context","","change the context corresponding to the current connection",30,null],[11,"get_ssl_context","","obtain the context corresponding to the current connection",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"as_raw_fd","","",31,null],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"connect_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"get_ref","","Returns a reference to the underlying stream.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",31,null],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",31,null],[11,"try_clone","","# Deprecated",31,null],[11,"read","","",31,null],[11,"write","","",31,null],[11,"flush","","",31,null],[11,"into_ssl","","",30,null],[11,"fmt","","",20,null],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,null],[11,"get_ref","","Returns a reference to the underlying stream.",20,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",20,null],[11,"try_clone","","Like `TcpStream::try_clone`.",20,null],[11,"clone","","",32,null],[11,"as_raw_fd","","",32,null],[11,"try_clone","","",32,null],[11,"get_ref","","Returns a reference to the underlying stream.",32,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",32,null],[11,"ssl","","Returns a reference to the Ssl.",32,null],[11,"connect","","Create a new nonblocking client ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Create a new nonblocking server ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"read","","Read bytes from the SSL stream into `buf`.",32,null],[11,"write","","Write bytes from `buf` to the SSL stream.",32,null],[0,"x509","openssl","",null,null],[3,"SslString","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509Req","","A certificate signing request",null,null],[3,"GeneralNames","","A collection of OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralNamesIter","","An iterator over OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralName","","An OpenSSL `GENERAL_NAME`.",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",33,null],[13,"ASN1","","",33,null],[13,"Default","","",33,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",34,null],[13,"X509UnableToGetCrl","","",34,null],[13,"X509UnableToDecryptCertSignature","","",34,null],[13,"X509UnableToDecryptCrlSignature","","",34,null],[13,"X509UnableToDecodeIssuerPublicKey","","",34,null],[13,"X509CertSignatureFailure","","",34,null],[13,"X509CrlSignatureFailure","","",34,null],[13,"X509CertNotYetValid","","",34,null],[13,"X509CertHasExpired","","",34,null],[13,"X509CrlNotYetValid","","",34,null],[13,"X509CrlHasExpired","","",34,null],[13,"X509ErrorInCertNotBeforeField","","",34,null],[13,"X509ErrorInCertNotAfterField","","",34,null],[13,"X509ErrorInCrlLastUpdateField","","",34,null],[13,"X509ErrorInCrlNextUpdateField","","",34,null],[13,"X509OutOfMem","","",34,null],[13,"X509DepthZeroSelfSignedCert","","",34,null],[13,"X509SelfSignedCertInChain","","",34,null],[13,"X509UnableToGetIssuerCertLocally","","",34,null],[13,"X509UnableToVerifyLeafSignature","","",34,null],[13,"X509CertChainTooLong","","",34,null],[13,"X509CertRevoked","","",34,null],[13,"X509InvalidCA","","",34,null],[13,"X509PathLengthExceeded","","",34,null],[13,"X509InvalidPurpose","","",34,null],[13,"X509CertUntrusted","","",34,null],[13,"X509CertRejected","","",34,null],[13,"X509SubjectIssuerMismatch","","",34,null],[13,"X509AkidSkidMismatch","","",34,null],[13,"X509AkidIssuerSerialMismatch","","",34,null],[13,"X509KeyusageNoCertsign","","",34,null],[13,"X509UnableToGetCrlIssuer","","",34,null],[13,"X509UnhandledCriticalExtension","","",34,null],[13,"X509KeyusageNoCrlSign","","",34,null],[13,"X509UnhandledCriticalCrlExtension","","",34,null],[13,"X509InvalidNonCA","","",34,null],[13,"X509ProxyPathLengthExceeded","","",34,null],[13,"X509KeyusageNoDigitalSignature","","",34,null],[13,"X509ProxyCertificatesNotAllowed","","",34,null],[13,"X509InvalidExtension","","",34,null],[13,"X509InavlidPolicyExtension","","",34,null],[13,"X509NoExplicitPolicy","","",34,null],[13,"X509DifferentCrlScope","","",34,null],[13,"X509UnsupportedExtensionFeature","","",34,null],[13,"X509UnnestedResource","","",34,null],[13,"X509PermittedVolation","","",34,null],[13,"X509ExcludedViolation","","",34,null],[13,"X509SubtreeMinmax","","",34,null],[13,"X509UnsupportedConstraintType","","",34,null],[13,"X509UnsupportedConstraintSyntax","","",34,null],[13,"X509UnsupportedNameSyntax","","",34,null],[13,"X509CrlPathValidationError","","",34,null],[13,"X509ApplicationVerification","","",34,null],[13,"X509UnknownError","","",34,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",35,null],[13,"ExtKeyUsage","","",35,null],[13,"SubjectAltName","","",35,null],[13,"IssuerAltName","","",35,null],[13,"OtherNid","","",35,null],[13,"OtherStr","","",35,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",36,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",36,null],[13,"SubjectAltName","","Subject Alternative Names",36,null],[13,"IssuerAltName","","Issuer Alternative Names",36,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",36,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",36,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",37,null],[13,"NonRepudiation","","",37,null],[13,"KeyEncipherment","","",37,null],[13,"DataEncipherment","","",37,null],[13,"KeyAgreement","","",37,null],[13,"KeyCertSign","","",37,null],[13,"CRLSign","","",37,null],[13,"EncipherOnly","","",37,null],[13,"DecipherOnly","","",37,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",38,null],[13,"ClientAuth","","",38,null],[13,"CodeSigning","","",38,null],[13,"EmailProtection","","",38,null],[13,"TimeStamping","","",38,null],[13,"MsCodeInd","","",38,null],[13,"MsCodeCom","","",38,null],[13,"MsCtlSign","","",38,null],[13,"MsSgc","","",38,null],[13,"MsEfs","","",38,null],[13,"NsSgc","","",38,null],[13,"Other","","An arbitrary key usage by OID.",38,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",39,null],[13,"Email","","",39,null],[13,"DNS","","",39,null],[13,"Directory","","",39,null],[13,"URI","","",39,null],[13,"IPAddress","","",39,null],[13,"RegisteredID","","",39,null],[11,"clone","","",35,null],[11,"hash","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",36,null],[11,"get_type","","",36,null],[11,"get_nid","","",35,null],[11,"get_name","","",35,null],[11,"to_string","","",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"drop","openssl::x509","",40,null],[11,"deref","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",33,null],[11,"new","","",41,null],[11,"get_error","","",41,null],[11,"get_current_cert","","",41,null],[11,"error_depth","","",41,null],[11,"new","","Creates a new generator with the following defaults:",42,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",42,null],[11,"set_valid_period","","Sets certificate validity period in days since today",42,null],[11,"add_name","","Add attribute to the name of the certificate",42,null],[11,"add_names","","Add multiple attributes to the name of the certificate",42,null],[11,"add_extension","","Add an extension to a certificate",42,null],[11,"add_extensions","","Add multiple extensions to a certificate",42,null],[11,"set_sign_hash","","",42,null],[11,"generate","","Generates a private key and a self-signed certificate and returns them",42,null],[11,"sign","","Sets the certificate public-key, then self-sign and return it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",42,null],[11,"request","","Obtain a certificate signing request (CSR)",42,null],[11,"new","","Creates new from handle with desired ownership.",43,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn&#39;t take ownership\nof handle.",43,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",43,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",43,null],[11,"subject_name","","",43,null],[11,"subject_alt_names","","Returns this certificate&#39;s SAN entries, if they exist.",43,null],[11,"public_key","","",43,null],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",43,null],[11,"write_pem","","Writes certificate as PEM",43,null],[11,"clone","","",43,null],[11,"drop","","",43,null],[11,"text_by_nid","","",44,null],[11,"new","","Creates new from handle",45,null],[11,"from_pem","","Reads CSR from PEM",45,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"write_pem","","Writes CSR as PEM",45,null],[11,"drop","","",45,null],[11,"clone","","",34,null],[11,"len","","Returns the number of `GeneralName`s in this structure.",46,null],[11,"get","","Returns the specified `GeneralName`.",46,null],[11,"iter","","Returns an iterator over the `GeneralName`s in this structure.",46,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",48,null],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",48,null],[0,"nid","openssl","",null,null],[4,"Nid","openssl::nid","",null,null],[13,"Undefined","","",49,null],[13,"Rsadsi","","",49,null],[13,"Pkcs","","",49,null],[13,"MD2","","",49,null],[13,"MD4","","",49,null],[13,"MD5","","",49,null],[13,"RC4","","",49,null],[13,"RsaEncryption","","",49,null],[13,"RSA_MD2","","",49,null],[13,"RSA_MD5","","",49,null],[13,"PBE_MD2_DES","","",49,null],[13,"X500","","",49,null],[13,"x509","","",49,null],[13,"CN","","",49,null],[13,"C","","",49,null],[13,"L","","",49,null],[13,"ST","","",49,null],[13,"O","","",49,null],[13,"OU","","",49,null],[13,"RSA","","",49,null],[13,"Pkcs7","","",49,null],[13,"Pkcs7_data","","",49,null],[13,"Pkcs7_signedData","","",49,null],[13,"Pkcs7_envelopedData","","",49,null],[13,"Pkcs7_signedAndEnvelopedData","","",49,null],[13,"Pkcs7_digestData","","",49,null],[13,"Pkcs7_encryptedData","","",49,null],[13,"Pkcs3","","",49,null],[13,"DhKeyAgreement","","",49,null],[13,"DES_ECB","","",49,null],[13,"DES_CFB","","",49,null],[13,"DES_CBC","","",49,null],[13,"DES_EDE","","",49,null],[13,"DES_EDE3","","",49,null],[13,"IDEA_CBC","","",49,null],[13,"IDEA_CFB","","",49,null],[13,"IDEA_ECB","","",49,null],[13,"RC2_CBC","","",49,null],[13,"RC2_ECB","","",49,null],[13,"RC2_CFB","","",49,null],[13,"RC2_OFB","","",49,null],[13,"SHA","","",49,null],[13,"RSA_SHA","","",49,null],[13,"DES_EDE_CBC","","",49,null],[13,"DES_EDE3_CBC","","",49,null],[13,"DES_OFB","","",49,null],[13,"IDEA_OFB","","",49,null],[13,"Pkcs9","","",49,null],[13,"Email","","",49,null],[13,"UnstructuredName","","",49,null],[13,"ContentType","","",49,null],[13,"MessageDigest","","",49,null],[13,"SigningTime","","",49,null],[13,"CounterSignature","","",49,null],[13,"ChallengePassword","","",49,null],[13,"UnstructuredAddress","","",49,null],[13,"ExtendedCertificateAttributes","","",49,null],[13,"Netscape","","",49,null],[13,"NetscapeCertExtention","","",49,null],[13,"NetscapeDatatype","","",49,null],[13,"DES_EDE_CFB64","","",49,null],[13,"DES_EDE3_CFB64","","",49,null],[13,"DES_EDE_OFB64","","",49,null],[13,"DES_EDE3_OFB64","","",49,null],[13,"SHA1","","",49,null],[13,"RSA_SHA1","","",49,null],[13,"DSA_SHA","","",49,null],[13,"DSA_OLD","","",49,null],[13,"PBE_SHA1_RC2_64","","",49,null],[13,"PBKDF2","","",49,null],[13,"DSA_SHA1_OLD","","",49,null],[13,"NetscapeCertType","","",49,null],[13,"NetscapeBaseUrl","","",49,null],[13,"NetscapeRevocationUrl","","",49,null],[13,"NetscapeCARevocationUrl","","",49,null],[13,"NetscapeRenewalUrl","","",49,null],[13,"NetscapeCAPolicyUrl","","",49,null],[13,"NetscapeSSLServerName","","",49,null],[13,"NetscapeComment","","",49,null],[13,"NetscapeCertSequence","","",49,null],[13,"DESX_CBC","","",49,null],[13,"ID_CE","","",49,null],[13,"SubjectKeyIdentifier","","",49,null],[13,"KeyUsage","","",49,null],[13,"PrivateKeyUsagePeriod","","",49,null],[13,"SubjectAltName","","",49,null],[13,"IssuerAltName","","",49,null],[13,"BasicConstraints","","",49,null],[13,"CrlNumber","","",49,null],[13,"CertificatePolicies","","",49,null],[13,"AuthorityKeyIdentifier","","",49,null],[13,"BF_CBC","","",49,null],[13,"BF_ECB","","",49,null],[13,"BF_CFB","","",49,null],[13,"BF_OFB","","",49,null],[13,"MDC2","","",49,null],[13,"RSA_MDC2","","",49,null],[13,"RC4_40","","",49,null],[13,"RC2_40_CBC","","",49,null],[13,"G","","",49,null],[13,"S","","",49,null],[13,"I","","",49,null],[13,"UID","","uniqueIdentifier",49,null],[13,"CrlDistributionPoints","","",49,null],[13,"RSA_NP_MD5","","",49,null],[13,"SN","","",49,null],[13,"T","","",49,null],[13,"D","","",49,null],[13,"CAST5_CBC","","",49,null],[13,"CAST5_ECB","","",49,null],[13,"CAST5_CFB","","",49,null],[13,"CAST5_OFB","","",49,null],[13,"PbeWithMD5AndCast5CBC","","",49,null],[13,"DSA_SHA1","","",49,null],[13,"MD5_SHA1","","",49,null],[13,"RSA_SHA1_2","","",49,null],[13,"DSA","","",49,null],[13,"RIPEMD160","","",49,null],[13,"RSA_RIPEMD160","","",49,null],[13,"RC5_CBC","","",49,null],[13,"RC5_ECB","","",49,null],[13,"RC5_CFB","","",49,null],[13,"RC5_OFB","","",49,null],[13,"RLE","","",49,null],[13,"ZLIB","","",49,null],[13,"ExtendedKeyUsage","","",49,null],[13,"PKIX","","",49,null],[13,"ID_KP","","",49,null],[13,"ServerAuth","","",49,null],[13,"ClientAuth","","",49,null],[13,"CodeSigning","","",49,null],[13,"EmailProtection","","",49,null],[13,"TimeStamping","","",49,null],[13,"MsCodeInd","","",49,null],[13,"MsCodeCom","","",49,null],[13,"MsCtlSigh","","",49,null],[13,"MsSGC","","",49,null],[13,"MsEFS","","",49,null],[13,"NsSGC","","",49,null],[13,"DeltaCRL","","",49,null],[13,"CRLReason","","",49,null],[13,"InvalidityDate","","",49,null],[13,"SXNetID","","",49,null],[13,"PBE_SHA1_RC4_128","","",49,null],[13,"PBE_SHA1_RC4_40","","",49,null],[13,"PBE_SHA1_3DES","","",49,null],[13,"PBE_SHA1_2DES","","",49,null],[13,"PBE_SHA1_RC2_128","","",49,null],[13,"PBE_SHA1_RC2_40","","",49,null],[13,"KeyBag","","",49,null],[13,"Pkcs8ShroudedKeyBag","","",49,null],[13,"CertBag","","",49,null],[13,"CrlBag","","",49,null],[13,"SecretBag","","",49,null],[13,"SafeContentsBag","","",49,null],[13,"FriendlyName","","",49,null],[13,"LocalKeyID","","",49,null],[13,"X509Certificate","","",49,null],[13,"SdsiCertificate","","",49,null],[13,"X509Crl","","",49,null],[13,"PBES2","","",49,null],[13,"PBMAC1","","",49,null],[13,"HmacWithSha1","","",49,null],[13,"ID_QT_CPS","","",49,null],[13,"ID_QT_UNOTICE","","",49,null],[13,"RC2_64_CBC","","",49,null],[13,"SMIMECaps","","",49,null],[13,"PBE_MD2_RC2_64","","",49,null],[13,"PBE_MD5_RC2_64","","",49,null],[13,"PBE_SHA1_DES","","",49,null],[13,"MicrosoftExtensionRequest","","",49,null],[13,"ExtensionRequest","","",49,null],[13,"Name","","",49,null],[13,"DnQualifier","","",49,null],[13,"IdPe","","",49,null],[13,"IdAd","","",49,null],[13,"AuthorityInfoAccess","","",49,null],[13,"OCSP","","",49,null],[13,"CaIssuers","","",49,null],[13,"OCSPSigning","","",49,null],[13,"UserId","","Shown as UID in cert subject",49,null],[13,"SHA256","","",49,null],[13,"SHA384","","",49,null],[13,"SHA512","","",49,null],[13,"SHA224","","",49,null],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"eq","","",49,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, &quot;OpenSSL 0.9.5a 1 Apr 2000&quot;.",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form &quot;compiler: ...&quot; if available or\n&quot;compiler: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form &quot;built on: ...&quot; if available or &quot;built on: date not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The &quot;Configure&quot; target of the library build in the form &quot;platform: ...&quot; if available or &quot;platform: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The &quot;OPENSSLDIR&quot; setting of the library build in the form &quot;OPENSSLDIR: &quot;...&quot;&quot; if available or &quot;OPENSSLDIR: N/A&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[3,"KeyIvPair"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[3,"RSA"],[3,"DH"],[3,"CipherBits"],[4,"Error"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"NonblockingSslError"],[4,"OpensslError"],[3,"OpenSslError"],[8,"IntoSsl"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"SslContext"],[3,"SslCipher"],[3,"Ssl"],[3,"SslStream"],[3,"NonblockingSslStream"],[4,"X509FileType"],[4,"X509ValidationError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"SslString"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"],[3,"X509Name"],[3,"X509Req"],[3,"GeneralNames"],[3,"GeneralNamesIter"],[3,"GeneralName"],[4,"Nid"]]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"PKCS12","openssl_sys","",null,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",1,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_void","","",null,null],[12,"stack","","",3,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",4,null],[12,"name","","",4,null],[12,"bwrite","","",4,null],[12,"bread","","",4,null],[12,"bputs","","",4,null],[12,"bgets","","",4,null],[12,"ctrl","","",4,null],[12,"create","","",4,null],[12,"destroy","","",4,null],[12,"callback_ctrl","","",4,null],[3,"_STACK","","",null,null],[12,"num","","",5,null],[12,"data","","",5,null],[12,"sorted","","",5,null],[12,"num_alloc","","",5,null],[12,"comp","","",5,null],[3,"RSA","","",null,null],[12,"pad","","",6,null],[12,"version","","",6,null],[12,"meth","","",6,null],[12,"engine","","",6,null],[12,"n","","",6,null],[12,"e","","",6,null],[12,"d","","",6,null],[12,"p","","",6,null],[12,"q","","",6,null],[12,"dmp1","","",6,null],[12,"dmq1","","",6,null],[12,"iqmp","","",6,null],[12,"ex_data","","",6,null],[12,"references","","",6,null],[12,"flags","","",6,null],[12,"_method_mod_n","","",6,null],[12,"_method_mod_p","","",6,null],[12,"_method_mod_q","","",6,null],[12,"bignum_data","","",6,null],[12,"blinding","","",6,null],[12,"mt_blinding","","",6,null],[3,"DSA","","",null,null],[12,"pad","","",7,null],[12,"version","","",7,null],[12,"write_params","","",7,null],[12,"p","","",7,null],[12,"q","","",7,null],[12,"g","","",7,null],[12,"pub_key","","",7,null],[12,"priv_key","","",7,null],[12,"kinv","","",7,null],[12,"r","","",7,null],[12,"flags","","",7,null],[12,"_method_mont_p","","",7,null],[12,"references","","",7,null],[12,"ex_data","","",7,null],[12,"meth","","",7,null],[12,"engine","","",7,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",8,null],[12,"save_type","","",8,null],[12,"references","","",8,null],[12,"ameth","","",8,null],[12,"engine","","",8,null],[12,"pkey","","",8,null],[12,"save_parameters","","",8,null],[12,"attributes","","",8,null],[3,"BIO","","",null,null],[12,"method","","",9,null],[12,"callback","","",9,null],[12,"cb_arg","","",9,null],[12,"init","","",9,null],[12,"shutdown","","",9,null],[12,"flags","","",9,null],[12,"retry_reason","","",9,null],[12,"num","","",9,null],[12,"ptr","","",9,null],[12,"next_bio","","",9,null],[12,"prev_bio","","",9,null],[12,"references","","",9,null],[12,"num_read","","",9,null],[12,"num_write","","",9,null],[12,"ex_data","","",9,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",10,null],[12,"dummy","","",10,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",11,null],[12,"block_size","","",11,null],[12,"key_len","","",11,null],[12,"iv_len","","",11,null],[12,"flags","","",11,null],[12,"init","","",11,null],[12,"do_cipher","","",11,null],[12,"cleanup","","",11,null],[12,"ctx_size","","",11,null],[12,"set_asn1_parameters","","",11,null],[12,"get_asn1_parameters","","",11,null],[12,"ctrl","","",11,null],[12,"app_data","","",11,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",12,null],[12,"d","","",12,null],[3,"BIGNUM","","",null,null],[12,"d","","",13,null],[12,"top","","",13,null],[12,"dmax","","",13,null],[12,"neg","","",13,null],[12,"flags","","",13,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_free","","",null,null],[5,"DH_new_from_params","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"TLSv1_2_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"SSL_CTX_set_alpn_protos","","",null,null],[5,"SSL_set_alpn_protos","","",null,null],[5,"SSL_CTX_set_alpn_select_cb","","",null,null],[5,"SSL_get0_alpn_selected","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_EXT_conf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_X509","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"sk_free","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",14,null],[12,"cert_dir","","",14,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"ASN1_TYPE","","",null,null],[6,"BN_CTX","","",null,null],[6,"BN_GENCB","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"DH","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CIPHER","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"bio_st","","",null,null],[6,"bio_info_cb","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"RSA_F4","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",4,null],[11,"clone","","",15,null],[11,"clone","","",11,null],[11,"clone","","",16,null],[11,"clone","","",12,null],[11,"clone","","",17,null],[11,"clone","","",13,null]],"paths":[[3,"stack_st_X509"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"BIO_METHOD"],[3,"_STACK"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"GENERAL_NAME"],[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex["openssl_sys_extras"] = {"doc":"","items":[[5,"SSL_CTX_set_options","openssl_sys_extras","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"BIO_eof","","",null,null],[5,"BIO_set_nbio","","",null,null],[5,"BIO_set_mem_eof_return","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"BIO_flush","","",null,null],[5,"SSL_CTX_set_options_shim","","",null,null],[5,"SSL_CTX_get_options_shim","","",null,null],[5,"SSL_CTX_clear_options_shim","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"X509_get_extensions","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_CTX_set_tlsext_servername_arg","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null]],"paths":[]};
searchIndex["ring"] = {"doc":"Safe, fast, small crypto using Rust with BoringSSL&#39;s cryptography\nprimitives.","items":[[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",null,null],[3,"OpeningKey","ring::aead","A key for authenticating and decrypting (&amp;ldquo;opening&amp;rdquo;)\nAEAD-protected data.",null,null],[3,"SealingKey","","A key for encrypting and signing (&amp;ldquo;sealing&amp;rdquo;) data.",null,null],[3,"Algorithm","","An AEAD Algorithm.",null,null],[5,"open_in_place","","Authenticates and decrypts (&amp;ldquo;opens&amp;rdquo;) data in place.",null,null],[5,"seal_in_place","","Encrypts and signs (&amp;ldquo;seals&amp;rdquo;) data in place.",null,null],[0,"chacha20_poly1305_openssh","","The [chacha20-poly1305@openssh.com] AEAD-ish construct.",null,null],[3,"SealingKey","ring::aead::chacha20_poly1305_openssh","A key for sealing packets.",null,null],[3,"OpeningKey","","A key for opening packets.",null,null],[17,"KEY_LEN","","The length of key.",null,null],[17,"TAG_LEN","","The length of a tag.",null,null],[17,"PACKET_LENGTH_LEN","","The length in bytes of the `packet_length` field in a SSH packet.",null,null],[11,"new","","Constructs a new `SealingKey`.",0,null],[11,"seal_in_place","","Seals (encrypts and signs) a packet.",0,null],[11,"new","","Constructs a new `OpeningKey`.",1,null],[11,"decrypt_packet_length","","Returns the decrypted, but unauthenticated, packet length.",1,null],[11,"open_in_place","","Opens (authenticates and decrypts) a packet.",1,null],[7,"CHACHA20_POLY1305","ring::aead","ChaCha20-Poly1305 as described in [RFC 7539].",null,null],[7,"AES_128_GCM","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[17,"MAX_OVERHEAD_LEN","","The maximum amount of overhead for the algorithms in this module.",null,null],[11,"new","","Create a new opening key.",2,null],[11,"algorithm","","The key&#39;s AEAD algorithm.",2,null],[11,"new","","C analogs: `EVP_AEAD_CTX_init_with_direction` with direction\n           `evp_aead_seal`, `EVP_AEAD_CTX_init`.",3,null],[11,"algorithm","","The key&#39;s AEAD algorithm.",3,null],[11,"key_len","","The length of the key.",4,null],[11,"max_overhead_len","","The maximum number of bytes that sealing operations may add to plaintexts.\nSee also `MAX_OVERHEAD_LEN`.",4,null],[11,"nonce_len","","The length of the nonces.",4,null],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",null,null],[3,"Algorithm","ring::agreement","A key agreement algorithm.",null,null],[3,"EphemeralPrivateKey","","An ephemeral private key for use (only) with `agree_ephemeral`. The\nsignature of `agree_ephemeral` ensures that an `EphemeralPrivateKey` can be\nused for at most one key agreement.",null,null],[5,"agree_ephemeral","","Performs a key agreement with an ephemeral private key and the given public\nkey.",null,{"inputs":[{"name":"ephemeralprivatekey"},{"name":"algorithm"},{"name":"input"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[7,"ECDH_P256","","ECDH using the NSA Suite B\nP-256 (secp256r1)\ncurve.",null,null],[7,"ECDH_P384","","ECDH using the NSA Suite B\nP-384 (secp384r1)\ncurve.",null,null],[7,"X25519","","X25519 (ECDH using Curve25519) as described in [RFC 7748].",null,null],[17,"PUBLIC_KEY_MAX_LEN","","The maximum length, in bytes, of an encoded public key.",null,null],[11,"generate","","Generate a new ephemeral private key for the given algorithm.",5,{"inputs":[{"name":"algorithm"},{"name":"securerandom"}],"output":{"name":"result"}}],[11,"algorithm","","The key exchange algorithm.",5,null],[11,"public_key_len","","The size in bytes of the encoded public key.",5,null],[11,"compute_public_key","","Computes the public key from the private key&#39;s value and fills `out`\nwith the public point encoded in the standard form for the algorithm.",5,null],[0,"constant_time","ring","Constant-time operations.",null,null],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(error::Unspecified)` otherwise.\nThe comparison of `a` and `b` is done in constant time with respect to the\ncontents of each, but NOT in constant time with respect to the lengths of\n`a` and `b`.",null,null],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",null,null],[3,"Context","ring::digest","A context for multi-step (Init-Update-Finish) digest calculations.",null,null],[12,"algorithm","","The context&#39;s algorithm.",6,null],[3,"Digest","","A calculated digest value.",null,null],[3,"Algorithm","","A digest algorithm.",null,null],[12,"output_len","","C analog: `EVP_MD_size`",7,null],[12,"chaining_len","","The size of the chaining value of the digest function, in bytes. For\nnon-truncated algorithms (SHA-1, SHA-256, SHA-512), this is equal to\n`output_len`. For truncated algorithms (e.g. SHA-384, SHA-512/256),\nthis is equal to the length before truncation. This is mostly helpful\nfor determining the size of an HMAC key that is appropriate for the\ndigest algorithm.",7,null],[12,"block_len","","C analog: `EVP_MD_block_size`",7,null],[5,"digest","","Returns the digest of `data` using the given digest algorithm.",null,null],[7,"SHA1","","SHA-1 as specified in [FIPS 180-4]. Deprecated.",null,null],[7,"SHA256","","SHA-256 as specified in [FIPS 180-4].",null,null],[7,"SHA384","","SHA-384 as specified in [FIPS 180-4].",null,null],[7,"SHA512","","SHA-512 as specified in [FIPS 180-4].",null,null],[17,"MAX_BLOCK_LEN","","The maximum block length (`Algorithm::block_len`) of all the algorithms in\nthis module.",null,null],[17,"MAX_OUTPUT_LEN","","The maximum output length (`Algorithm::output_len`) of all the algorithms\nin this module.",null,null],[17,"MAX_CHAINING_LEN","","The maximum chaining length (`Algorithm::chaining_len`) of all the\nalgorithms in this module.",null,null],[11,"new","","Constructs a new context.",6,{"inputs":[{"name":"algorithm"}],"output":{"name":"context"}}],[11,"update","","Updates the digest with all the data in `data`. `update` may be called\nzero or more times until `finish` is called. It must not be called\nafter `finish` has been called.",6,null],[11,"finish","","Finalizes the digest calculation and returns the digest value. `finish`\nconsumes the context so it cannot be (mis-)used after `finish` has been\ncalled.",6,null],[11,"algorithm","","The algorithm that this context is using.",6,null],[11,"clone","","",6,null],[11,"clone","","",8,null],[11,"algorithm","","The algorithm that was used to calculate the digest value.",8,null],[11,"as_ref","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",7,null],[0,"error","ring","Error reporting.",null,null],[3,"Unspecified","ring::error","An error with absolutely no details.",null,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"fmt","","",9,null],[11,"cause","","",9,null],[11,"description","","",9,null],[11,"from","","",9,{"inputs":[{"name":"endofinput"}],"output":{"name":"self"}}],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",null,null],[5,"extract_and_expand","ring::hkdf","Fills `out` with the output of the HKDF Extract-and-Expand operation for\nthe given inputs.",null,null],[5,"extract","","The HKDF-Extract operation.",null,null],[5,"expand","","Fills `out` with the output of the HKDF-Expand operation for the given\ninputs.",null,null],[0,"hmac","ring","HMAC is specified in [RFC 2104].",null,null],[3,"SigningKey","ring::hmac","A key to use for HMAC signing.",null,null],[3,"SigningContext","","A context for multi-step (Init-Update-Finish) HMAC signing.",null,null],[3,"VerificationKey","","A key to use for HMAC authentication.",null,null],[5,"sign","","Calculates the HMAC of `data` using the key `key` in one step.",null,null],[5,"verify","","Calculates the HMAC of `data` using the key `key`, and verifies whether the\nresultant value equals `signature`, in one step.",null,null],[5,"verify_with_own_key","","Calculates the HMAC of `data` using the signing key `key`, and verifies\nwhether the resultant value equals `signature`, in one step.",null,null],[11,"generate","","Generate an HMAC signing key for the given digest algorithm using\n|ring::rand|. The key will be `digest_alg.chaining_len` bytes long. The\nkey size choice is based on the recommendation of\n[NIST SP 800-107], Section 5.3.4: Security Effect of the HMAC\nKey, and is consistent with the key lengths chosen for TLS as\ndescribed in [RFC 5246, Appendix C].",10,{"inputs":[{"name":"algorithm"},{"name":"securerandom"}],"output":{"name":"result"}}],[11,"new","","Construct an HMAC signing key using the given digest algorithm and key\nvalue.",10,null],[11,"digest_algorithm","","The digest algorithm for the key.",10,null],[11,"with_key","","Constructs a new HMAC signing context using the given digest algorithm\nand key.",11,{"inputs":[{"name":"signingkey"}],"output":{"name":"signingcontext"}}],[11,"update","","Updates the HMAC with all the data in `data`. `update` may be called\nzero or more times until `finish` is called.",11,null],[11,"sign","","Finalizes the HMAC calculation and returns the HMAC value. `sign`\nconsumes the context so it cannot be (mis-)used after `sign` has been\ncalled.",11,null],[11,"new","","Construct an HMAC verification key using the given digest algorithm and\nkey value.",12,null],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",null,null],[3,"PRF","ring::pbkdf2","A PRF algorithm for use with `derive` and `verify`.",null,null],[5,"derive","","Fills `out` with the key derived using PBKDF2 with the given inputs.",null,null],[5,"verify","","Verifies that a previously-derived (e.g., using `derive`) PBKDF2 value\nmatches the PBKDF2 value derived from the other inputs.",null,null],[7,"HMAC_SHA256","","HMAC-SHA256.",null,null],[7,"HMAC_SHA512","","HMAC-SHA512.",null,null],[0,"rand","ring","Cryptographic pseudo-random number generation.",null,null],[3,"SystemRandom","ring::rand","A secure random number generator where the random values come directly\nfrom the operating system.",null,null],[8,"SecureRandom","","A secure random number generator.",null,null],[10,"fill","","Fills `dest` with random bytes.",13,null],[11,"new","","Constructs a new `SystemRandom`.",14,{"inputs":[],"output":{"name":"systemrandom"}}],[11,"fill","","This is the same as calling `fill` through the `SecureRandom` trait,\nbut allows callers to avoid the annoying step of needing to\n`use rand::SecureRandom` just to call `fill` on a `SystemRandom`.",14,null],[11,"fill","","",14,null],[0,"signature","ring","Public key signatures: signing and verification.",null,null],[3,"ECDSAParameters","ring::signature","Parameters for ECDSA signing and verification.",null,null],[3,"EdDSAParameters","","Parameters for EdDSA signing and verification.",null,null],[3,"Ed25519KeyPair","","An Ed25519 key pair, for signing.",null,null],[3,"Ed25519KeyPairBytes","","The raw bytes of the Ed25519 key pair, for serialization.",null,null],[12,"private_key","","Private key bytes.",15,null],[12,"public_key","","Public key bytes.",15,null],[3,"RSAKeyPair","","An RSA key pair, used for signing. Feature: `rsa_signing`.",null,null],[3,"RSASigningState","","State used for RSA Signing. Feature: `rsa_signing`.",null,null],[3,"RSAParameters","","Parameters for RSA verification.",null,null],[3,"Signature","","A public key signature returned from a signing operation.",null,null],[5,"verify","","Verify the signature `signature` of message `msg` with the public key\n`public_key` using the algorithm `alg`.",null,{"inputs":[{"name":"verificationalgorithm"},{"name":"input"},{"name":"input"},{"name":"input"}],"output":{"name":"result"}}],[0,"primitive","","Lower-level verification primitives. Usage of `ring::signature::verify()`\nis preferred when the public key and signature are encoded in standard\nformats, as it also handles the parsing.",null,null],[5,"verify_rsa","ring::signature::primitive","Lower-level API for the verification of RSA signatures.",null,null],[7,"ECDSA_P256_SHA256_ASN1","ring::signature","Verification of ASN.1 DER-encoded ECDSA signatures using the P-256 curve\nand SHA-256.",null,null],[7,"ECDSA_P256_SHA384_ASN1","","*Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using\nthe P-256 curve and SHA-384.",null,null],[7,"ECDSA_P384_SHA256_ASN1","","*Not recommended*. Verification of ASN.1 DER-encoded ECDSA signatures using\nthe P-384 curve and SHA-256.",null,null],[7,"ECDSA_P384_SHA384_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using the P-384 curve\nand SHA-384.",null,null],[7,"ED25519","","Verification of [Ed25519] signatures.",null,null],[7,"RSA_PKCS1_SHA256","","PKCS#1 1.5 padding using SHA-256 for RSA signatures.\nFeature: `rsa_signing`.",null,null],[7,"RSA_PKCS1_SHA384","","PKCS#1 1.5 padding using SHA-384 for RSA signatures.\nFeature: `rsa_signing`.",null,null],[7,"RSA_PKCS1_SHA512","","PKCS#1 1.5 padding using SHA-512 for RSA signatures.\nFeature: `rsa_signing`.",null,null],[7,"RSA_PSS_SHA256","","RSA PSS padding using SHA-256 for RSA signatures.",null,null],[7,"RSA_PSS_SHA384","","RSA PSS padding using SHA-384 for RSA signatures.",null,null],[7,"RSA_PSS_SHA512","","RSA PSS padding using SHA-512 for RSA signatures.",null,null],[7,"RSA_PKCS1_2048_8192_SHA1","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-1.",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-256.",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-384.",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PKCS#1.5 padding, and SHA-512.",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","Verification of signatures using RSA keys of 3072-8192 bits,\n             PKCS#1.5 padding, and SHA-384.",null,null],[7,"RSA_PSS_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-256.",null,null],[7,"RSA_PSS_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-384.",null,null],[7,"RSA_PSS_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192 bits,\n             PSS padding, and SHA-512.",null,null],[8,"RSAEncoding","","An RSA signature encoding as described in [RFC 3447 Section 8].",null,null],[8,"VerificationAlgorithm","","A signature verification algorithm.",null,null],[10,"verify","","Verify the signature `signature` of message `msg` with the public key\n`public_key`.",16,null],[11,"as_slice","","Returns a reference to the signature&#39;s encoded value.",17,null],[0,"test","ring","Testing framework.",null,null],[3,"TestCase","ring::test","A test case. A test case consists of a set of named attributes. Every\nattribute in the test case must be consumed exactly once; this helps catch\ntypos and omissions.",null,null],[5,"from_file","","Reads test cases out of the file with the path given by\n`test_data_relative_file_path`, calling `f` on each vector until `f` fails\nor until all the test vectors have been read. `f` can indicate failure\neither by returning `Err()` or by panicking.",null,{"inputs":[{"name":"str"},{"name":"f"}],"output":null}],[5,"from_hex","","Decode an string of hex digits into a sequence of bytes. The input must\nhave an even number of digits.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"rand","","Deterministic implementations of `ring::rand::SecureRandom`.",null,null],[3,"FixedByteRandom","ring::test::rand","An implementation of `SecureRandom` that always fills the output slice\nwith the given byte.",null,null],[12,"byte","","",18,null],[3,"FixedSliceRandom","","An implementation of `SecureRandom` that always fills the output slice\nwith the slice in `bytes`. The length of the slice given to `slice`\nmust match exactly.",null,null],[12,"bytes","","",19,null],[3,"FixedSliceSequenceRandom","","An implementation of `SecureRandom` where each slice in `bytes` is a\ntest vector for one call to `fill()`. *Not thread-safe.*",null,null],[12,"bytes","","The value.",20,null],[12,"current","","",20,null],[11,"fill","","",18,null],[11,"fill","","",19,null],[11,"fill","","",20,null],[11,"drop","","",20,null],[11,"consume_digest_alg","ring::test","Maps the strings &quot;SHA1&quot;, &quot;SHA256&quot;, &quot;SHA384&quot;, and &quot;SHA512&quot; to digest\nalgorithms, maps &quot;SHA224&quot; to `None`, and panics on other (erroneous)\ninputs. &quot;SHA224&quot; is mapped to None because *ring* intentionally does\nnot support SHA224, but we need to consume test vectors from NIST that\nhave SHA224 vectors in them.",21,null],[11,"consume_bytes","","Returns the value of an attribute that is encoded as a sequence of an\neven number of hex digits, or as a double-quoted UTF-8 string. The\nempty (zero-length) value is represented as &quot;&quot;.",21,null],[11,"consume_usize","","Returns the value of an attribute that is an integer, in decimal\nnotation.",21,null],[11,"consume_usize_bits","","Returns the value of an attribute that is an integer, in decimal\nnotation, as a bit length.",21,null],[11,"consume_string","","Returns the raw value of an attribute, without any unquoting or\nother interpretation.",21,null],[11,"consume_optional_string","","Like `consume_string()` except it returns `None` if the test case\ndoesn&#39;t have the attribute.",21,null],[11,"generate","ring::signature","Generates a new random key pair. There is no way to extract the private\nkey bytes to save them. If you need to save the private key bytes for\nfuture use then use `generate_serializable()` instead.",22,{"inputs":[{"name":"securerandom"}],"output":{"name":"result"}}],[11,"generate_serializable","","Generates a new key pair and returns the key pair as both an\n`Ed25519KeyPair` and a `Ed25519KeyPairBytes`. There is no way to\nextract the private key bytes from an `Ed25519KeyPair`, so extracting\nthe values from the `Ed25519KeyPairBytes` is the only way to get them.",22,{"inputs":[{"name":"securerandom"}],"output":{"name":"result"}}],[11,"from_bytes","","Copies key data from the given slices to create a new key pair. The\nfirst slice must hold the private key and the second slice must hold\nthe public key. Both slices must contain 32 little-endian-encoded\nbytes.",22,null],[11,"public_key_bytes","","Returns a reference to the little-endian-encoded public key bytes.",22,null],[11,"sign","","Returns the signature of the message `msg`.",22,null],[11,"verify","","",23,null],[11,"verify","","",24,null],[11,"verify","","",25,null],[11,"from_der","","Parse a private key in DER-encoded ASN.1 `RSAPrivateKey` form (see\n[RFC 3447 Appendix A.1.2]).",26,{"inputs":[{"name":"input"}],"output":{"name":"result"}}],[11,"public_modulus_len","","Returns the length in bytes of the key pair&#39;s public modulus.",26,null],[11,"new","","Construct an `RSASigningState` for the given `RSAKeyPair`.",27,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"key_pair","","The `RSAKeyPair`. This can be used, for example, to access the key\npair&#39;s public key through the `RSASigningState`.",27,null],[11,"sign","","Sign `msg`. `msg` is digested using the digest algorithm from\n`padding_alg` and the digest is then padded using the padding algorithm\nfrom `padding_alg`. The signature it written into `signature`;\n`signature`&#39;s length must be exactly the length returned by\n`public_modulus_len()`. `rng` is used for blinding the message during\nsigning, to mitigate some side-channel (e.g. timing) attacks.",27,null]],"paths":[[3,"SealingKey"],[3,"OpeningKey"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Algorithm"],[3,"EphemeralPrivateKey"],[3,"Context"],[3,"Algorithm"],[3,"Digest"],[3,"Unspecified"],[3,"SigningKey"],[3,"SigningContext"],[3,"VerificationKey"],[8,"SecureRandom"],[3,"SystemRandom"],[3,"Ed25519KeyPairBytes"],[8,"VerificationAlgorithm"],[3,"Signature"],[3,"FixedByteRandom"],[3,"FixedSliceRandom"],[3,"FixedSliceSequenceRandom"],[3,"TestCase"],[3,"Ed25519KeyPair"],[3,"EdDSAParameters"],[3,"ECDSAParameters"],[3,"RSAParameters"],[3,"RSAKeyPair"],[3,"RSASigningState"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["solicit"] = {"doc":"","items":[[0,"http","solicit","The module implements the framing layer of HTTP/2 and exposes an API for using it.",null,null],[3,"HeaderPart","solicit::http","A convenience struct representing a part of a header (either the name or the value) that can be\neither an owned or a borrowed byte sequence.",null,null],[3,"Header","","Represents an HTTP/2 header. Allows both the name and the value to be either an owned or a\nborrowed byte sequence.",null,null],[3,"ConnectionError","","The struct represents a connection error arising on an HTTP/2 connection.",null,null],[3,"WindowSize","","The struct represents the size of a flow control window.",null,null],[3,"Response","","A struct representing the full raw response received on an HTTP/2 connection.",null,null],[12,"stream_id","","The ID of the stream to which the response is associated. HTTP/1.1 does\nnot really have an equivalent to this.",0,null],[12,"headers","","Exposes *all* the raw response headers, including the meta-headers.\n(For now the only meta header allowed in HTTP/2 responses is the\n`:status`.)",0,null],[12,"body","","The full body of the response as an uninterpreted sequence of bytes.",0,null],[3,"Request","","A struct representing a full HTTP/2 request, along with the full body, as a\nsequence of bytes.",null,null],[12,"stream_id","","",1,null],[12,"headers","","",1,null],[12,"body","","",1,null],[4,"ErrorCode","","The enum represents an error code that are used in `RST_STREAM` and `GOAWAY` frames.\nThese are defined in [Section 7](http://http2.github.io/http2-spec/#ErrorCodes) of the HTTP/2\nspec.",null,null],[13,"NoError","","The associated condition is not a result of an error. For example, a GOAWAY might include\nthis code to indicate graceful shutdown of a connection.",2,null],[13,"ProtocolError","","The endpoint detected an unspecific protocol error. This error is for use when a more\nspecific error code is not available.",2,null],[13,"InternalError","","The endpoint encountered an unexpected internal error.",2,null],[13,"FlowControlError","","The endpoint detected that its peer violated the flow-control protocol.",2,null],[13,"SettingsTimeout","","The endpoint sent a SETTINGS frame but did not receive a response in a timely manner. See\nSection 6.5.3 (&quot;Settings Synchronization&quot;).",2,null],[13,"StreamClosed","","The endpoint received a frame after a stream was half-closed.",2,null],[13,"FrameSizeError","","The endpoint received a frame with an invalid size.",2,null],[13,"RefusedStream","","The endpoint refused the stream prior to performing any application processing (see Section\n8.1.4 for details).",2,null],[13,"Cancel","","Used by the endpoint to indicate that the stream is no longer needed.",2,null],[13,"CompressionError","","The endpoint is unable to maintain the header compression context for the connection.",2,null],[13,"ConnectError","","The connection established in response to a CONNECT request (Section 8.3) was reset or\nabnormally closed.",2,null],[13,"EnhanceYourCalm","","The endpoint detected that its peer is exhibiting a behavior that might be generating\nexcessive load.",2,null],[13,"InadequateSecurity","","The underlying transport has properties that do not meet minimum security requirements (see\nSection 9.2).",2,null],[13,"Http11Required","","The endpoint requires that HTTP/1.1 be used instead of HTTP/2.",2,null],[4,"HttpError","","An enum representing errors that can arise when performing operations involving an HTTP/2\nconnection.",null,null],[13,"IoError","","The underlying IO layer raised an error",3,null],[13,"InvalidFrame","","The HTTP/2 connection received an invalid HTTP/2 frame",3,null],[13,"PeerConnectionError","","The peer indicated a connection error",3,null],[13,"CompressionError","","The HPACK decoder was unable to decode a header chunk and raised an error.\nAny decoder error is fatal to the HTTP/2 connection as it means that the decoder contexts\nwill be out of sync.",3,null],[13,"WindowSizeOverflow","","Indicates that the local peer has discovered an overflow in the size of one of the\nconnection flow control window, which is a connection error.",3,null],[13,"UnknownStreamId","","",3,null],[13,"UnableToConnect","","",3,null],[13,"MalformedResponse","","",3,null],[13,"Other","","",3,null],[4,"HttpScheme","","An enum representing the two possible HTTP schemes.",null,null],[13,"Http","","The variant corresponding to `http://`",4,null],[13,"Https","","The variant corresponding to `https://`",4,null],[0,"frame","","The module contains the implementation of HTTP/2 frames.",null,null],[3,"NoFlag","solicit::http::frame","A helper struct that can be used by all frames that do not define any flags.",null,null],[3,"RawFrame","","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame\nas it is read from the wire.",null,null],[5,"unpack_header","","Deconstructs a `FrameHeader` into its corresponding 4 components,\nrepresented as a 4-tuple: `(length, frame_type, flags, stream_id)`.",null,{"inputs":[{"name":"frameheaderbuffer"}],"output":{"name":"frameheader"}}],[5,"pack_header","","Constructs a buffer of 9 bytes that represents the given `FrameHeader`.",null,{"inputs":[{"name":"frameheader"}],"output":{"name":"frameheaderbuffer"}}],[0,"builder","","Defines the `FrameBuilder` trait and some default implementations of the trait.",null,null],[8,"FrameBuilder","solicit::http::frame::builder","A trait that provides additional methods for serializing HTTP/2 frames.",null,null],[11,"write_header","","Write the given frame header as the next octets (i.e. without moving the cursor to the\nbeginning of the buffer).",5,null],[11,"overwrite_header","","Overwrite the previously written header, assuming it&#39;s the first byte sequence of the\nbuffer.",5,null],[11,"copy_bytes_from","","Copy all available bytes from the given `io::Read` instance.",5,null],[11,"write_padding","","Write the given number of padding octets.",5,null],[11,"write_u32","","Write the given unsigned 32 bit integer to the underlying stream. The integer is written as\nfour bytes in network endian style.",5,null],[0,"data","solicit::http::frame","The module contains the implementation of the `DATA` frame and associated flags.",null,null],[3,"DataChunk","solicit::http::frame::data","A helper struct that allows the chunk to be either borrowed or owned. Used to provide the\n`From` implementations that allow us to implement generic methods that accept any type that can\nbe converted into a `DataChunk` (given that the native `Cow` type does not have these\nimplementations and we cannot add them).",null,null],[3,"DataFrame","","A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2\nspec, section 6.1.",null,null],[12,"data","","The data found in the frame as an opaque byte sequence. It never\nincludes padding bytes.",6,null],[4,"DataFlag","","An enum representing the flags that a `DataFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",7,null],[13,"Padded","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"fmt","","",7,null],[11,"bitmask","","",7,null],[11,"from","","",8,{"inputs":[{"name":"vec"}],"output":{"name":"datachunk"}}],[11,"from","","",8,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"new","","Creates a new empty `DataFrame`, associated to the stream with the\ngiven ID.",6,{"inputs":[{"name":"streamid"}],"output":{"name":"dataframe"}}],[11,"with_data","","Creates a new `DataFrame` with the given `DataChunk`.",6,{"inputs":[{"name":"streamid"},{"name":"d"}],"output":{"name":"dataframe"}}],[11,"is_padded","","Returns `true` if the DATA frame is padded, otherwise false.",6,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",6,null],[11,"set_padding","","Sets the number of bytes that should be used as padding for this\nframe.",6,null],[11,"payload_len","","Returns the total length of the payload, taking into account possible\npadding.",6,null],[11,"set_flag","","Sets the given flag for the frame.",6,null],[11,"from_raw","","Creates a new `DataFrame` from the given `RawFrame` (i.e. header and\npayload), if possible.  Returns `None` if a valid `DataFrame` cannot be\nconstructed from the given `RawFrame`.",6,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",6,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",6,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the frame.",6,null],[11,"serialize_into","","",6,null],[0,"headers","solicit::http::frame","The module contains the implementation of the `HEADERS` frame and associated flags.",null,null],[3,"StreamDependency","solicit::http::frame::headers","The struct represents the dependency information that can be attached to\na stream and sent within a HEADERS frame (one with the Priority flag set).",null,null],[12,"stream_id","","The ID of the stream that a particular stream depends on",9,null],[12,"weight","","The weight for the stream. The value exposed (and set) here is always\nin the range [0, 255], instead of [1, 256] \\(as defined in section 5.3.2.)\nso that the value fits into a `u8`.",9,null],[12,"is_exclusive","","A flag indicating whether the stream dependency is exclusive.",9,null],[3,"HeadersFrame","","A struct representing the HEADERS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.2.",null,null],[12,"stream_id","","The ID of the stream with which this frame is associated",10,null],[12,"stream_dep","","The stream dependency information, if any.",10,null],[12,"padding_len","","The length of the padding, if any.",10,null],[4,"HeadersFlag","","An enum representing the flags that a `HeadersFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",11,null],[13,"EndHeaders","","",11,null],[13,"Padded","","",11,null],[13,"Priority","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",11,null],[11,"bitmask","","",11,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","Creates a new `StreamDependency` with the given stream ID, weight, and\nexclusivity.",9,{"inputs":[{"name":"streamid"},{"name":"u8"},{"name":"bool"}],"output":{"name":"streamdependency"}}],[11,"parse","","Parses the first 5 bytes in the buffer as a `StreamDependency`.\n(Each 5-byte sequence is always decodable into a stream dependency\nstructure).",9,null],[11,"serialize","","Serializes the `StreamDependency` into a 5-byte buffer representing the\ndependency description, as described in section 6.2. of the HTTP/2\nspec:",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","Creates a new `HeadersFrame` with the given header fragment and stream\nID. No padding, no stream dependency, and no flags are set.",10,{"inputs":[{"name":"vec"},{"name":"streamid"}],"output":{"name":"headersframe"}}],[11,"with_dependency","","Creates a new `HeadersFrame` with the given header fragment, stream ID\nand stream dependency information. No padding and no flags are set.",10,{"inputs":[{"name":"vec"},{"name":"streamid"},{"name":"streamdependency"}],"output":{"name":"headersframe"}}],[11,"is_headers_end","","Returns whether this frame ends the headers. If not, there MUST be a\nnumber of follow up CONTINUATION frames that send the rest of the\nheader data.",10,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",10,null],[11,"set_padding","","Sets the padding length for the frame, as well as the corresponding\nPadded flag.",10,null],[11,"header_fragment","","",10,null],[11,"set_flag","","Sets the given flag for the frame.",10,null],[11,"from_raw","","Creates a new `HeadersFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",10,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",10,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",10,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",10,null],[11,"serialize_into","","",10,null],[0,"rst_stream","solicit::http::frame","The module contains the implementation of the `RST_STREAM` frame.",null,null],[3,"RstStreamFrame","solicit::http::frame::rst_stream","The struct represents the `RST_STREAM` HTTP/2 frame.",null,null],[17,"RST_STREAM_FRAME_LEN","","The total allowed size for the `RST_STREAM` frame payload.",null,null],[17,"RST_STREAM_FRAME_TYPE","","The frame type of the `RST_STREAM` frame.",null,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"new","","Constructs a new `RstStreamFrame` with the given `ErrorCode`.",12,{"inputs":[{"name":"streamid"},{"name":"errorcode"}],"output":{"name":"rststreamframe"}}],[11,"with_raw_error_code","","Constructs a new `RstStreamFrame` that will use the given `raw_error_code` for its payload.",12,{"inputs":[{"name":"streamid"},{"name":"u32"}],"output":{"name":"rststreamframe"}}],[11,"error_code","","Returns the interpreted error code of the frame. Any unknown error codes are mapped into\nthe `InternalError` variant of the enum.",12,null],[11,"raw_error_code","","Returns the original raw error code of the frame. If the code is unknown, it will not be\nchanged.",12,null],[11,"from_raw","","",12,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","",12,null],[11,"get_stream_id","","",12,null],[11,"get_header","","",12,null],[11,"serialize_into","","",12,null],[0,"settings","solicit::http::frame","The module contains the implementation of the `SETTINGS` frame and associated flags.",null,null],[3,"SettingsFrame","solicit::http::frame::settings","A struct representing the SETTINGS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.5.",null,null],[12,"settings","","Contains all the settings that are currently set in the frame. It is\nsafe to access this field (to read, add, or remove settings), even\nthough a helper method `add_setting` exists.",13,null],[4,"HttpSetting","","An enum that lists all valid settings that can be sent in a SETTINGS\nframe.",null,null],[13,"HeaderTableSize","","",14,null],[13,"EnablePush","","",14,null],[13,"MaxConcurrentStreams","","",14,null],[13,"InitialWindowSize","","",14,null],[13,"MaxFrameSize","","",14,null],[13,"MaxHeaderListSize","","",14,null],[4,"SettingsFlag","","An enum representing the flags that a `SettingsFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"Ack","","",15,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"from_id","","Creates a new `HttpSetting` with the correct variant corresponding to\nthe given setting id, based on the settings IDs defined in section\n6.5.2.",14,{"inputs":[{"name":"u16"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_id","","Returns the setting ID as an unsigned 16 bit integer, as defined in\nsection 6.5.2.",14,null],[11,"get_val","","Gets the setting value by unpacking it from the wrapped `u32`.",14,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"bitmask","","",15,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"new","","Creates a new `SettingsFrame`",13,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"new_ack","","A convenience constructor that returns a `SettingsFrame` with the ACK\nflag already set and no settings.",13,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"add_setting","","Adds the given setting to the frame.",13,null],[11,"set_ack","","Sets the ACK flag for the frame. This method is just a convenience\nmethod for calling `frame.set_flag(SettingsFlag::Ack)`.",13,null],[11,"is_ack","","Checks whether the `SettingsFrame` has an ACK attached to it.",13,null],[11,"set_flag","","Sets the given flag for the frame.",13,null],[11,"from_raw","","Creates a new `SettingsFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",13,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",13,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",13,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",13,null],[11,"serialize_into","","",13,null],[0,"goaway","solicit::http::frame","Implements the `GOAWAY` HTTP/2 frame.",null,null],[3,"GoawayFrame","solicit::http::frame::goaway","The struct represents the `GOAWAY` HTTP/2 frame.",null,null],[17,"GOAWAY_MIN_FRAME_LEN","","The minimum size for the `GOAWAY` frame payload.\nIt is 8 octets, as the last stream id and error code are required parts of the GOAWAY frame.",null,null],[17,"GOAWAY_FRAME_TYPE","","The frame type of the `GOAWAY` frame.",null,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"new","","Create a new `GOAWAY` frame with the given error code and no debug data.",16,{"inputs":[{"name":"streamid"},{"name":"errorcode"}],"output":{"name":"self"}}],[11,"with_debug_data","","Create a new `GOAWAY` frame with the given parts.",16,null],[11,"error_code","","Returns the interpreted error code of the frame. Any unknown error codes are mapped into\nthe `InternalError` variant of the enum.",16,null],[11,"raw_error_code","","Returns the original raw error code of the frame. If the code is unknown, it will not be\nchanged.",16,null],[11,"last_stream_id","","Returns the associated last stream ID.",16,null],[11,"debug_data","","Returns the debug data associated with the frame.",16,null],[11,"payload_len","","Returns the total length of the frame&#39;s payload, including any debug data.",16,null],[11,"from_raw","","",16,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","",16,null],[11,"get_stream_id","","",16,null],[11,"get_header","","",16,null],[11,"serialize_into","","",16,null],[0,"ping","solicit::http::frame","Implements the `PING` HTTP/2 frame.",null,null],[3,"PingFlag","solicit::http::frame::ping","",null,null],[3,"PingFrame","","The struct represents the `PINg` HTTP/2 frame.",null,null],[17,"PING_FRAME_LEN","","Ping frames are always 8 bytes",null,null],[17,"PING_FRAME_TYPE","","The frame type of the `PING` frame.",null,null],[11,"bitmask","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"new","","Create a new `PING` frame",18,{"inputs":[],"output":{"name":"self"}}],[11,"new_ack","","Create a new PING frame with ACK set",18,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"with_data","","Create a new `PING` frame with the given opaque_data",18,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"is_ack","","",18,null],[11,"opaque_data","","",18,null],[11,"from_raw","","",18,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","",18,null],[11,"get_stream_id","","",18,null],[11,"get_header","","",18,null],[11,"serialize_into","","",18,null],[0,"window_update","solicit::http::frame","Implements the `WINDOW_UPDATE` HTTP/2 frame.",null,null],[3,"WindowUpdateFrame","solicit::http::frame::window_update","The struct represents the `WINDOW_UPDATE` HTTP/2 frame.",null,null],[17,"WINDOW_UPDATE_FRAME_LEN","","The minimum size for the `WINDOW_UPDATE` frame payload.",null,null],[17,"WINDOW_UPDATE_FRAME_TYPE","","The frame type of the `WINDOW_UPDATE` frame.",null,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"for_connection","","Creates a new `WindowUpdateFrame` that will increment the connection-level window by the\ngiven increment.",19,{"inputs":[{"name":"u32"}],"output":{"name":"windowupdateframe"}}],[11,"for_stream","","Creates a new `WindowUpdateFrame` that will increment the given stream&#39;s window by the\ngiven increment.",19,{"inputs":[{"name":"streamid"},{"name":"u32"}],"output":{"name":"windowupdateframe"}}],[11,"increment","","Returns the window increment indicated by the frame.",19,null],[11,"from_raw","","",19,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","",19,null],[11,"get_stream_id","","",19,null],[11,"get_header","","",19,null],[11,"serialize_into","","",19,null],[6,"FrameHeaderBuffer","solicit::http::frame","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored\nin.",null,null],[6,"FrameHeader","","An alias for the 4-tuple representing the components of each HTTP/2 frame\nheader.",null,null],[17,"FRAME_HEADER_LEN","","",null,null],[8,"FrameIR","","A trait that types that are an intermediate representation of HTTP/2 frames should implement.\nIt allows us to generically serialize any intermediate representation into an on-the-wire\nrepresentation.",null,null],[10,"serialize_into","","Write out the on-the-wire representation of the frame into the given `FrameBuilder`.",20,null],[8,"Flag","","A trait that all HTTP/2 frame header flags need to implement.",null,null],[10,"bitmask","","Returns a bit mask that represents the flag.",21,null],[8,"Frame","","A trait that all HTTP/2 frame structs need to implement.",null,null],[16,"FlagType","","The type that represents the flags that the particular `Frame` can take.\nThis makes sure that only valid `Flag`s are used with each `Frame`.",22,null],[10,"from_raw","","Creates a new `Frame` from the given `RawFrame` (i.e. header and\npayload), if possible.",22,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[10,"is_set","","Tests if the given flag is set for the frame.",22,null],[10,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated",22,null],[10,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",22,null],[11,"bitmask","","",23,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"parse","","Parses a `RawFrame` from the bytes starting at the beginning of the given buffer.",24,null],[11,"len","","Returns the total length of the `RawFrame`, including both headers, as well as the entire\npayload.",24,null],[11,"serialize","","Returns a `Vec` of bytes representing the serialized (on-the-wire)\nrepresentation of this raw frame.",24,null],[11,"header","","Returns a `FrameHeader` instance corresponding to the headers of the\n`RawFrame`.",24,null],[11,"payload","","Returns a slice representing the payload of the `RawFrame`.",24,null],[11,"into","","",24,null],[11,"as_ref","","",24,null],[11,"from","","",24,{"inputs":[{"name":"vec"}],"output":{"name":"rawframe"}}],[11,"from","","",24,null],[11,"serialize_into","","",24,null],[0,"transport","solicit::http","The module contains implementations of the transport layer functionality\nthat HTTP/2 requires. It exposes APIs that allow the HTTP/2 connection to\nuse the transport layer without requiring it to know which exact\nimplementation they are using (e.g. a clear-text TCP connection, a TLS\nprotected connection, or even a mock implementation).",null,null],[3,"TransportReceiveFrame","solicit::http::transport","The struct is a an implementation of the `ReceiveFrame` trait that wraps an existing\n`TransportStream` and uses it to provide HTTP/2 frames, when asked for one, by reading from the\nstream.\nThe implementation always allocates a new buffer on the heap for every incoming frame.",null,null],[8,"TransportStream","","A trait that any struct that wants to provide the transport layer for\nHTTP/2 needs to implement.",null,null],[11,"read_exact","","A convenience method that performs as many `read` calls on the\nunderlying `Read` implementation as it takes to fill the given buffer.",25,null],[10,"try_split","","Attempts to split the `TransportStream` instance into a new independently\nowned handle to the same underlying stream.",25,null],[10,"close","","Attempts to shutdown both ends of the transport stream.",25,null],[11,"new","","Create a new `TransportReceiveFrame` that will use the given `TransportStream` for reading\nthe frame.",26,{"inputs":[{"name":"ts"}],"output":{"name":"transportreceiveframe"}}],[11,"recv_frame","","",26,null],[0,"connection","solicit::http","The module contains the implementation of an HTTP/2 connection.",null,null],[3,"HttpConnection","solicit::http::connection","The struct implements the HTTP/2 connection level logic.",null,null],[12,"scheme","","The scheme of the connection",27,null],[3,"DataChunk","","The struct represents a chunk of data that should be sent to the peer on a particular stream.",null,null],[12,"data","","The data that should be sent.",28,null],[12,"stream_id","","The ID of the stream on which the data should be sent.",28,null],[12,"end_stream","","Whether the data chunk will also end the stream.",28,null],[3,"HttpConnectionSender","","The struct represents an `HttpConnection` that has been bound to a `SendFrame` reference,\nallowing it to send frames. It exposes convenience methods for various send operations that can\nbe invoked on the underlying stream. The methods prepare the appropriate frames and queue their\nsending on the referenced `SendFrame` instance.",null,null],[4,"HttpFrame","","An enum representing all frame variants that can be returned by an `HttpConnection` can handle.",null,null],[13,"DataFrame","","",29,null],[13,"HeadersFrame","","",29,null],[13,"RstStreamFrame","","",29,null],[13,"SettingsFrame","","",29,null],[13,"PingFrame","","",29,null],[13,"GoawayFrame","","",29,null],[13,"WindowUpdateFrame","","",29,null],[13,"UnknownFrame","","",29,null],[4,"SendStatus","","The enum represents the success status of the operation of sending a next data chunk on an\nHTTP/2 connection.",null,null],[13,"Sent","","Indicates that a DATA frame was successfully sent",30,null],[13,"Nothing","","Indicates that nothing was sent, but that no errors occurred.",30,null],[4,"EndStream","","An enum indicating whether the `HttpConnection` send operation should end the stream.",null,null],[13,"Yes","","The stream should be closed",31,null],[13,"No","","The stream should still be kept open",31,null],[8,"SendFrame","","A trait that should be implemented by types that can provide the functionality\nof sending HTTP/2 frames.",null,null],[10,"send_frame","","Queue the given frame for immediate sending to the peer. It is the responsibility of each\nindividual `SendFrame` implementation to correctly serialize the given `FrameIR` into an\nappropriate buffer and make sure that the frame is subsequently eventually pushed to the\npeer.",32,null],[8,"ReceiveFrame","","A trait that should be implemented by types that can provide the functionality\nof receiving HTTP/2 frames.",null,null],[10,"recv_frame","","Return a new `HttpFrame` instance. Unknown frames can be wrapped in the\n`HttpFrame::UnknownFrame` variant (i.e. their `RawFrame` representation).",33,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"from_raw","","",29,{"inputs":[{"name":"rawframe"}],"output":{"name":"httpresult"}}],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"fmt","","",30,null],[11,"new","","Creates a new `DataChunk`.",28,{"inputs":[{"name":"cow"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"new_borrowed","","Creates a new `DataChunk` from a borrowed slice. This method should become obsolete if we\ncan take an `Into&lt;Cow&lt;_, _&gt;&gt;` without using unstable features.",28,{"inputs":[{"name":"d"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"fmt","","",31,null],[11,"rst_stream","","Send a RST_STREAM frame for the given frame id",34,null],[11,"send_settings_ack","","Sends a SETTINGS acknowledge frame to the peer.",34,null],[11,"send_ping_ack","","Sends a PING ack",34,null],[11,"send_ping","","Sends a PING request",34,null],[11,"send_headers","","A helper function that inserts the frames required to send the given headers onto the\n`SendFrame` stream.",34,null],[11,"send_data","","A helper function that inserts a frame representing the given data into the `SendFrame`\nstream. In doing so, the connection&#39;s outbound flow control window is adjusted\nappropriately.",34,null],[11,"send_next_data","","Sends the chunk of data provided by the given `DataPrioritizer`.",34,null],[11,"new","","Creates a new `HttpConnection` that will use the given sender\nfor writing frames.",27,{"inputs":[{"name":"httpscheme"}],"output":{"name":"httpconnection"}}],[11,"sender","","Creates a new `HttpConnectionSender` instance that will use the given `SendFrame` instance\nto send the frames that it prepares. This is a convenience struct so that clients do not\nhave to pass the same `sender` reference to multiple send methods.",27,null],[11,"in_window_size","","Returns the current size of the inbound flow control window (i.e. the number of octets that\nthe connection will accept and the peer will send at most, unless the window is updated).",27,null],[11,"out_window_size","","Returns the current size of the outbound flow control window (i.e. the number of octets\nthat can be sent on the connection to the peer without violating flow control).",27,null],[11,"expect_settings","","The method processes the next frame provided by the given `ReceiveFrame` instance, expecting\nit to be a SETTINGS frame.\nAdditionally, the frame cannot be an ACK settings frame, but rather it should contain the\npeer&#39;s settings.",27,null],[11,"handle_next_frame","","Handles the next frame incoming on the given `ReceiveFrame` instance.",27,null],[0,"session","solicit::http","Defines the interface for the session-level management of HTTP/2\ncommunication. This is effectively an API that allows hooking into an\nHTTP/2 connection in order to handle events arising on the connection.",null,null],[3,"StreamIter","solicit::http::session","A newtype for an iterator over `Stream`s saved in a `SessionState`.",null,null],[3,"Client","","A phantom type for the `DefaultSessionState` struct that indicates that the struct should be\ngeared for a client session.",null,null],[3,"Server","","A phantom type for the `DefaultSessionState` struct that indicates that the struct should be\ngeared for a server session.",null,null],[3,"DefaultSessionState","","An implementation of the `SessionState` trait that tracks the active streams in a `HashMap`,\nmapping the stream ID to the concrete `Stream` instance.",null,null],[3,"DefaultStream","","An implementation of the `Stream` trait that saves all headers and data\nin memory.",null,null],[12,"stream_id","","The ID of the stream, if already assigned by the connection.",35,null],[12,"headers","","The headers associated with the stream (i.e. the response headers)",35,null],[12,"body","","The body of the stream (i.e. the response body)",35,null],[12,"state","","The current stream state.",35,null],[4,"StreamState","","The enum represents all the states that an HTTP/2 stream can be found in.",null,null],[13,"Idle","","",36,null],[13,"ReservedLocal","","",36,null],[13,"ReservedRemote","","",36,null],[13,"Open","","",36,null],[13,"HalfClosedRemote","","",36,null],[13,"HalfClosedLocal","","",36,null],[13,"Closed","","",36,null],[4,"StreamDataError","","The enum represents errors that can be returned from the `Stream::get_data_chunk` method.",null,null],[13,"Closed","","Indicates that the stream cannot provide any data, since it is closed for further writes\nfrom the peer&#39;s side.",37,null],[13,"Other","","A different error while trying to obtain the data chunk. Wraps a boxed `Error` impl.",37,null],[4,"StreamDataChunk","","The enum represents the successful completion of the `Stream::get_data_chunk` method.",null,null],[13,"Chunk","","A data chunk of the given size, after which more chunks can follow.",38,null],[13,"Last","","The chunk was the last one that the stream will ever write.",38,null],[13,"Unavailable","","No data currently available, but the stream isn&#39;t closed yet",38,null],[5,"default_client_state","","Create a new `DefaultSessionState` for a client session.\nThis function is a workaround required due to\n[rust-lang/rust#29023](https://github.com/rust-lang/rust/issues/29023).",null,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[5,"default_server_state","","Create a new `DefaultSessionState` for a server session.\nThis function is a workaround required due to\n[rust-lang/rust#29023](https://github.com/rust-lang/rust/issues/29023).",null,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[8,"Session","","A trait that defines the interface between an `HttpConnection` and the higher-levels that use\nit. Essentially, it allows the `HttpConnection` to pass information onto those higher levels\nthrough a well-defined interface.",null,null],[10,"new_data_chunk","","Notifies the `Session` that a new data chunk has arrived on the\nconnection for a particular stream. Only the raw data is passed\nto the callback (all padding is already discarded by the connection).",39,null],[10,"new_headers","","Notifies the `Session` that headers have arrived for a particular\nstream. The given list of headers is already decoded by the connection.\nTODO: The Session should be notified separately for every header that is decoded.",39,null],[10,"end_of_stream","","Notifies the `Session` that a particular stream got closed by the peer.",39,null],[10,"rst_stream","","Notifies the `Session` that a particular stream was reset by the peer and provides the\nreason behind it.",39,null],[10,"new_settings","","Notifies the `Session` that the peer has sent a new set of settings. The session itself is\nresponsible for acknowledging the receipt of the settings.",39,null],[10,"on_ping","","Notifies the `Session` that a PING request has been received. The session itself is\nresponsible for replying with an ACK.",39,null],[10,"on_pong","","Notifies the `Session` that a PING acknowledgement has been received.",39,null],[11,"on_goaway","","Notifies the `Session` that the peer has sent a GOAWAY frame, indicating that the\nconnection is terminated.",39,null],[8,"SessionState","","A trait defining a set of methods for accessing and influencing an HTTP/2 session&#39;s state.",null,null],[16,"Stream","","The type of the `Stream` that the `SessionState` manages.",40,null],[10,"insert_outgoing","","Inserts the given `Stream` into the session&#39;s state, starting to track it.\nThe `SessionState` should assign it the next available outgoing stream ID.",40,null],[10,"insert_incoming","","Inserts the given `Stream` into the session&#39;s state, considering it an incoming\nstream.\nTODO(mlalic): Allow the exact error to propagate out.",40,null],[10,"get_stream_ref","","Returns a reference to a `Stream` with the given `StreamId`, if it is found in the current\nsession.",40,null],[10,"get_stream_mut","","Returns a mutable reference to a `Stream` with the given `StreamId`, if it is found in the\ncurrent session.",40,null],[10,"remove_stream","","Removes the stream with the given `StreamId` from the session. If the stream was found in\nthe session, it is returned in the result.",40,null],[10,"iter","","Returns an iterator over the streams currently found in the session.",40,null],[10,"len","","The number of streams tracked by this state object",40,null],[11,"get_closed","","Returns all streams that are closed and tracked by the session state.",40,null],[8,"Stream","","A trait representing a single HTTP/2 stream. An HTTP/2 connection multiplexes a number of\nstreams.",null,null],[10,"new_data_chunk","","Handle a new data chunk that has arrived for the stream.",41,null],[10,"set_headers","","Set headers for a stream. A stream is only allowed to have one set of\nheaders.",41,null],[10,"set_state","","Sets the stream state to the newly provided state.",41,null],[11,"on_rst_stream","","Invoked when the session detects that the peer has reset the stream (i.e. sent a RST_STREAM\nframe for this stream).",41,null],[10,"get_data_chunk","","Places the next data chunk that should be written onto the stream into the given buffer.",41,null],[10,"state","","Returns the current state of the stream.",41,null],[11,"close","","Transitions the stream state to closed. After this, the stream is considered to be closed\nfor any further reads or writes.",41,null],[11,"close_local","","Updates the `Stream` status to indicate that it is closed locally.",41,null],[11,"close_remote","","Updates the `Stream` status to indicate that it is closed on the remote peer&#39;s side.",41,null],[11,"is_closed","","Returns whether the stream is closed.",41,null],[11,"is_closed_local","","Returns whether the stream is closed locally.",41,null],[11,"is_closed_remote","","Returns whether the remote peer has closed the stream. This includes a fully closed stream.",41,null],[11,"next","","",42,null],[11,"new","","Creates a new `DefaultSessionState` for a client session with no known streams.",43,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[11,"new","","Creates a new `DefaultSessionState` for a server session with no known streams.",43,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[11,"insert_outgoing","","",43,null],[11,"insert_incoming","","",43,null],[11,"get_stream_ref","","",43,null],[11,"get_stream_mut","","",43,null],[11,"remove_stream","","",43,null],[11,"iter","","",43,null],[11,"len","","Number of currently active streams",43,null],[11,"clone","","",36,null],[11,"eq","","",36,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[11,"from","","",37,{"inputs":[{"name":"e"}],"output":{"name":"streamdataerror"}}],[11,"clone","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",35,null],[11,"new","","Create a new `DefaultStream`, where the ID is not yet assigned.",35,{"inputs":[],"output":{"name":"defaultstream"}}],[11,"with_id","","Create a new `DefaultStream` with the given ID.",35,{"inputs":[{"name":"streamid"}],"output":{"name":"defaultstream"}}],[11,"set_full_data","","Sets the outgoing data of the stream to the given `Vec`.",35,null],[11,"new_data_chunk","","",35,null],[11,"set_headers","","",35,null],[11,"set_state","","",35,null],[11,"state","","",35,null],[11,"get_data_chunk","","",35,null],[0,"priority","solicit::http","The module exposes an API for defining data prioritization strategies.",null,null],[3,"SimplePrioritizer","solicit::http::priority","An implementation of the `DataPrioritizer` trait that is based on finding the first stream from\nthe given `SessionState` instance that can send data and returning this chunk.",null,null],[8,"DataPrioritizer","","A trait that types that want to provide data to an HTTP/2 connection need to implement.",null,null],[10,"get_next_chunk","","Returns the next `DataChunk` that should be sent on the HTTP/2 connection. `None` indicates\nthat currently there was no data that could be sent at that point.",44,null],[11,"new","","Creates a new `SimplePrioritizer` that will use the given state to find stream data that\nshould be sent and use the given buffer to hold the data of the returned chunk.",45,null],[11,"get_next_chunk","","",45,null],[0,"client","solicit::http","The module contains a number of reusable components for implementing the client side of an\nHTTP/2 connection.",null,null],[3,"ClientStream","solicit::http::client","A convenience wrapper type that represents an established client network transport stream.\nIt wraps the stream itself, the scheme of the protocol to be used, and the remote\nhost name.",null,null],[12,"0","","",46,null],[12,"1","","",46,null],[12,"2","","",46,null],[3,"CleartextConnector","","A struct that establishes a cleartext TCP connection that can be used by an HTTP/2\nconnection. Defaults to using port 80.",null,null],[12,"host","","The host to which the connection should be established",47,null],[12,"port","","The port on which the connection should be established",47,null],[3,"CleartextConnectError","","A newtype wrapping the `io::Error`, as it occurs when attempting to\nestablish an HTTP/2 connection over cleartext TCP (with prior knowledge).",null,null],[3,"RequestStream","","A struct representing a request stream. It provides the headers that are to be sent when\ninitiating the request, as well as a `Stream` instance that handles the received response and\nprovides the request body.",null,null],[12,"headers","","The list of headers that will be sent with the request.",48,null],[12,"stream","","The underlying `Stream` instance, which will handle the response, as well as optionally\nprovide the body of the request.",48,null],[3,"ClientConnection","","The struct extends the `HttpConnection` API with client-specific methods (such as\n`start_request`) and wires the `HttpConnection` to the client `Session` callbacks.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",49,null],[3,"ClientSession","","An implementation of the `Session` trait specific to handling client HTTP/2 connections.",null,null],[5,"write_preface","","Writes the client preface to the given `io::Write` instance.",null,{"inputs":[{"name":"w"}],"output":{"name":"result"}}],[0,"tls","","The module contains helpers for implementing TLS-based client connections.",null,null],[3,"TlsConnector","solicit::http::client::tls","A struct implementing the functionality of establishing a TLS-backed TCP stream\nthat can be used by an HTTP/2 connection. Takes care to set all the TLS options\nto those allowed by the HTTP/2 spec, as well as of the protocol negotiation.",null,null],[12,"host","","",50,null],[4,"TlsConnectError","","An enum representing possible errors that can arise when trying to\nestablish an HTTP/2 connection over TLS.",null,null],[13,"IoError","","The variant corresponds to the underlying raw TCP connection returning\nan error.",51,null],[13,"SslError","","The variant corresponds to the TLS negotiation returning an error.",51,null],[13,"Http2NotSupported","","The variant corresponds to the case when the TLS connection is\nestablished, but the application protocol that was negotiated didn&#39;t\nend up being HTTP/2.\nIt wraps the established SSL stream in order to allow the client to\ndecide what to do with it (and the application protocol that was\nchosen).",51,null],[11,"fmt","","",51,null],[11,"fmt","","",51,null],[11,"description","","",51,null],[11,"cause","","",51,null],[11,"from","","",51,{"inputs":[{"name":"error"}],"output":{"name":"tlsconnecterror"}}],[11,"from","","",51,{"inputs":[{"name":"sslerror"}],"output":{"name":"tlsconnecterror"}}],[11,"new","","Creates a new `TlsConnector` that will create a new `SslContext` before\ntrying to establish the TLS connection. The path to the CA file that the\ncontext will use needs to be provided.",50,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"tlsconnector"}}],[11,"with_context","","Creates a new `TlsConnector` that will use the provided context to\ncreate the `SslStream` that will back the HTTP/2 connection.",50,{"inputs":[{"name":"str"},{"name":"sslcontext"}],"output":{"name":"tlsconnector"}}],[11,"build_default_context","","Builds up a default `SslContext` instance wth TLS settings that the\nHTTP/2 spec mandates. The path to the CA file needs to be provided.",50,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"connect","","",50,null],[8,"HttpConnectError","solicit::http::client","A marker trait for errors raised by attempting to establish an HTTP/2\nconnection.",null,null],[8,"HttpConnect","","A trait that can be implemented by structs that want to provide the\nfunctionality of establishing network connections for use by HTTP/2 connections.",null,null],[16,"Stream","","The type of the underlying transport stream that the `HttpConnection`s\nproduced by this `HttpConnect` implementation will be based on.",52,null],[16,"Err","","The type of the error that can be produced by trying to establish the\nconnection (i.e. calling the `connect` method).",52,null],[10,"connect","","Establishes a network connection that can be used by HTTP/2 connections.",52,null],[11,"from","solicit::http","",3,{"inputs":[{"name":"e"}],"output":{"name":"httperror"}}],[11,"new","solicit::http::client","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on port 80.",47,{"inputs":[{"name":"str"}],"output":{"name":"cleartextconnector"}}],[11,"with_port","","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on the given port.",47,{"inputs":[{"name":"str"},{"name":"u16"}],"output":{"name":"cleartextconnector"}}],[11,"fmt","","",53,null],[11,"fmt","","",53,null],[11,"description","","",53,null],[11,"cause","","",53,null],[11,"from","","",53,{"inputs":[{"name":"error"}],"output":{"name":"cleartextconnecterror"}}],[11,"connect","","Establishes a cleartext TCP connection based on the host and port.\nIf it is not possible, returns an `HttpError`.",47,null],[11,"with_connection","","Creates a new `ClientConnection` that will use the given `HttpConnection`\nfor all its underlying HTTP/2 communication.",49,{"inputs":[{"name":"httpconnection"},{"name":"state"}],"output":{"name":"clientconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",49,null],[11,"expect_settings","","Handles the next frame provided by the given frame receiver and expects it to be a\n`SETTINGS` frame. If it is not, it returns an error.",49,null],[11,"start_request","","Starts a new request based on the given `RequestStream`.",49,null],[11,"send_ping","","Send a PING",49,null],[11,"handle_next_frame","","Fully handles the next incoming frame provided by the given `ReceiveFrame` instance.\nHandling a frame may cause changes to the session state exposed by the `ClientConnection`.",49,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",49,null],[11,"new","","Returns a new `ClientSession` associated to the given state.",54,{"inputs":[{"name":"state"},{"name":"s"}],"output":{"name":"clientsession"}}],[11,"new_data_chunk","","",54,null],[11,"new_headers","","",54,null],[11,"end_of_stream","","",54,null],[11,"rst_stream","","",54,null],[11,"new_settings","","",54,null],[11,"on_ping","","",54,null],[11,"on_pong","","",54,null],[0,"server","solicit::http","The module contains a number of reusable components for implementing the server side of an\nHTTP/2 connection.",null,null],[3,"ServerSession","solicit::http::server","An implementation of the `Session` trait for a server-side HTTP/2 connection.",null,null],[3,"ServerConnection","","The struct provides a more convenient API for server-related functionality of an HTTP/2\nconnection, such as sending a response back to the client.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",55,null],[8,"StreamFactory","","The `ServerSession` requires an instance of a type that implements this trait in order to\ncreate a new `Stream` instance once it detects that a client has initiated a new stream. The\nfactory should take care to provide an appropriate `Stream` implementation that will be able to\nhandle reading the request and generating the response, according to the needs of the\nunderlying application.",null,null],[16,"Stream","","",56,null],[10,"create","","Create a new `Stream` with the given ID.",56,null],[11,"new","","",57,{"inputs":[{"name":"state"},{"name":"f"},{"name":"s"}],"output":{"name":"serversession"}}],[11,"new_data_chunk","","",57,null],[11,"new_headers","","",57,null],[11,"end_of_stream","","",57,null],[11,"rst_stream","","",57,null],[11,"new_settings","","",57,null],[11,"on_ping","","",57,null],[11,"on_pong","","",57,null],[11,"with_connection","","Creates a new `ServerConnection` that will use the given `HttpConnection` for its\nunderlying HTTP/2 communication. The `state` and `factory` represent, respectively, the\ninitial state of the connection and an instance of the `StreamFactory` type (allowing the\nclient to handle newly created streams).",55,{"inputs":[{"name":"httpconnection"},{"name":"state"},{"name":"f"}],"output":{"name":"serverconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",55,null],[11,"send_settings","","Send the current settings associated to the `ServerConnection` to the client.",55,null],[11,"expect_settings","","Handles the next frame on the given `ReceiveFrame` instance and expects it to be a\n(non-ACK) SETTINGS frame. Returns an error if not.",55,null],[11,"handle_next_frame","","Fully handles the next frame provided by the given `ReceiveFrame` instance.\nHandling the frame can cause the session state of the `ServerConnection` to update.",55,null],[11,"start_response","","Starts a response on the stream with the given ID by sending the given headers.",55,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",55,null],[6,"StreamId","solicit::http","An alias for the type that represents the ID of an HTTP/2 stream",null,null],[6,"OwnedHeader","","An alias for the type that represents an HTTP/2 header where both the name and the value is\nowned.",null,null],[6,"StaticHeader","","A type alias for a `Header` where both the name, as well as the value must have a `&#39;static`\nlifetime if it is borrowed. Owned parts are allowed.",null,null],[6,"HttpResult","","A convenience `Result` type that has the `HttpError` type as the error\ntype and a generic Ok result type.",null,null],[6,"StaticResponse","","A type alias for a `Response` where all headers&#39; names and values must have a `&#39;static`\nlifetime if they are borrowed. This means that the parts can also be owned.",null,null],[17,"INITIAL_CONNECTION_WINDOW_SIZE","","The initial size of the connections&#39; flow control window.",null,null],[17,"ALPN_PROTOCOLS","","A set of protocol names that the library should use to indicate that HTTP/2\nis supported during protocol negotiation (NPN or ALPN).\nWe include some of the drafts&#39; protocol names, since there is basically no\ndifference for all intents and purposes (and some servers out there still\nonly officially advertise draft support).\nTODO: Eventually only use &quot;h2&quot;.",null,null],[11,"fmt","","",58,null],[11,"from","","",58,{"inputs":[{"name":"vec"}],"output":{"name":"headerpart"}}],[11,"from","","",58,null],[11,"from","","",58,{"inputs":[{"name":"cow"}],"output":{"name":"headerpart"}}],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"from","","",58,null],[11,"eq","","",59,null],[11,"eq","","",60,null],[11,"clone","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"new","","Creates a new `Header` with the given name and value.",60,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"header"}}],[11,"name","","Return a borrowed representation of the `Header` name.",60,null],[11,"value","","Return a borrowed representation of the `Header` value.",60,null],[11,"fmt","","",60,null],[11,"into","","",60,null],[11,"into","","",59,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"from","","Converts the given `u32` number to the appropriate `ErrorCode` variant.",2,{"inputs":[{"name":"u32"}],"output":{"name":"errorcode"}}],[11,"as_ref","","",2,null],[11,"into","","",2,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",61,null],[11,"new","","Creates a new `ConnectionError` with no associated debug data.",61,{"inputs":[{"name":"errorcode"}],"output":{"name":"connectionerror"}}],[11,"with_debug_data","","Creates a new `ConnectionError` with the given associated debug data.",61,{"inputs":[{"name":"errorcode"},{"name":"vec"}],"output":{"name":"connectionerror"}}],[11,"error_code","","The error code of the underlying error.",61,null],[11,"debug_data","","The debug data attached to the connection error, if any.",61,null],[11,"debug_str","","The debug data interpreted as a string, if possible.",61,null],[11,"fmt","","",61,null],[11,"description","","",61,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"error"}],"output":{"name":"httperror"}}],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"cause","","",3,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"try_increase","","Tries to increase the window size by the given delta. If the WindowSize would overflow the\nmaximum allowed value (2^31 - 1), returns an error case. If the increase succeeds, returns\n`Ok`.",62,null],[11,"try_decrease","","Tries to decrease the size of the window by the given delta.",62,null],[11,"new","","Creates a new `WindowSize` with the given initial size.",62,{"inputs":[{"name":"i32"}],"output":{"name":"windowsize"}}],[11,"size","","Returns the current size of the window.",62,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"as_bytes","","Returns a byte string representing the scheme.",4,null],[11,"clone","","",0,null],[11,"new","","Creates a new `Response` with all the components already provided.",0,{"inputs":[{"name":"streamid"},{"name":"vec"},{"name":"vec"}],"output":{"name":"response"}}],[11,"status_code","","Gets the response status code from the pseudo-header. If the response\ndoes not contain the response as the first pseuo-header, an error is\nreturned as such a response is malformed.",0,null],[11,"clone","","",1,null],[0,"client","solicit","The module contains implementations of HTTP/2 clients that could be\ndirectly used to access HTTP/2 servers, i.e. send requests and read\nresponses.",null,null],[3,"SimpleClient","solicit::client","A struct implementing a simple HTTP/2 client.",null,null],[3,"Client","","A struct representing an HTTP/2 client that receives responses to its\nrequests asynchronously. Additionally, this client can be cloned and all\nclones can issue (concurrently) requests to the server, using the same\nunderlying HTTP/2 connection.",null,null],[4,"ClientConnectError","","Error that occur when creating/connecting a client",null,null],[13,"Io","","Some sort of io::Error",63,null],[13,"HttpConnector","","Error from the http connector",63,null],[11,"with_stream","","Creates a new `SimpleClient` instance that will use the given `stream` instance for its\nunderlying communication with the host. Additionally, requires the host identifier and the\nscheme of the connection.",64,{"inputs":[{"name":"s"},{"name":"string"},{"name":"httpscheme"}],"output":{"name":"httpresult"}}],[11,"with_connector","","A convenience constructor that first tries to establish an HTTP/2\nconnection by using the given connector instance (an implementation of\nthe `HttpConnect` trait).",64,{"inputs":[{"name":"c"}],"output":{"name":"httpresult"}}],[11,"request","","Send a request to the server. Blocks until the entire request has been\nsent.",64,null],[11,"get_response","","Gets the response for the stream with the given ID. If a valid stream ID\nis given, it blocks until a response is received.",64,null],[11,"get","","Performs a GET request on the given path. This is a shortcut method for\ncalling `request` followed by `get_response` for the returned stream ID.",64,null],[11,"post","","Performs a POST request on the given path.",64,null],[11,"clone","","",65,null],[11,"drop","","",65,null],[11,"with_connector","","Creates a brand new HTTP/2 client. This means that a new HTTP/2\nconnection will be established behind the scenes. A thread is spawned\nto handle the connection in the background, so that the thread that\ncreates the client can use it asynchronously.",65,{"inputs":[{"name":"c"}],"output":{"name":"result"}}],[11,"request","","Issues a new request to the server.",65,null],[11,"get","","Issues a GET request to the server.",65,null],[11,"post","","Issues a POST request to the server.",65,null],[11,"ping","","Sends a PING to the server",65,null],[11,"fmt","","",63,null],[11,"cause","","",63,null],[11,"description","","",63,null],[11,"fmt","","",63,null],[11,"from","","",63,{"inputs":[{"name":"e"}],"output":{"name":"self"}}],[11,"from","","",63,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"server","solicit","The module contains a simple HTTP/2 server implementation.",null,null],[3,"ServerRequest","solicit::server","The struct represents a fully received request.",null,null],[12,"stream_id","","",66,null],[12,"headers","","",66,null],[12,"body","","",66,null],[3,"SimpleServer","","The struct implements a simple HTTP/2 server that allows users to register a request handler (a\ncallback taking a `ServerRequest` and returning a `Response`) which is run on all received\nrequests.",null,null],[11,"new","","Creates a new `SimpleServer` that will use the given `TransportStream` to communicate to\nthe client. Assumes that the stream is fully uninitialized -- no preface sent or read yet.",67,{"inputs":[{"name":"ts"},{"name":"h"}],"output":{"name":"httpresult"}}],[11,"handle_next","","Handles the next incoming frame, blocking to receive it if nothing is available on the\nunderlying stream.",67,null]],"paths":[[3,"Response"],[3,"Request"],[4,"ErrorCode"],[4,"HttpError"],[4,"HttpScheme"],[8,"FrameBuilder"],[3,"DataFrame"],[4,"DataFlag"],[3,"DataChunk"],[3,"StreamDependency"],[3,"HeadersFrame"],[4,"HeadersFlag"],[3,"RstStreamFrame"],[3,"SettingsFrame"],[4,"HttpSetting"],[4,"SettingsFlag"],[3,"GoawayFrame"],[3,"PingFlag"],[3,"PingFrame"],[3,"WindowUpdateFrame"],[8,"FrameIR"],[8,"Flag"],[8,"Frame"],[3,"NoFlag"],[3,"RawFrame"],[8,"TransportStream"],[3,"TransportReceiveFrame"],[3,"HttpConnection"],[3,"DataChunk"],[4,"HttpFrame"],[4,"SendStatus"],[4,"EndStream"],[8,"SendFrame"],[8,"ReceiveFrame"],[3,"HttpConnectionSender"],[3,"DefaultStream"],[4,"StreamState"],[4,"StreamDataError"],[4,"StreamDataChunk"],[8,"Session"],[8,"SessionState"],[8,"Stream"],[3,"StreamIter"],[3,"DefaultSessionState"],[8,"DataPrioritizer"],[3,"SimplePrioritizer"],[3,"ClientStream"],[3,"CleartextConnector"],[3,"RequestStream"],[3,"ClientConnection"],[3,"TlsConnector"],[4,"TlsConnectError"],[8,"HttpConnect"],[3,"CleartextConnectError"],[3,"ClientSession"],[3,"ServerConnection"],[8,"StreamFactory"],[3,"ServerSession"],[3,"HeaderPart"],[6,"OwnedHeader"],[3,"Header"],[3,"ConnectionError"],[3,"WindowSize"],[4,"ClientConnectError"],[3,"SimpleClient"],[3,"Client"],[3,"ServerRequest"],[3,"SimpleServer"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["untrusted"] = {"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing, zero-allocation\nparsing of untrusted inputs in Rust.","items":[[3,"Input","untrusted","A wrapper around `&amp;&#39;a [u8]` that helps in writing panic-free code.",null,null],[3,"Reader","","A read-only, forward-only* cursor into the data in an `Input`.",null,null],[3,"Mark","","An index into the already-parsed input of a `Reader`.",null,null],[3,"EndOfInput","","The error type used to indicate the end of the input was reached before the\noperation could be completed.",null,null],[5,"read_all_optional","","Calls `read` with the given input as a `Reader`, ensuring that `read`\nconsumed the entire input. When `input` is `None`, `read` will be\ncalled with `None`.",null,{"inputs":[{"name":"option"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"from","","Construct a new `Input` for the given input `bytes`.",0,null],[11,"is_empty","","Returns `true` if the input is empty and false otherwise.",0,null],[11,"iter","","Returns an iterator over the input.",0,null],[11,"len","","Returns the length of the `Input`.",0,null],[11,"read_all","","Calls `read` with the given input as a `Reader`, ensuring that `read`\nconsumed the entire input. If `read` does not consume the entire input,\n`incomplete_read` is returned.",0,null],[11,"read_all_mut","","Like `read_all`, except taking an `FnMut`.",0,null],[11,"as_slice_less_safe","","Access the input as a slice so it can be processed by functions that\nare not written using the Input/Reader framework.",0,null],[11,"eq","","",0,null],[11,"fmt","","",1,null],[11,"new","","Construct a new Reader for the given input. Use `read_all`,\n`read_all_mut`, or `read_all_optional` instead of `Reader::new`\nwhenever possible.",1,{"inputs":[{"name":"input"}],"output":{"name":"reader"}}],[11,"at_end","","Returns `true` if the reader is at the end of the input, and `false`\notherwise.",1,null],[11,"get_input_between_marks","","Returns an `Input` for already-parsed input that has had its boundaries\nmarked using `mark`.",1,null],[11,"mark","","Return the current position of the `Reader` for future use in a call\nto `get_input_between_marks`.",1,null],[11,"peek","","Returns `true` if there is at least one more byte in the input and that\nbyte is equal to `b`, and false otherwise.",1,null],[11,"read_byte","","Reads the next input byte.",1,null],[11,"skip","","Skips `num_bytes` of the input.",1,null],[11,"skip_and_get_input","","Skips `num_bytes` of the input, returning the skipped input as an `Input`.",1,null],[11,"skip_to_end","","Skips the reader to the end of the input, returning the skipped input\nas an `Input`.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null]],"paths":[[3,"Input"],[3,"Reader"],[3,"EndOfInput"]]};
initSearch(searchIndex);
